

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Apr 12 11:13:40 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   115                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   116                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   117   000000                     
   118                           ; Generated 23/03/2023 GMT
   119                           ; 
   120                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   121                           ; All rights reserved.
   122                           ; 
   123                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   124                           ; 
   125                           ; Redistribution and use in source and binary forms, with or without modification, are
   126                           ; permitted provided that the following conditions are met:
   127                           ; 
   128                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   129                           ;        conditions and the following disclaimer.
   130                           ; 
   131                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   132                           ;        of conditions and the following disclaimer in the documentation and/or other
   133                           ;        materials provided with the distribution. Publication is not required when
   134                           ;        this file is used in an embedded application.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC18F4620 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152   000000                     
   153                           	psect	idataCOMRAM
   154   004CFC                     __pidataCOMRAM:
   155                           	callstack 0
   156                           
   157                           ;initializer for _flag4
   158   004CFC  01                 	db	1
   159                           
   160                           ;initializer for _flag3
   161   004CFD  01                 	db	1
   162                           
   163                           ;initializer for _flag2
   164   004CFE  01                 	db	1
   165                           
   166                           ;initializer for _flag1
   167   004CFF  01                 	db	1
   168                           
   169                           ;initializer for _relay
   170   004D00  0A                 	db	10
   171                           
   172                           ;initializer for _led5
   173   004D01  73                 	db	115
   174                           
   175                           ;initializer for _led3
   176   004D02  63                 	db	99
   177                           
   178                           	psect	idataBANK0
   179   004B7A                     __pidataBANK0:
   180                           	callstack 0
   181                           
   182                           ;initializer for _lat_regisrers
   183   004B7A  89                 	db	137
   184   004B7B  0F                 	db	15
   185   004B7C  8A                 	db	138
   186   004B7D  0F                 	db	15
   187   004B7E  8B                 	db	139
   188   004B7F  0F                 	db	15
   189   004B80  8C                 	db	140
   190   004B81  0F                 	db	15
   191   004B82  8D                 	db	141
   192   004B83  0F                 	db	15
   193                           
   194                           ;initializer for _tris_regisrers
   195   004B84  92                 	db	146
   196   004B85  0F                 	db	15
   197   004B86  93                 	db	147
   198   004B87  0F                 	db	15
   199   004B88  94                 	db	148
   200   004B89  0F                 	db	15
   201   004B8A  95                 	db	149
   202   004B8B  0F                 	db	15
   203   004B8C  96                 	db	150
   204   004B8D  0F                 	db	15
   205                           
   206                           ;initializer for _button_2
   207   004B8E  72                 	db	114
   208   004B8F  00                 	db	0
   209   004B90  00                 	db	0
   210                           
   211                           ;initializer for _button_1
   212   004B91  52                 	db	82
   213   004B92  00                 	db	0
   214   004B93  00                 	db	0
   215                           
   216                           ;initializer for _relay_2
   217   004B94  32                 	db	50
   218                           
   219                           ;initializer for _relay_1
   220   004B95  02                 	db	2
   221                           
   222                           ;initializer for _led_2
   223   004B96  42                 	db	66
   224                           
   225                           ;initializer for _led_1
   226   004B97  12                 	db	18
   227                           
   228                           ;initializer for _lcd_4bit
   229   004B98  2B                 	db	43
   230   004B99  03                 	db	3
   231   004B9A  0B                 	db	11
   232   004B9B  13                 	db	19
   233   004B9C  1B                 	db	27
   234   004B9D  23                 	db	35
   235                           
   236                           ;initializer for _motor_2
   237   004B9E  32                 	db	50
   238   004B9F  3A                 	db	58
   239                           
   240                           ;initializer for _motor_1
   241   004BA0  02                 	db	2
   242   004BA1  2A                 	db	42
   243                           
   244                           	psect	idataBANK1
   245   0048FC                     __pidataBANK1:
   246                           	callstack 0
   247                           
   248                           ;initializer for _port_regisrers
   249   0048FC  80                 	db	128
   250   0048FD  0F                 	db	15
   251   0048FE  81                 	db	129
   252   0048FF  0F                 	db	15
   253   004900  82                 	db	130
   254   004901  0F                 	db	15
   255   004902  83                 	db	131
   256   004903  0F                 	db	15
   257   004904  84                 	db	132
   258   004905  0F                 	db	15
   259                           
   260                           ;initializer for _matrix_keypad_1
   261   004906  03                 	db	3
   262   004907  0B                 	db	11
   263   004908  13                 	db	19
   264   004909  1B                 	db	27
   265   00490A  63                 	db	99
   266   00490B  6B                 	db	107
   267   00490C  73                 	db	115
   268   00490D  7B                 	db	123
   269                           
   270                           ;initializer for _mssp_i2c
   271   00490E  86A0               	dw	34464
   272   004910  0001               	dw	1
   273   004912  06                 	db	6
   274   004913  60                 	db	96
   275   004914  08                 	db	8
   276   004915  00                 	db	0
   277   004916  00                 	db	0
   278   004917  00                 	db	0
   279   004918  00                 	db	0
   280   004919  6C                 	db	low _mssp_I2C_DefaultInterruptHandler
   281   00491A  26                 	db	high _mssp_I2C_DefaultInterruptHandler
   282   00491B  00                 	db	0
   283   00491C  00                 	db	0
   284                           
   285                           ;initializer for _ccp1_
   286   00491D  00                 	db	0
   287   00491E  00                 	db	0
   288   00491F  02                 	db	2
   289   004920  0E                 	db	14
   290   004921  12                 	db	18
   291   004922  0000               	dw	0
   292   004924  0000               	dw	0
   293   004926  11                 	db	17
   294                           
   295                           ;initializer for _INT_1
   296   004927  22                 	db	low _int1_interrupt
   297   004928  4D                 	db	high _int1_interrupt
   298   004929  49                 	db	73
   299   00492A  01                 	db	1
   300   00492B  01                 	db	1
   301   00492C  01                 	db	1
   302                           
   303                           ;initializer for _INT_0
   304   00492D  24                 	db	low _into_interrupt
   305   00492E  4D                 	db	high _into_interrupt
   306   00492F  41                 	db	65
   307   004930  01                 	db	1
   308   004931  00                 	db	0
   309   004932  01                 	db	1
   310                           
   311                           ;initializer for _ADC_
   312   004933  00                 	db	0
   313   004934  00                 	db	0
   314   004935  00                 	db	0
   315   004936  05                 	db	5
   316   004937  05                 	db	5
   317   004938  02                 	db	2
   318                           
   319                           	psect	smallconst
   320   001000                     __psmallconst:
   321                           	callstack 0
   322   001000  00                 	db	0
   323   001001                     _value_ret:
   324                           	callstack 0
   325   001001  37                 	db	55
   326   001002  38                 	db	56
   327   001003  39                 	db	57
   328   001004  2F                 	db	47
   329   001005  34                 	db	52
   330   001006  35                 	db	53
   331   001007  36                 	db	54
   332   001008  2A                 	db	42
   333   001009  31                 	db	49
   334   00100A  32                 	db	50
   335   00100B  33                 	db	51
   336   00100C  2D                 	db	45
   337   00100D  23                 	db	35
   338   00100E  30                 	db	48
   339   00100F  3D                 	db	61
   340   001010  2B                 	db	43
   341   001011                     __end_of_value_ret:
   342                           	callstack 0
   343   000000                     _TMR1	set	4046
   344   000000                     _SPBRGH	set	4016
   345   000000                     _SPBRG	set	4015
   346   000000                     _TXREG	set	4013
   347   000000                     _TXSTAbits	set	4012
   348   000000                     _RCREG	set	4014
   349   000000                     _RCSTAbits	set	4011
   350   000000                     _TMR3L	set	4018
   351   000000                     _TMR3H	set	4019
   352   000000                     _T3CONbits	set	4017
   353   000000                     _TMR2	set	4044
   354   000000                     _T2CONbits	set	4042
   355   000000                     _T1CONbits	set	4045
   356   000000                     _TMR0L	set	4054
   357   000000                     _TMR0H	set	4055
   358   000000                     _INTCON2bits	set	4081
   359   000000                     _SSPBUF	set	4041
   360   000000                     _SSPSTATbits	set	4039
   361   000000                     _SSPADD	set	4040
   362   000000                     _SSPCON2bits	set	4037
   363   000000                     _SSPCON1bits	set	4038
   364   000000                     _EECON2	set	4007
   365   000000                     _ADCON1bits	set	4033
   366   000000                     _ADRESL	set	4035
   367   000000                     _ADRESH	set	4036
   368   000000                     _RC6	set	31766
   369   000000                     _PORTB	set	3969
   370   000000                     _PORTA	set	3968
   371   000000                     _TRISD	set	3989
   372   000000                     _TRISC	set	3988
   373   000000                     _PR2	set	4043
   374   000000                     _TRISB	set	3987
   375   000000                     _TRISE	set	3990
   376   000000                     _PORTBbits	set	3969
   377   000000                     _TRISCbits	set	3988
   378   000000                     _TMR1H	set	4047
   379   000000                     _TMR1L	set	4046
   380   000000                     _PORTC	set	3970
   381   000000                     _T0CONbits	set	4053
   382   000000                     _INTCON3bits	set	4080
   383   000000                     _INTCONbits	set	4082
   384   000000                     _PIE1bits	set	3997
   385   000000                     _ADCON2bits	set	4032
   386   000000                     _ADCON0bits	set	4034
   387   000000                     _LATA	set	3977
   388   000000                     _PORTE	set	3972
   389   000000                     _PORTD	set	3971
   390   000000                     _TRISA	set	3986
   391   000000                     _PIE2bits	set	4000
   392   000000                     _CCP2CONbits	set	4026
   393   000000                     _CCP1CONbits	set	4029
   394   000000                     _PIR1bits	set	3998
   395   000000                     _CCPR1L	set	4030
   396   000000                     _CCPR2L	set	4027
   397   000000                     _IPR2bits	set	4002
   398   000000                     _EECON1bits	set	4006
   399   000000                     _EEDATA	set	4008
   400   000000                     _EEADR	set	4009
   401   000000                     _EEADRH	set	4010
   402   000000                     _PIR2bits	set	4001
   403   000000                     _LATE	set	3981
   404   000000                     _LATD	set	3980
   405   000000                     _LATC	set	3979
   406   000000                     _LATB	set	3978
   407   000000                     _BAUDCONbits	set	4024
   408   001011                     STR_9:
   409   001011  4E                 	db	78	;'N'
   410   001012  6F                 	db	111	;'o'
   411   001013  72                 	db	114	;'r'
   412   001014  6D                 	db	109	;'m'
   413   001015  61                 	db	97	;'a'
   414   001016  6C                 	db	108	;'l'
   415   001017  20                 	db	32
   416   001018  73                 	db	115	;'s'
   417   001019  74                 	db	116	;'t'
   418   00101A  61                 	db	97	;'a'
   419   00101B  74                 	db	116	;'t'
   420   00101C  75                 	db	117	;'u'
   421   00101D  65                 	db	101	;'e'
   422   00101E  20                 	db	32
   423   00101F  20                 	db	32
   424   001020  20                 	db	32
   425   001021  20                 	db	32
   426   001022  20                 	db	32
   427   001023  00                 	db	0
   428   001024                     STR_7:
   429   001024  20                 	db	32
   430   001025  20                 	db	32
   431   001026  20                 	db	32
   432   001027  20                 	db	32
   433   001028  20                 	db	32
   434   001029  20                 	db	32
   435   00102A  20                 	db	32
   436   00102B  20                 	db	32
   437   00102C  20                 	db	32
   438   00102D  20                 	db	32
   439   00102E  20                 	db	32
   440   00102F  20                 	db	32
   441   001030  20                 	db	32
   442   001031  20                 	db	32
   443   001032  20                 	db	32
   444   001033  20                 	db	32
   445   001034  20                 	db	32
   446   001035  00                 	db	0
   447   001036                     STR_6:
   448   001036  64                 	db	100	;'d'
   449   001037  61                 	db	97	;'a'
   450   001038  6E                 	db	110	;'n'
   451   001039  67                 	db	103	;'g'
   452   00103A  65                 	db	101	;'e'
   453   00103B  72                 	db	114	;'r'
   454   00103C  6F                 	db	111	;'o'
   455   00103D  75                 	db	117	;'u'
   456   00103E  73                 	db	115	;'s'
   457   00103F  20                 	db	32
   458   001040  74                 	db	116	;'t'
   459   001041  65                 	db	101	;'e'
   460   001042  6D                 	db	109	;'m'
   461   001043  70                 	db	112	;'p'
   462   001044  20                 	db	32
   463   001045  21                 	db	33
   464   001046  00                 	db	0
   465   001047                     STR_5:
   466   001047  45                 	db	69	;'E'
   467   001048  72                 	db	114	;'r'
   468   001049  72                 	db	114	;'r'
   469   00104A  6F                 	db	111	;'o'
   470   00104B  72                 	db	114	;'r'
   471   00104C  20                 	db	32
   472   00104D  21                 	db	33
   473   00104E  21                 	db	33
   474   00104F  21                 	db	33
   475   001050  21                 	db	33
   476   001051  21                 	db	33
   477   001052  20                 	db	32
   478   001053  20                 	db	32
   479   001054  20                 	db	32
   480   001055  20                 	db	32
   481   001056  00                 	db	0
   482   001057                     STR_8:
   483   001057  57                 	db	87	;'W'
   484   001058  61                 	db	97	;'a'
   485   001059  72                 	db	114	;'r'
   486   00105A  6E                 	db	110	;'n'
   487   00105B  69                 	db	105	;'i'
   488   00105C  6E                 	db	110	;'n'
   489   00105D  67                 	db	103	;'g'
   490   00105E  20                 	db	32
   491   00105F  74                 	db	116	;'t'
   492   001060  65                 	db	101	;'e'
   493   001061  6D                 	db	109	;'m'
   494   001062  70                 	db	112	;'p'
   495   001063  20                 	db	32
   496   001064  21                 	db	33
   497   001065  00                 	db	0
   498   001066                     STR_4:
   499   001066  54                 	db	84	;'T'
   500   001067  65                 	db	101	;'e'
   501   001068  6D                 	db	109	;'m'
   502   001069  70                 	db	112	;'p'
   503   00106A  65                 	db	101	;'e'
   504   00106B  72                 	db	114	;'r'
   505   00106C  61                 	db	97	;'a'
   506   00106D  74                 	db	116	;'t'
   507   00106E  75                 	db	117	;'u'
   508   00106F  72                 	db	114	;'r'
   509   001070  65                 	db	101	;'e'
   510   001071  20                 	db	32
   511   001072  3A                 	db	58	;':'
   512   001073  00                 	db	0
   513   001074                     STR_1:
   514   001074  25                 	db	37
   515   001075  69                 	db	105	;'i'
   516   001076  00                 	db	0
   517   001077  00                 	db	0	; dummy byte at the end
   518   000000                     
   519                           ; #config settings
   520                           
   521                           	psect	cinit
   522   003CF6                     __pcinit:
   523                           	callstack 0
   524   003CF6                     start_initialization:
   525                           	callstack 0
   526   003CF6                     __initialization:
   527                           	callstack 0
   528                           
   529                           ; Initialize objects allocated to BANK1 (61 bytes)
   530                           ; load TBLPTR registers with __pidataBANK1
   531   003CF6  0EFC               	movlw	low __pidataBANK1
   532   003CF8  6EF6               	movwf	tblptrl,c
   533   003CFA  0E48               	movlw	high __pidataBANK1
   534   003CFC  6EF7               	movwf	tblptrh,c
   535   003CFE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   536   003D00  6EF8               	movwf	tblptru,c
   537   003D02  EE01  F000         	lfsr	0,__pdataBANK1
   538   003D06  EE10 F03D          	lfsr	1,61
   539   003D0A                     copy_data0:
   540   003D0A  0009               	tblrd		*+
   541   003D0C  CFF5 FFEE          	movff	tablat,postinc0
   542   003D10  50E5               	movf	postdec1,w,c
   543   003D12  50E1               	movf	fsr1l,w,c
   544   003D14  E1FA               	bnz	copy_data0
   545                           
   546                           ; Initialize objects allocated to BANK0 (40 bytes)
   547                           ; load TBLPTR registers with __pidataBANK0
   548   003D16  0E7A               	movlw	low __pidataBANK0
   549   003D18  6EF6               	movwf	tblptrl,c
   550   003D1A  0E4B               	movlw	high __pidataBANK0
   551   003D1C  6EF7               	movwf	tblptrh,c
   552   003D1E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   553   003D20  6EF8               	movwf	tblptru,c
   554   003D22  EE00  F0D7         	lfsr	0,__pdataBANK0
   555   003D26  EE10 F028          	lfsr	1,40
   556   003D2A                     copy_data1:
   557   003D2A  0009               	tblrd		*+
   558   003D2C  CFF5 FFEE          	movff	tablat,postinc0
   559   003D30  50E5               	movf	postdec1,w,c
   560   003D32  50E1               	movf	fsr1l,w,c
   561   003D34  E1FA               	bnz	copy_data1
   562                           
   563                           ; Initialize objects allocated to COMRAM (7 bytes)
   564                           ; load TBLPTR registers with __pidataCOMRAM
   565   003D36  0EFC               	movlw	low __pidataCOMRAM
   566   003D38  6EF6               	movwf	tblptrl,c
   567   003D3A  0E4C               	movlw	high __pidataCOMRAM
   568   003D3C  6EF7               	movwf	tblptrh,c
   569   003D3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   570   003D40  6EF8               	movwf	tblptru,c
   571   003D42  EE00  F06F         	lfsr	0,__pdataCOMRAM
   572   003D46  EE10 F007          	lfsr	1,7
   573   003D4A                     copy_data2:
   574   003D4A  0009               	tblrd		*+
   575   003D4C  CFF5 FFEE          	movff	tablat,postinc0
   576   003D50  50E5               	movf	postdec1,w,c
   577   003D52  50E1               	movf	fsr1l,w,c
   578   003D54  E1FA               	bnz	copy_data2
   579                           
   580                           ; Clear objects allocated to BANK1 (49 bytes)
   581   003D56  EE01  F03D         	lfsr	0,__pbssBANK1
   582   003D5A  0E31               	movlw	49
   583   003D5C                     clear_0:
   584   003D5C  6AEE               	clrf	postinc0,c
   585   003D5E  06E8               	decf	wreg,f,c
   586   003D60  E1FD               	bnz	clear_0
   587                           
   588                           ; Clear objects allocated to BANK0 (87 bytes)
   589   003D62  EE00  F080         	lfsr	0,__pbssBANK0
   590   003D66  0E57               	movlw	87
   591   003D68                     clear_1:
   592   003D68  6AEE               	clrf	postinc0,c
   593   003D6A  06E8               	decf	wreg,f,c
   594   003D6C  E1FD               	bnz	clear_1
   595                           
   596                           ; Clear objects allocated to COMRAM (5 bytes)
   597   003D6E  6A7A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   598   003D70  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   599   003D72  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   600   003D74  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   601   003D76  6A76               	clrf	__pbssCOMRAM& (0+255),c
   602   003D78                     end_of_initialization:
   603                           	callstack 0
   604   003D78                     __end_of__initialization:
   605                           	callstack 0
   606   003D78  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   607   003D7A  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   608   003D7C  0100               	movlb	0
   609   003D7E  EF3C  F008         	goto	_main	;jump to C main() function
   610                           
   611                           	psect	bssCOMRAM
   612   000076                     __pbssCOMRAM:
   613                           	callstack 0
   614   000076                     _i2c_data_4:
   615                           	callstack 0
   616   000076                     	ds	1
   617   000077                     _i2c_data_3:
   618                           	callstack 0
   619   000077                     	ds	1
   620   000078                     _i2c_data_2:
   621                           	callstack 0
   622   000078                     	ds	1
   623   000079                     _i2c_data_1:
   624                           	callstack 0
   625   000079                     	ds	1
   626   00007A                     _i2c_data:
   627                           	callstack 0
   628   00007A                     	ds	1
   629                           
   630                           	psect	dataCOMRAM
   631   00006F                     __pdataCOMRAM:
   632                           	callstack 0
   633   00006F                     _flag4:
   634                           	callstack 0
   635   00006F                     	ds	1
   636   000070                     _flag3:
   637                           	callstack 0
   638   000070                     	ds	1
   639   000071                     _flag2:
   640                           	callstack 0
   641   000071                     	ds	1
   642   000072                     _flag1:
   643                           	callstack 0
   644   000072                     	ds	1
   645   000073                     _relay:
   646                           	callstack 0
   647   000073                     	ds	1
   648   000074                     _led5:
   649                           	callstack 0
   650   000074                     	ds	1
   651   000075                     _led3:
   652                           	callstack 0
   653   000075                     	ds	1
   654                           
   655                           	psect	bssBANK0
   656   000080                     __pbssBANK0:
   657                           	callstack 0
   658   000080                     _width:
   659                           	callstack 0
   660   000080                     	ds	2
   661   000082                     _prec:
   662                           	callstack 0
   663   000082                     	ds	2
   664   000084                     _USART_OVERRUN_Interrupthandler:
   665                           	callstack 0
   666   000084                     	ds	2
   667   000086                     _USART_FRAMERROR_Interrupthandler:
   668                           	callstack 0
   669   000086                     	ds	2
   670   000088                     _USART_RX_Interrupthandler:
   671                           	callstack 0
   672   000088                     	ds	2
   673   00008A                     _USART_TX_Interrupthandler:
   674                           	callstack 0
   675   00008A                     	ds	2
   676   00008C                     _Timer3_preload:
   677                           	callstack 0
   678   00008C                     	ds	2
   679   00008E                     _TIMER3_Interrupthandler:
   680                           	callstack 0
   681   00008E                     	ds	2
   682   000090                     _TIMER2_Interrupthandler:
   683                           	callstack 0
   684   000090                     	ds	2
   685   000092                     _Timer1_preload:
   686                           	callstack 0
   687   000092                     	ds	2
   688   000094                     _TIMER1_Interrupthandler:
   689                           	callstack 0
   690   000094                     	ds	2
   691   000096                     _Timer0_preload:
   692                           	callstack 0
   693   000096                     	ds	2
   694   000098                     _TIMER0_Interrupthandler:
   695                           	callstack 0
   696   000098                     	ds	2
   697   00009A                     _RB7_interrupthandler_low:
   698                           	callstack 0
   699   00009A                     	ds	2
   700   00009C                     _RB7_interrupthandler_high:
   701                           	callstack 0
   702   00009C                     	ds	2
   703   00009E                     _RB6_interrupthandler_low:
   704                           	callstack 0
   705   00009E                     	ds	2
   706   0000A0                     _RB6_interrupthandler_high:
   707                           	callstack 0
   708   0000A0                     	ds	2
   709   0000A2                     _RB5_interrupthandler_low:
   710                           	callstack 0
   711   0000A2                     	ds	2
   712   0000A4                     _RB5_interrupthandler_high:
   713                           	callstack 0
   714   0000A4                     	ds	2
   715   0000A6                     _RB4_interrupthandler_low:
   716                           	callstack 0
   717   0000A6                     	ds	2
   718   0000A8                     _RB4_interrupthandler_high:
   719                           	callstack 0
   720   0000A8                     	ds	2
   721   0000AA                     _Int2_interrupthandler:
   722                           	callstack 0
   723   0000AA                     	ds	2
   724   0000AC                     _Int1_interrupthandler:
   725                           	callstack 0
   726   0000AC                     	ds	2
   727   0000AE                     _Int0_interrupthandler:
   728                           	callstack 0
   729   0000AE                     	ds	2
   730   0000B0                     _I2C_Report_Receive_Overflow_InterruptHandle:
   731                           	callstack 0
   732   0000B0                     	ds	2
   733   0000B2                     _I2C_DefaultInterruptHandle:
   734                           	callstack 0
   735   0000B2                     	ds	2
   736   0000B4                     _I2C_Report_Write_Collision_InterruptHandler:
   737                           	callstack 0
   738   0000B4                     	ds	2
   739   0000B6                     _CCP2_Interrupthandler:
   740                           	callstack 0
   741   0000B6                     	ds	2
   742   0000B8                     _CCP1_Interrupthandler:
   743                           	callstack 0
   744   0000B8                     	ds	2
   745   0000BA                     _ADC_INTERRUPTHANDLER:
   746                           	callstack 0
   747   0000BA                     	ds	2
   748   0000BC                     _flags:
   749                           	callstack 0
   750   0000BC                     	ds	1
   751   0000BD                     _ret:
   752                           	callstack 0
   753   0000BD                     	ds	1
   754   0000BE                     _key_i2c_tran:
   755                           	callstack 0
   756   0000BE                     	ds	1
   757   0000BF                     _key_data_2:
   758                           	callstack 0
   759   0000BF                     	ds	1
   760   0000C0                     _key_data_1:
   761                           	callstack 0
   762   0000C0                     	ds	1
   763   0000C1                     _counter_:
   764                           	callstack 0
   765   0000C1                     	ds	1
   766   0000C2                     _i2c_ack:
   767                           	callstack 0
   768   0000C2                     	ds	1
   769   0000C3                     _counter:
   770                           	callstack 0
   771   0000C3                     	ds	1
   772   0000C4                     _ddc:
   773                           	callstack 0
   774   0000C4                     	ds	1
   775   0000C5                     _ccc:
   776                           	callstack 0
   777   0000C5                     	ds	1
   778   0000C6                     _l_direction:
   779                           	callstack 0
   780   0000C6                     	ds	1
   781   0000C7                     	ds	1
   782   0000C8                     _Timer2_preload:
   783                           	callstack 0
   784   0000C8                     	ds	1
   785   0000C9                     relay_toggle@F3075:
   786                           	callstack 0
   787   0000C9                     	ds	1
   788   0000CA                     relay_turn_off@F3070:
   789                           	callstack 0
   790   0000CA                     	ds	1
   791   0000CB                     relay_turn_on@F3065:
   792                           	callstack 0
   793   0000CB                     	ds	1
   794   0000CC                     relay_intialize@F3060:
   795                           	callstack 0
   796   0000CC                     	ds	1
   797   0000CD                     led_toggle@F3075:
   798                           	callstack 0
   799   0000CD                     	ds	1
   800   0000CE                     led_turn_off@F3070:
   801                           	callstack 0
   802   0000CE                     	ds	1
   803   0000CF                     led_turn_on@F3065:
   804                           	callstack 0
   805   0000CF                     	ds	1
   806   0000D0                     led_intialize@F3060:
   807                           	callstack 0
   808   0000D0                     	ds	1
   809   0000D1                     _Timer2:
   810                           	callstack 0
   811   0000D1                     	ds	4
   812   0000D5                     _value_1:
   813                           	callstack 0
   814   0000D5                     	ds	2
   815                           
   816                           	psect	dataBANK0
   817   0000D7                     __pdataBANK0:
   818                           	callstack 0
   819   0000D7                     _lat_regisrers:
   820                           	callstack 0
   821   0000D7                     	ds	10
   822   0000E1                     _tris_regisrers:
   823                           	callstack 0
   824   0000E1                     	ds	10
   825   0000EB                     _button_2:
   826                           	callstack 0
   827   0000EB                     	ds	3
   828   0000EE                     _button_1:
   829                           	callstack 0
   830   0000EE                     	ds	3
   831   0000F1                     _relay_2:
   832                           	callstack 0
   833   0000F1                     	ds	1
   834   0000F2                     _relay_1:
   835                           	callstack 0
   836   0000F2                     	ds	1
   837   0000F3                     _led_2:
   838                           	callstack 0
   839   0000F3                     	ds	1
   840   0000F4                     _led_1:
   841                           	callstack 0
   842   0000F4                     	ds	1
   843   0000F5                     _lcd_4bit:
   844                           	callstack 0
   845   0000F5                     	ds	6
   846   0000FB                     _motor_2:
   847                           	callstack 0
   848   0000FB                     	ds	2
   849   0000FD                     _motor_1:
   850                           	callstack 0
   851   0000FD                     	ds	2
   852                           
   853                           	psect	bssBANK1
   854   00013D                     __pbssBANK1:
   855                           	callstack 0
   856   00013D                     _dbuf:
   857                           	callstack 0
   858   00013D                     	ds	32
   859   00015D                     	ds	6
   860   000163                     _string:
   861                           	callstack 0
   862   000163                     	ds	6
   863   000169                     _Timer3_1:
   864                           	callstack 0
   865   000169                     	ds	5
   866                           
   867                           	psect	dataBANK1
   868   000100                     __pdataBANK1:
   869                           	callstack 0
   870   000100                     _port_regisrers:
   871                           	callstack 0
   872   000100                     	ds	10
   873   00010A                     _matrix_keypad_1:
   874                           	callstack 0
   875   00010A                     	ds	8
   876   000112                     _mssp_i2c:
   877                           	callstack 0
   878   000112                     	ds	15
   879   000121                     _ccp1_:
   880                           	callstack 0
   881   000121                     	ds	10
   882   00012B                     _INT_1:
   883                           	callstack 0
   884   00012B                     	ds	6
   885   000131                     _INT_0:
   886                           	callstack 0
   887   000131                     	ds	6
   888   000137                     _ADC_:
   889                           	callstack 0
   890   000137                     	ds	6
   891                           
   892                           	psect	cstackBANK1
   893   00016E                     __pcstackBANK1:
   894                           	callstack 0
   895   00016E                     _main$5571:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x0
   899   00016E                     	ds	4
   900                           
   901                           	psect	cstackCOMRAM
   902   000001                     __pcstackCOMRAM:
   903                           	callstack 0
   904   000001                     RB4_ISR@value:
   905                           	callstack 0
   906   000001                     RB5_ISR@value:
   907                           	callstack 0
   908   000001                     RB6_ISR@value:
   909                           	callstack 0
   910   000001                     RB7_ISR@value:
   911                           	callstack 0
   912   000001                     
   913                           ; 1 bytes @ 0x0
   914   000001                     	ds	1
   915   000002                     ??_interrupt_manager:
   916                           
   917                           ; 1 bytes @ 0x1
   918   000002                     	ds	2
   919   000004                     ??_adc_channel_port_confige:
   920   000004                     ?___awdiv:
   921                           	callstack 0
   922   000004                     ?___awmod:
   923                           	callstack 0
   924   000004                     ?___lmul:
   925                           	callstack 0
   926   000004                     ?___xxtofl:
   927                           	callstack 0
   928   000004                     ccp1_pwm_start@ret:
   929                           	callstack 0
   930   000004                     ccp1_pwm_set_stop@ret:
   931                           	callstack 0
   932   000004                     GPIO_pIN_TOGGLE_LOGIC@config_pin:
   933                           	callstack 0
   934   000004                     Timer2_init@Timer2:
   935                           	callstack 0
   936   000004                     ADC_start_conversion@ADC_conf:
   937                           	callstack 0
   938   000004                     ADC_ISconversion_done@ADC_conf:
   939                           	callstack 0
   940   000004                     ADC_ISconversion_result@ADC_conf:
   941                           	callstack 0
   942   000004                     select_result_format@ADC_conf:
   943                           	callstack 0
   944   000004                     configure_voltage_ref@ADC_conf:
   945                           	callstack 0
   946   000004                     GPIO_pIN_DIRECTION_INTIALIZE@config_pin:
   947                           	callstack 0
   948   000004                     GPIO_pIN_WRITE_LOGIC@config_pin:
   949                           	callstack 0
   950   000004                     I2C_Slave_Mode_Configurations@i2c_obj:
   951                           	callstack 0
   952   000004                     MSSP_I2C_Interrupt_Configurations@i2c_obj:
   953                           	callstack 0
   954   000004                     interrupt_intx_enable@INTERRUPT_INTX:
   955                           	callstack 0
   956   000004                     interrupt_intx_disable@INTERRUPT_INTX:
   957                           	callstack 0
   958   000004                     interrupt_intx_edge_inti@INTERRUPT_INTX:
   959                           	callstack 0
   960   000004                     interrupt_intx_clear@INTERRUPT_INTX:
   961                           	callstack 0
   962   000004                     INT0_setinterrupthandler@interrupthandler:
   963                           	callstack 0
   964   000004                     INT1_setinterrupthandler@interrupthandler:
   965                           	callstack 0
   966   000004                     INT2_setinterrupthandler@interrupthandler:
   967                           	callstack 0
   968   000004                     timer3_mode_cfg@Timer3:
   969                           	callstack 0
   970   000004                     timer3_reg_bit_cfg@Timer3:
   971                           	callstack 0
   972   000004                     ___awdiv@dividend:
   973                           	callstack 0
   974   000004                     ___awmod@dividend:
   975                           	callstack 0
   976   000004                     memset@dest:
   977                           	callstack 0
   978   000004                     fputc@c:
   979                           	callstack 0
   980   000004                     ___lmul@multiplier:
   981                           	callstack 0
   982   000004                     ___xxtofl@val:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x3
   986   000004                     	ds	1
   987   000005                     ??_GPIO_pIN_TOGGLE_LOGIC:
   988   000005                     ??_Timer2_init:
   989                           
   990                           ; 1 bytes @ 0x4
   991   000005                     	ds	1
   992   000006                     ??_GPIO_pIN_DIRECTION_INTIALIZE:
   993   000006                     ??_I2C_Slave_Mode_Configurations:
   994   000006                     ??_interrupt_intx_disable:
   995   000006                     ??_interrupt_intx_clear:
   996   000006                     ??_interrupt_intx_edge_inti:
   997   000006                     ??_interrupt_intx_enable:
   998   000006                     ADC_start_conversion@ret:
   999                           	callstack 0
  1000   000006                     ADC_ISconversion_done@conversion_status:
  1001                           	callstack 0
  1002   000006                     ADC_ISconversion_result@conversion_result:
  1003                           	callstack 0
  1004   000006                     adc_channel_port_confige@ADC_CHANNAL_SELECT:
  1005                           	callstack 0
  1006   000006                     GPIO_pIN_WRITE_LOGIC@logic:
  1007                           	callstack 0
  1008   000006                     fputc@fp:
  1009                           	callstack 0
  1010   000006                     interrupt_intx_sethandler@INTERRUPT_INTX:
  1011                           	callstack 0
  1012   000006                     Timer3_init@Timer3:
  1013                           	callstack 0
  1014   000006                     ___awdiv@divisor:
  1015                           	callstack 0
  1016   000006                     ___awmod@divisor:
  1017                           	callstack 0
  1018   000006                     memset@c:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x5
  1022   000006                     	ds	1
  1023   000007                     ??_GPIO_pIN_WRITE_LOGIC:
  1024   000007                     ??_fputc:
  1025   000007                     ??_ADC_ISconversion_result:
  1026   000007                     ADC_ISconversion_done@ret:
  1027                           	callstack 0
  1028   000007                     ADC_inti@ADC_conf:
  1029                           	callstack 0
  1030   000007                     ADC_select_channal@ADC_conf:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x6
  1034   000007                     	ds	1
  1035   000008                     ??_interrupt_intx_sethandler:
  1036   000008                     ??_Timer3_init:
  1037   000008                     ??___xxtofl:
  1038   000008                     interrupt_intx_enable@ret:
  1039                           	callstack 0
  1040   000008                     interrupt_intx_disable@ret:
  1041                           	callstack 0
  1042   000008                     interrupt_intx_edge_inti@ret:
  1043                           	callstack 0
  1044   000008                     interrupt_intx_clear@ret:
  1045                           	callstack 0
  1046   000008                     ___awdiv@counter:
  1047                           	callstack 0
  1048   000008                     ___awmod@counter:
  1049                           	callstack 0
  1050   000008                     memset@n:
  1051                           	callstack 0
  1052   000008                     ___lmul@multiplicand:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x7
  1056   000008                     	ds	1
  1057   000009                     ??_ADC_inti:
  1058   000009                     ADC_select_channal@ADC_CHANNAL_SELECT:
  1059                           	callstack 0
  1060   000009                     GPIO_pIN_TOGGLE_LOGIC@ret:
  1061                           	callstack 0
  1062   000009                     ___awdiv@sign:
  1063                           	callstack 0
  1064   000009                     ___awmod@sign:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x8
  1068   000009                     	ds	1
  1069   00000A                     ??_ADC_select_channal:
  1070   00000A                     ?_abs:
  1071                           	callstack 0
  1072   00000A                     led_toggle@led:
  1073                           	callstack 0
  1074   00000A                     ADC_ISconversion_result@ret:
  1075                           	callstack 0
  1076   00000A                     interrupt_intx_sethandler@ret:
  1077                           	callstack 0
  1078   00000A                     ___awdiv@quotient:
  1079                           	callstack 0
  1080   00000A                     memset@p:
  1081                           	callstack 0
  1082   00000A                     abs@a:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x9
  1086   00000A                     	ds	1
  1087   00000B                     ??_led_toggle:
  1088   00000B                     ADC_select_channal@ret:
  1089                           	callstack 0
  1090   00000B                     GPIO_pIN_DIRECTION_INTIALIZE@ret:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0xA
  1094   00000B                     	ds	1
  1095   00000C                     ??_abs:
  1096   00000C                     led_toggle@pin_config:
  1097                           	callstack 0
  1098   00000C                     GPIO_pIN_WRITE_LOGIC@ret:
  1099                           	callstack 0
  1100   00000C                     ___xxtofl@sign:
  1101                           	callstack 0
  1102   00000C                     ADC_get_conversion_blocking@ADC_conf:
  1103                           	callstack 0
  1104   00000C                     ___lmul@product:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0xB
  1108   00000C                     	ds	1
  1109   00000D                     lcd_send_4bits@lcd:
  1110                           	callstack 0
  1111   00000D                     lcd_4bit_send_enable_signal@lcd:
  1112                           	callstack 0
  1113   00000D                     morot_turn_right@motor_pin:
  1114                           	callstack 0
  1115   00000D                     morot_turn_left@motor_pin:
  1116                           	callstack 0
  1117   00000D                     morot_stop@motor_pin:
  1118                           	callstack 0
  1119   00000D                     led_turn_on@led:
  1120                           	callstack 0
  1121   00000D                     led_turn_off@led:
  1122                           	callstack 0
  1123   00000D                     ___xxtofl@exp:
  1124                           	callstack 0
  1125   00000D                     GPIO_pIN_INTIALIZE@config_pin:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0xC
  1129   00000D                     	ds	1
  1130   00000E                     ??_lcd_4bit_send_enable_signal:
  1131   00000E                     ??_morot_turn_right:
  1132   00000E                     ??_morot_turn_left:
  1133   00000E                     ??_morot_stop:
  1134   00000E                     ??_led_turn_on:
  1135   00000E                     ??_led_turn_off:
  1136   00000E                     lcd_send_4bits@_data_command:
  1137                           	callstack 0
  1138   00000E                     ADC_get_conversion_blocking@ADC_CHANNAL_SELECT:
  1139                           	callstack 0
  1140   00000E                     vfpfcnvrt@fp:
  1141                           	callstack 0
  1142   00000E                     ___xxtofl@arg:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0xD
  1146   00000E                     	ds	1
  1147   00000F                     ??_GPIO_pIN_INTIALIZE:
  1148   00000F                     ??_lcd_send_4bits:
  1149   00000F                     lcd_4bit_send_enable_signal@ret:
  1150                           	callstack 0
  1151   00000F                     morot_turn_right@ret:
  1152                           	callstack 0
  1153   00000F                     morot_turn_left@ret:
  1154                           	callstack 0
  1155   00000F                     morot_stop@ret:
  1156                           	callstack 0
  1157   00000F                     led_turn_on@pin_config:
  1158                           	callstack 0
  1159   00000F                     led_turn_off@pin_config:
  1160                           	callstack 0
  1161   00000F                     ADC_get_conversion_blocking@conversion_status:
  1162                           	callstack 0
  1163   00000F                     vfpfcnvrt@fmt:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0xE
  1167   00000F                     	ds	1
  1168   000010                     ?___lldiv:
  1169                           	callstack 0
  1170   000010                     lcd_send_4bits@ret:
  1171                           	callstack 0
  1172   000010                     ADC_get_conversion_blocking@l_conversion_status:
  1173                           	callstack 0
  1174   000010                     GPIO_pIN_INTIALIZE@ret:
  1175                           	callstack 0
  1176   000010                     vfpfcnvrt@ap:
  1177                           	callstack 0
  1178   000010                     ___lldiv@dividend:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0xF
  1182   000010                     	ds	1
  1183   000011                     ??_vfpfcnvrt:
  1184   000011                     lcd_4bit_send_command@lcd:
  1185                           	callstack 0
  1186   000011                     lcd_4bit_send_char_data@lcd:
  1187                           	callstack 0
  1188   000011                     motor_intialize@motor_pin:
  1189                           	callstack 0
  1190   000011                     led_intialize@led:
  1191                           	callstack 0
  1192   000011                     ADC_get_conversion_blocking@ret:
  1193                           	callstack 0
  1194   000011                     interrupt_intx_pin_inti@INTERRUPT_INTX:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x10
  1198   000011                     	ds	1
  1199   000012                     ??_motor_intialize:
  1200   000012                     ??_led_intialize:
  1201   000012                     ?___fldiv:
  1202                           	callstack 0
  1203   000012                     lcd_4bit_send_command@command:
  1204                           	callstack 0
  1205   000012                     lcd_4bit_send_char_data@data:
  1206                           	callstack 0
  1207   000012                     vfpfcnvrt@done:
  1208                           	callstack 0
  1209   000012                     ___fldiv@b:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x11
  1213   000012                     	ds	1
  1214   000013                     lcd_4bit_send_command@ret:
  1215                           	callstack 0
  1216   000013                     lcd_4bit_send_char_data@ret:
  1217                           	callstack 0
  1218   000013                     motor_intialize@ret:
  1219                           	callstack 0
  1220   000013                     led_intialize@pin_config:
  1221                           	callstack 0
  1222   000013                     interrupt_intx_pin_inti@ret:
  1223                           	callstack 0
  1224   000013                     vfpfcnvrt@cp:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x12
  1228   000013                     	ds	1
  1229   000014                     lcd_4bit_intialize@lcd:
  1230                           	callstack 0
  1231   000014                     lcd_4bit_set_cursor@lcd:
  1232                           	callstack 0
  1233   000014                     Interrupt_Intx_Inti@INTERRUPT_INTX:
  1234                           	callstack 0
  1235   000014                     ___lldiv@divisor:
  1236                           	callstack 0
  1237   000014                     vfpfcnvrt@convarg:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x13
  1241   000014                     	ds	1
  1242   000015                     ??_lcd_4bit_intialize:
  1243   000015                     lcd_4bit_set_cursor@row:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x14
  1247   000015                     	ds	1
  1248   000016                     lcd_4bit_intialize@l_data_pins_counter:
  1249                           	callstack 0
  1250   000016                     lcd_4bit_set_cursor@coulmn:
  1251                           	callstack 0
  1252   000016                     Interrupt_Intx_Inti@ret:
  1253                           	callstack 0
  1254   000016                     ___fldiv@a:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x15
  1258   000016                     	ds	1
  1259   000017                     ??_lcd_4bit_set_cursor:
  1260   000017                     lcd_4bit_intialize@ret:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x16
  1264   000017                     	ds	1
  1265   000018                     vfpfcnvrt@c:
  1266                           	callstack 0
  1267   000018                     ___lldiv@quotient:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x17
  1271   000018                     	ds	1
  1272   000019                     ?_vfprintf:
  1273                           	callstack 0
  1274   000019                     lcd_4bit_set_cursor@ret:
  1275                           	callstack 0
  1276   000019                     vfprintf@fp:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x18
  1280   000019                     	ds	1
  1281   00001A                     ??___fldiv:
  1282   00001A                     lcd_4bit_send_string_pos@lcd:
  1283                           	callstack 0
  1284   00001A                     vfprintf@fmt:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x19
  1288   00001A                     	ds	1
  1289   00001B                     lcd_4bit_send_string_pos@row:
  1290                           	callstack 0
  1291   00001B                     vfprintf@ap:
  1292                           	callstack 0
  1293                           
  1294                           ; 1 bytes @ 0x1A
  1295   00001B                     	ds	1
  1296   00001C                     lcd_4bit_send_string_pos@column:
  1297                           	callstack 0
  1298   00001C                     ___lldiv@counter:
  1299                           	callstack 0
  1300   00001C                     vfprintf@cfmt:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x1B
  1304   00001C                     	ds	1
  1305   00001D                     ?_sprintf:
  1306                           	callstack 0
  1307   00001D                     lcd_4bit_send_string_pos@str:
  1308                           	callstack 0
  1309   00001D                     ccp1_init@ccp1_:
  1310                           	callstack 0
  1311   00001D                     sprintf@s:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x1C
  1315   00001D                     	ds	1
  1316   00001E                     ___fldiv@rem:
  1317                           	callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x1D
  1320   00001E                     	ds	1
  1321   00001F                     ??_ccp1_init:
  1322   00001F                     sprintf@fmt:
  1323                           	callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x1E
  1326   00001F                     	ds	3
  1327   000022                     ___fldiv@sign:
  1328                           	callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x21
  1331   000022                     	ds	1
  1332   000023                     ___fldiv@new_exp:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x22
  1336   000023                     	ds	1
  1337   000024                     sprintf@ap:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x23
  1341   000024                     	ds	1
  1342   000025                     ___fldiv@grs:
  1343                           	callstack 0
  1344   000025                     sprintf@f:
  1345                           	callstack 0
  1346                           
  1347                           ; 12 bytes @ 0x24
  1348   000025                     	ds	4
  1349   000029                     ___fldiv@bexp:
  1350                           	callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x28
  1353   000029                     	ds	1
  1354   00002A                     ___fldiv@aexp:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x29
  1358   00002A                     	ds	1
  1359   00002B                     ?___fladd:
  1360                           	callstack 0
  1361   00002B                     ___fladd@b:
  1362                           	callstack 0
  1363                           
  1364                           ; 4 bytes @ 0x2A
  1365   00002B                     	ds	4
  1366   00002F                     ___fladd@a:
  1367                           	callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x2E
  1370   00002F                     	ds	2
  1371   000031                     convert_uint8_to_string@str:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x30
  1375   000031                     	ds	2
  1376   000033                     ??___fladd:
  1377   000033                     convert_uint8_to_string@value:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x32
  1381   000033                     	ds	4
  1382   000037                     ___fladd@signs:
  1383                           	callstack 0
  1384                           
  1385                           ; 1 bytes @ 0x36
  1386   000037                     	ds	1
  1387   000038                     ___fladd@aexp:
  1388                           	callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x37
  1391   000038                     	ds	1
  1392   000039                     ___fladd@bexp:
  1393                           	callstack 0
  1394                           
  1395                           ; 1 bytes @ 0x38
  1396   000039                     	ds	1
  1397   00003A                     ___fladd@grs:
  1398                           	callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x39
  1401   00003A                     	ds	1
  1402   00003B                     ?___flmul:
  1403                           	callstack 0
  1404   00003B                     ?___flsub:
  1405                           	callstack 0
  1406   00003B                     ___flsub@b:
  1407                           	callstack 0
  1408   00003B                     ___flmul@b:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x3A
  1412   00003B                     	ds	4
  1413   00003F                     ___flsub@a:
  1414                           	callstack 0
  1415   00003F                     ___flmul@a:
  1416                           	callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x3E
  1419   00003F                     	ds	4
  1420   000043                     ??___flmul:
  1421   000043                     
  1422                           ; 1 bytes @ 0x42
  1423   000043                     	ds	4
  1424   000047                     ___flmul@sign:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x46
  1428   000047                     	ds	1
  1429   000048                     ___flmul@aexp:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x47
  1433   000048                     	ds	1
  1434   000049                     ___flmul@grs:
  1435                           	callstack 0
  1436                           
  1437                           ; 4 bytes @ 0x48
  1438   000049                     	ds	4
  1439   00004D                     ___flmul@bexp:
  1440                           	callstack 0
  1441                           
  1442                           ; 1 bytes @ 0x4C
  1443   00004D                     	ds	1
  1444   00004E                     ___flmul@prod:
  1445                           	callstack 0
  1446                           
  1447                           ; 4 bytes @ 0x4D
  1448   00004E                     	ds	4
  1449   000052                     ___flmul@temp:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x51
  1453   000052                     	ds	2
  1454   000054                     ?___fltol:
  1455                           	callstack 0
  1456   000054                     ___fltol@f1:
  1457                           	callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x53
  1460   000054                     	ds	4
  1461   000058                     ??___fltol:
  1462                           
  1463                           ; 1 bytes @ 0x57
  1464   000058                     	ds	4
  1465   00005C                     ___fltol@sign1:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x5B
  1469   00005C                     	ds	1
  1470   00005D                     ___fltol@exp1:
  1471                           	callstack 0
  1472                           
  1473                           ; 1 bytes @ 0x5C
  1474   00005D                     	ds	1
  1475   00005E                     I2C_Master_Mode_Clock_Configurations@i2c_obj:
  1476                           	callstack 0
  1477   00005E                     ccp1_pwm_set_duty@duty:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x5D
  1481   00005E                     	ds	2
  1482   000060                     ??_I2C_Master_Mode_Clock_Configurations:
  1483                           
  1484                           ; 1 bytes @ 0x5F
  1485   000060                     	ds	1
  1486   000061                     MSSP_I2C_Init@i2c_obj:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x60
  1490   000061                     	ds	1
  1491   000062                     ??_ccp1_pwm_set_duty:
  1492                           
  1493                           ; 1 bytes @ 0x61
  1494   000062                     	ds	1
  1495   000063                     
  1496                           ; 1 bytes @ 0x62
  1497   000063                     	ds	1
  1498   000064                     ccp1_pwm_set_duty@duty_:
  1499                           	callstack 0
  1500                           
  1501                           ; 4 bytes @ 0x63
  1502   000064                     	ds	4
  1503   000068                     _ccp1_pwm_set_duty$5568:
  1504                           	callstack 0
  1505                           
  1506                           ; 4 bytes @ 0x67
  1507   000068                     	ds	4
  1508   00006C                     ccp1_pwm_set_duty@l_duty_temp:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x6B
  1512   00006C                     	ds	2
  1513   00006E                     ??_main:
  1514                           
  1515                           ; 1 bytes @ 0x6D
  1516   00006E                     	ds	1
  1517                           
  1518 ;;
  1519 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1520 ;;
  1521 ;; *************** function _main *****************
  1522 ;; Defined at:
  1523 ;;		line 81 in file "main2.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  2  1716[None  ] int 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Totals:         1       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;Total ram usage:        5 bytes
  1542 ;; Hardware stack levels required when called: 9
  1543 ;; This function calls:
  1544 ;;		_ADC_get_conversion_blocking
  1545 ;;		_GPIO_pIN_WRITE_LOGIC
  1546 ;;		___lldiv
  1547 ;;		___lmul
  1548 ;;		___xxtofl
  1549 ;;		_ccp1_pwm_set_duty
  1550 ;;		_ccp1_pwm_set_stop
  1551 ;;		_ccp1_pwm_start
  1552 ;;		_convert_uint8_to_string
  1553 ;;		_intitialized_functions
  1554 ;;		_lcd_4bit_send_command
  1555 ;;		_lcd_4bit_send_string_pos
  1556 ;;		_led_toggle
  1557 ;;		_led_turn_off
  1558 ;;		_led_turn_on
  1559 ;;		_morot_stop
  1560 ;;		_morot_turn_left
  1561 ;;		_morot_turn_right
  1562 ;; This function is called by:
  1563 ;;		Startup code after reset
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text0
  1568   001078                     __ptext0:
  1569                           	callstack 0
  1570   001078                     _main:
  1571                           	callstack 22
  1572   001078                     
  1573                           ;main2.c: 82:     intitialized_functions();
  1574   001078  EC91  F01F         	call	_intitialized_functions	;wreg free
  1575   00107C                     l11672:
  1576                           
  1577                           ;main2.c: 84:     {;main2.c: 86:         ADC_get_conversion_blocking(&ADC_,ADC_CHANNEL_A
      +                          N0,&value_1);
  1578   00107C  0E37               	movlw	low _ADC_
  1579   00107E  6E0C               	movwf	ADC_get_conversion_blocking@ADC_conf^0,c
  1580   001080  0E01               	movlw	high _ADC_
  1581   001082  6E0D               	movwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,c
  1582   001084  0E00               	movlw	0
  1583   001086  6E0E               	movwf	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT^0,c
  1584   001088  0ED5               	movlw	low _value_1
  1585   00108A  6E0F               	movwf	ADC_get_conversion_blocking@conversion_status^0,c
  1586   00108C  EC51  F020         	call	_ADC_get_conversion_blocking	;wreg free
  1587   001090                     
  1588                           ;main2.c: 87:         l_direction = (uint32)100 * value_1 /1022 ;
  1589   001090  C0D5  F004         	movff	_value_1,___lmul@multiplier
  1590   001094  C0D6  F005         	movff	_value_1+1,___lmul@multiplier+1
  1591   001098  6A06               	clrf	(___lmul@multiplier+2)^0,c
  1592   00109A  6A07               	clrf	(___lmul@multiplier+3)^0,c
  1593   00109C  0E64               	movlw	100
  1594   00109E  6E08               	movwf	___lmul@multiplicand^0,c
  1595   0010A0  0E00               	movlw	0
  1596   0010A2  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  1597   0010A4  0E00               	movlw	0
  1598   0010A6  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  1599   0010A8  0E00               	movlw	0
  1600   0010AA  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  1601   0010AC  ECDA  F021         	call	___lmul	;wreg free
  1602   0010B0  C004  F010         	movff	?___lmul,___lldiv@dividend
  1603   0010B4  C005  F011         	movff	?___lmul+1,___lldiv@dividend+1
  1604   0010B8  C006  F012         	movff	?___lmul+2,___lldiv@dividend+2
  1605   0010BC  C007  F013         	movff	?___lmul+3,___lldiv@dividend+3
  1606   0010C0  0EFE               	movlw	254
  1607   0010C2  6E14               	movwf	___lldiv@divisor^0,c
  1608   0010C4  0E03               	movlw	3
  1609   0010C6  6E15               	movwf	(___lldiv@divisor+1)^0,c
  1610   0010C8  0E00               	movlw	0
  1611   0010CA  6E16               	movwf	(___lldiv@divisor+2)^0,c
  1612   0010CC  0E00               	movlw	0
  1613   0010CE  6E17               	movwf	(___lldiv@divisor+3)^0,c
  1614   0010D0  EC90  F01D         	call	___lldiv	;wreg free
  1615   0010D4  5010               	movf	?___lldiv^0,w,c
  1616   0010D6  0100               	movlb	0	; () banked
  1617   0010D8  6FC6               	movwf	_l_direction& (0+255),b
  1618   0010DA                     
  1619                           ; BSR set to: 0
  1620                           ;main2.c: 88:         if(l_direction == 0){
  1621   0010DA  51C6               	movf	_l_direction& (0+255),w,b
  1622   0010DC  A4D8               	btfss	status,2,c
  1623   0010DE  EF73  F008         	goto	u12491
  1624   0010E2  EF75  F008         	goto	u12490
  1625   0010E6                     u12491:
  1626   0010E6  EF79  F008         	goto	l11680
  1627   0010EA                     u12490:
  1628   0010EA                     
  1629                           ; BSR set to: 0
  1630                           ;main2.c: 89:             ccp1_pwm_set_stop();
  1631   0010EA  EC5E  F026         	call	_ccp1_pwm_set_stop	;wreg free
  1632                           
  1633                           ;main2.c: 90:         }else{
  1634   0010EE  EF95  F008         	goto	l11686
  1635   0010F2                     l11680:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;main2.c: 91:             ccp1_pwm_set_duty(l_direction);
  1639   0010F2  51C6               	movf	_l_direction& (0+255),w,b
  1640   0010F4  6E04               	movwf	___xxtofl@val^0,c
  1641   0010F6  6A05               	clrf	(___xxtofl@val+1)^0,c
  1642   0010F8  6A06               	clrf	(___xxtofl@val+2)^0,c
  1643   0010FA  6A07               	clrf	(___xxtofl@val+3)^0,c
  1644   0010FC  0E00               	movlw	0
  1645   0010FE  EC28  F015         	call	___xxtofl
  1646   001102  C004  F16E         	movff	?___xxtofl,_main$5571
  1647   001106  C005  F16F         	movff	?___xxtofl+1,_main$5571+1
  1648   00110A  C006  F170         	movff	?___xxtofl+2,_main$5571+2
  1649   00110E  C007  F171         	movff	?___xxtofl+3,_main$5571+3
  1650   001112                     
  1651                           ;main2.c: 91:             ccp1_pwm_set_duty(l_direction);
  1652   001112  C16E  F05E         	movff	_main$5571,ccp1_pwm_set_duty@duty
  1653   001116  C16F  F05F         	movff	_main$5571+1,ccp1_pwm_set_duty@duty+1
  1654   00111A  C170  F060         	movff	_main$5571+2,ccp1_pwm_set_duty@duty+2
  1655   00111E  C171  F061         	movff	_main$5571+3,ccp1_pwm_set_duty@duty+3
  1656   001122  ECEE  F017         	call	_ccp1_pwm_set_duty	;wreg free
  1657   001126                     
  1658                           ;main2.c: 92:             ccp1_pwm_start();
  1659   001126  EC55  F026         	call	_ccp1_pwm_start	;wreg free
  1660   00112A                     l11686:
  1661                           
  1662                           ;main2.c: 98:         if(i2c_data_1 == 'A'){
  1663   00112A  0E41               	movlw	65
  1664   00112C  1879               	xorwf	_i2c_data_1^0,w,c	;volatile
  1665   00112E  A4D8               	btfss	status,2,c
  1666   001130  EF9C  F008         	goto	u12501
  1667   001134  EF9E  F008         	goto	u12500
  1668   001138                     u12501:
  1669   001138  EFA9  F008         	goto	l11692
  1670   00113C                     u12500:
  1671   00113C                     
  1672                           ;main2.c: 99:             counter_++;
  1673   00113C  0100               	movlb	0	; () banked
  1674   00113E  2BC1               	incf	_counter_& (0+255),f,b	;volatile
  1675   001140                     
  1676                           ; BSR set to: 0
  1677                           ;main2.c: 100:             GPIO_pIN_WRITE_LOGIC(&relay,GPIO_HIGH);
  1678   001140  0E73               	movlw	low _relay
  1679   001142  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  1680   001144  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  1681   001146  0E01               	movlw	1
  1682   001148  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  1683   00114A  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  1684                           
  1685                           ;main2.c: 101:         }else if(i2c_data_1 == 'C'){
  1686   00114E  EFB9  F008         	goto	l11696
  1687   001152                     l11692:
  1688   001152  0E43               	movlw	67
  1689   001154  1879               	xorwf	_i2c_data_1^0,w,c	;volatile
  1690   001156  A4D8               	btfss	status,2,c
  1691   001158  EFB0  F008         	goto	u12511
  1692   00115C  EFB2  F008         	goto	u12510
  1693   001160                     u12511:
  1694   001160  EFB9  F008         	goto	l11696
  1695   001164                     u12510:
  1696   001164                     
  1697                           ;main2.c: 102:             GPIO_pIN_WRITE_LOGIC(&relay,GPIO_LOW);
  1698   001164  0E73               	movlw	low _relay
  1699   001166  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  1700   001168  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  1701   00116A  0E00               	movlw	0
  1702   00116C  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  1703   00116E  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  1704   001172                     l11696:
  1705                           
  1706                           ;main2.c: 104:         if(i2c_data_2 == 'K'){
  1707   001172  0E4B               	movlw	75
  1708   001174  1878               	xorwf	_i2c_data_2^0,w,c	;volatile
  1709   001176  A4D8               	btfss	status,2,c
  1710   001178  EFC0  F008         	goto	u12521
  1711   00117C  EFC2  F008         	goto	u12520
  1712   001180                     u12521:
  1713   001180  EFCC  F008         	goto	l11700
  1714   001184                     u12520:
  1715   001184                     
  1716                           ;main2.c: 105:             morot_turn_right(&motor_1);
  1717   001184  0EFD               	movlw	low _motor_1
  1718   001186  6E0D               	movwf	morot_turn_right@motor_pin^0,c
  1719   001188  EC02  F024         	call	_morot_turn_right	;wreg free
  1720                           
  1721                           ;main2.c: 106:             morot_turn_left(&motor_2);
  1722   00118C  0EFB               	movlw	low _motor_2
  1723   00118E  6E0D               	movwf	morot_turn_left@motor_pin^0,c
  1724   001190  EC21  F024         	call	_morot_turn_left	;wreg free
  1725                           
  1726                           ;main2.c: 107:         }else if(i2c_data_2 == 'H'){
  1727   001194  EF05  F009         	goto	l11712
  1728   001198                     l11700:
  1729   001198  0E48               	movlw	72
  1730   00119A  1878               	xorwf	_i2c_data_2^0,w,c	;volatile
  1731   00119C  A4D8               	btfss	status,2,c
  1732   00119E  EFD3  F008         	goto	u12531
  1733   0011A2  EFD5  F008         	goto	u12530
  1734   0011A6                     u12531:
  1735   0011A6  EFDF  F008         	goto	l11704
  1736   0011AA                     u12530:
  1737   0011AA                     
  1738                           ;main2.c: 108:             morot_turn_left(&motor_1);
  1739   0011AA  0EFD               	movlw	low _motor_1
  1740   0011AC  6E0D               	movwf	morot_turn_left@motor_pin^0,c
  1741   0011AE  EC21  F024         	call	_morot_turn_left	;wreg free
  1742                           
  1743                           ;main2.c: 109:             morot_stop(&motor_2);
  1744   0011B2  0EFB               	movlw	low _motor_2
  1745   0011B4  6E0D               	movwf	morot_stop@motor_pin^0,c
  1746   0011B6  EC40  F024         	call	_morot_stop	;wreg free
  1747                           
  1748                           ;main2.c: 110:         }else if(i2c_data_2 == 'L'){
  1749   0011BA  EF05  F009         	goto	l11712
  1750   0011BE                     l11704:
  1751   0011BE  0E4C               	movlw	76
  1752   0011C0  1878               	xorwf	_i2c_data_2^0,w,c	;volatile
  1753   0011C2  A4D8               	btfss	status,2,c
  1754   0011C4  EFE6  F008         	goto	u12541
  1755   0011C8  EFE8  F008         	goto	u12540
  1756   0011CC                     u12541:
  1757   0011CC  EFF2  F008         	goto	l11708
  1758   0011D0                     u12540:
  1759   0011D0                     
  1760                           ;main2.c: 111:             morot_stop(&motor_1);
  1761   0011D0  0EFD               	movlw	low _motor_1
  1762   0011D2  6E0D               	movwf	morot_stop@motor_pin^0,c
  1763   0011D4  EC40  F024         	call	_morot_stop	;wreg free
  1764                           
  1765                           ;main2.c: 112:             morot_turn_left(&motor_2);
  1766   0011D8  0EFB               	movlw	low _motor_2
  1767   0011DA  6E0D               	movwf	morot_turn_left@motor_pin^0,c
  1768   0011DC  EC21  F024         	call	_morot_turn_left	;wreg free
  1769                           
  1770                           ;main2.c: 113:         }else if(i2c_data_2 == 'G'){
  1771   0011E0  EF05  F009         	goto	l11712
  1772   0011E4                     l11708:
  1773   0011E4  0E47               	movlw	71
  1774   0011E6  1878               	xorwf	_i2c_data_2^0,w,c	;volatile
  1775   0011E8  A4D8               	btfss	status,2,c
  1776   0011EA  EFF9  F008         	goto	u12551
  1777   0011EE  EFFB  F008         	goto	u12550
  1778   0011F2                     u12551:
  1779   0011F2  EF05  F009         	goto	l1726
  1780   0011F6                     u12550:
  1781   0011F6                     
  1782                           ;main2.c: 114:             morot_stop(&motor_1);
  1783   0011F6  0EFD               	movlw	low _motor_1
  1784   0011F8  6E0D               	movwf	morot_stop@motor_pin^0,c
  1785   0011FA  EC40  F024         	call	_morot_stop	;wreg free
  1786                           
  1787                           ;main2.c: 115:             morot_stop(&motor_2);
  1788   0011FE  0EFB               	movlw	low _motor_2
  1789   001200  6E0D               	movwf	morot_stop@motor_pin^0,c
  1790   001202  EC40  F024         	call	_morot_stop	;wreg free
  1791   001206  EF05  F009         	goto	l11712
  1792   00120A                     l1726:
  1793   00120A                     l11712:
  1794                           
  1795                           ;main2.c: 120:         if(i2c_data_3 == 'Q'){
  1796   00120A  0E51               	movlw	81
  1797   00120C  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1798   00120E  A4D8               	btfss	status,2,c
  1799   001210  EF0C  F009         	goto	u12561
  1800   001214  EF0E  F009         	goto	u12560
  1801   001218                     u12561:
  1802   001218  EF14  F009         	goto	l11716
  1803   00121C                     u12560:
  1804   00121C                     
  1805                           ;main2.c: 121:             led_turn_on(&led3);
  1806   00121C  0E75               	movlw	low _led3
  1807   00121E  6E0D               	movwf	led_turn_on@led^0,c
  1808   001220  EC38  F021         	call	_led_turn_on	;wreg free
  1809                           
  1810                           ;main2.c: 122:         }else if(i2c_data_3 == 'W'){
  1811   001224  EF28  F00A         	goto	l11780
  1812   001228                     l11716:
  1813   001228  0E57               	movlw	87
  1814   00122A  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1815   00122C  A4D8               	btfss	status,2,c
  1816   00122E  EF1B  F009         	goto	u12571
  1817   001232  EF1D  F009         	goto	u12570
  1818   001236                     u12571:
  1819   001236  EF23  F009         	goto	l11720
  1820   00123A                     u12570:
  1821   00123A                     
  1822                           ;main2.c: 123:             led_turn_off(&led3);
  1823   00123A  0E75               	movlw	low _led3
  1824   00123C  6E0D               	movwf	led_turn_off@led^0,c
  1825   00123E  EC6E  F021         	call	_led_turn_off	;wreg free
  1826                           
  1827                           ;main2.c: 124:         }else if(i2c_data_3 == 'E'){
  1828   001242  EF28  F00A         	goto	l11780
  1829   001246                     l11720:
  1830   001246  0E45               	movlw	69
  1831   001248  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1832   00124A  A4D8               	btfss	status,2,c
  1833   00124C  EF2A  F009         	goto	u12581
  1834   001250  EF2C  F009         	goto	u12580
  1835   001254                     u12581:
  1836   001254  EF32  F009         	goto	l11724
  1837   001258                     u12580:
  1838   001258                     
  1839                           ;main2.c: 125:             led_turn_on(&led5);;
  1840   001258  0E74               	movlw	low _led5
  1841   00125A  6E0D               	movwf	led_turn_on@led^0,c
  1842   00125C  EC38  F021         	call	_led_turn_on	;wreg free
  1843                           
  1844                           ;main2.c: 126:         }
  1845   001260  EF28  F00A         	goto	l11780
  1846   001264                     l11724:
  1847   001264  0E52               	movlw	82
  1848   001266  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1849   001268  A4D8               	btfss	status,2,c
  1850   00126A  EF39  F009         	goto	u12591
  1851   00126E  EF3B  F009         	goto	u12590
  1852   001272                     u12591:
  1853   001272  EF41  F009         	goto	l11728
  1854   001276                     u12590:
  1855   001276                     
  1856                           ;main2.c: 128:             led_turn_off(&led5);
  1857   001276  0E74               	movlw	low _led5
  1858   001278  6E0D               	movwf	led_turn_off@led^0,c
  1859   00127A  EC6E  F021         	call	_led_turn_off	;wreg free
  1860                           
  1861                           ;main2.c: 129:         }
  1862   00127E  EF28  F00A         	goto	l11780
  1863   001282                     l11728:
  1864   001282  0E54               	movlw	84
  1865   001284  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1866   001286  A4D8               	btfss	status,2,c
  1867   001288  EF48  F009         	goto	u12601
  1868   00128C  EF4A  F009         	goto	u12600
  1869   001290                     u12601:
  1870   001290  EF50  F009         	goto	l11732
  1871   001294                     u12600:
  1872   001294                     
  1873                           ;main2.c: 131:             morot_turn_right(&motor_2);
  1874   001294  0EFB               	movlw	low _motor_2
  1875   001296  6E0D               	movwf	morot_turn_right@motor_pin^0,c
  1876   001298  EC02  F024         	call	_morot_turn_right	;wreg free
  1877                           
  1878                           ;main2.c: 132:         }
  1879   00129C  EF28  F00A         	goto	l11780
  1880   0012A0                     l11732:
  1881   0012A0  0E59               	movlw	89
  1882   0012A2  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1883   0012A4  A4D8               	btfss	status,2,c
  1884   0012A6  EF57  F009         	goto	u12611
  1885   0012AA  EF59  F009         	goto	u12610
  1886   0012AE                     u12611:
  1887   0012AE  EF5F  F009         	goto	l11736
  1888   0012B2                     u12610:
  1889   0012B2                     
  1890                           ;main2.c: 134:             morot_stop(&motor_2);
  1891   0012B2  0EFB               	movlw	low _motor_2
  1892   0012B4  6E0D               	movwf	morot_stop@motor_pin^0,c
  1893   0012B6  EC40  F024         	call	_morot_stop	;wreg free
  1894                           
  1895                           ;main2.c: 135:         }
  1896   0012BA  EF28  F00A         	goto	l11780
  1897   0012BE                     l11736:
  1898   0012BE  0E55               	movlw	85
  1899   0012C0  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1900   0012C2  A4D8               	btfss	status,2,c
  1901   0012C4  EF66  F009         	goto	u12621
  1902   0012C8  EF68  F009         	goto	u12620
  1903   0012CC                     u12621:
  1904   0012CC  EF6E  F009         	goto	l11740
  1905   0012D0                     u12620:
  1906   0012D0                     
  1907                           ;main2.c: 137:             morot_turn_right(&motor_1);
  1908   0012D0  0EFD               	movlw	low _motor_1
  1909   0012D2  6E0D               	movwf	morot_turn_right@motor_pin^0,c
  1910   0012D4  EC02  F024         	call	_morot_turn_right	;wreg free
  1911                           
  1912                           ;main2.c: 138:         }
  1913   0012D8  EF28  F00A         	goto	l11780
  1914   0012DC                     l11740:
  1915   0012DC  0E49               	movlw	73
  1916   0012DE  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1917   0012E0  A4D8               	btfss	status,2,c
  1918   0012E2  EF75  F009         	goto	u12631
  1919   0012E6  EF77  F009         	goto	u12630
  1920   0012EA                     u12631:
  1921   0012EA  EF7D  F009         	goto	l11744
  1922   0012EE                     u12630:
  1923   0012EE                     
  1924                           ;main2.c: 140:             morot_stop(&motor_1);
  1925   0012EE  0EFD               	movlw	low _motor_1
  1926   0012F0  6E0D               	movwf	morot_stop@motor_pin^0,c
  1927   0012F2  EC40  F024         	call	_morot_stop	;wreg free
  1928                           
  1929                           ;main2.c: 141:         }
  1930   0012F6  EF28  F00A         	goto	l11780
  1931   0012FA                     l11744:
  1932   0012FA  0E4F               	movlw	79
  1933   0012FC  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1934   0012FE  A4D8               	btfss	status,2,c
  1935   001300  EF84  F009         	goto	u12641
  1936   001304  EF86  F009         	goto	u12640
  1937   001308                     u12641:
  1938   001308  EF8F  F009         	goto	l11748
  1939   00130C                     u12640:
  1940   00130C                     
  1941                           ;main2.c: 143:             GPIO_pIN_WRITE_LOGIC(&relay,GPIO_HIGH);
  1942   00130C  0E73               	movlw	low _relay
  1943   00130E  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  1944   001310  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  1945   001312  0E01               	movlw	1
  1946   001314  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  1947   001316  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  1948                           
  1949                           ;main2.c: 144:         }
  1950   00131A  EF28  F00A         	goto	l11780
  1951   00131E                     l11748:
  1952   00131E  0E50               	movlw	80
  1953   001320  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1954   001322  A4D8               	btfss	status,2,c
  1955   001324  EF96  F009         	goto	u12651
  1956   001328  EF98  F009         	goto	u12650
  1957   00132C                     u12651:
  1958   00132C  EF9A  F009         	goto	l11752
  1959   001330                     u12650:
  1960   001330  EF28  F00A         	goto	l11780
  1961   001334                     l11752:
  1962   001334  0E53               	movlw	83
  1963   001336  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1964   001338  A4D8               	btfss	status,2,c
  1965   00133A  EFA1  F009         	goto	u12661
  1966   00133E  EFA3  F009         	goto	u12660
  1967   001342                     u12661:
  1968   001342  EFAC  F009         	goto	l11756
  1969   001346                     u12660:
  1970   001346                     
  1971                           ;main2.c: 149:             GPIO_pIN_WRITE_LOGIC(&relay,GPIO_LOW);
  1972   001346  0E73               	movlw	low _relay
  1973   001348  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  1974   00134A  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  1975   00134C  0E00               	movlw	0
  1976   00134E  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  1977   001350  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  1978                           
  1979                           ;main2.c: 150:         }else if(i2c_data_3 == 'F'){
  1980   001354  EF28  F00A         	goto	l11780
  1981   001358                     l11756:
  1982   001358  0E46               	movlw	70
  1983   00135A  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1984   00135C  A4D8               	btfss	status,2,c
  1985   00135E  EFB3  F009         	goto	u12671
  1986   001362  EFB5  F009         	goto	u12670
  1987   001366                     u12671:
  1988   001366  EFB7  F009         	goto	l11760
  1989   00136A                     u12670:
  1990   00136A  EF28  F00A         	goto	l11780
  1991   00136E                     l11760:
  1992   00136E  0E4A               	movlw	74
  1993   001370  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  1994   001372  A4D8               	btfss	status,2,c
  1995   001374  EFBE  F009         	goto	u12681
  1996   001378  EFC0  F009         	goto	u12680
  1997   00137C                     u12681:
  1998   00137C  EFC2  F009         	goto	l11764
  1999   001380                     u12680:
  2000   001380  EF28  F00A         	goto	l11780
  2001   001384                     l11764:
  2002   001384  0E5A               	movlw	90
  2003   001386  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  2004   001388  A4D8               	btfss	status,2,c
  2005   00138A  EFC9  F009         	goto	u12691
  2006   00138E  EFCB  F009         	goto	u12690
  2007   001392                     u12691:
  2008   001392  EFCD  F009         	goto	l11768
  2009   001396                     u12690:
  2010   001396  EF28  F00A         	goto	l11780
  2011   00139A                     l11768:
  2012   00139A  0E58               	movlw	88
  2013   00139C  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  2014   00139E  A4D8               	btfss	status,2,c
  2015   0013A0  EFD4  F009         	goto	u12701
  2016   0013A4  EFD6  F009         	goto	u12700
  2017   0013A8                     u12701:
  2018   0013A8  EFD8  F009         	goto	l11772
  2019   0013AC                     u12700:
  2020   0013AC  EF28  F00A         	goto	l11780
  2021   0013B0                     l11772:
  2022   0013B0  0E56               	movlw	86
  2023   0013B2  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  2024   0013B4  A4D8               	btfss	status,2,c
  2025   0013B6  EFDF  F009         	goto	u12711
  2026   0013BA  EFE1  F009         	goto	u12710
  2027   0013BE                     u12711:
  2028   0013BE  EF00  F00A         	goto	l11776
  2029   0013C2                     u12710:
  2030   0013C2                     
  2031                           ;main2.c: 160:             lcd_4bit_send_command(&lcd_4bit,0x08);
  2032   0013C2  0EF5               	movlw	low _lcd_4bit
  2033   0013C4  6E11               	movwf	lcd_4bit_send_command@lcd^0,c
  2034   0013C6  0E08               	movlw	8
  2035   0013C8  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2036   0013CA  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  2037                           
  2038                           ;main2.c: 161:             led_turn_off(&led3);
  2039   0013CE  0E75               	movlw	low _led3
  2040   0013D0  6E0D               	movwf	led_turn_off@led^0,c
  2041   0013D2  EC6E  F021         	call	_led_turn_off	;wreg free
  2042                           
  2043                           ;main2.c: 162:             led_turn_off(&led5);
  2044   0013D6  0E74               	movlw	low _led5
  2045   0013D8  6E0D               	movwf	led_turn_off@led^0,c
  2046   0013DA  EC6E  F021         	call	_led_turn_off	;wreg free
  2047                           
  2048                           ;main2.c: 163:             GPIO_pIN_WRITE_LOGIC(&relay,GPIO_LOW);
  2049   0013DE  0E73               	movlw	low _relay
  2050   0013E0  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  2051   0013E2  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2052   0013E4  0E00               	movlw	0
  2053   0013E6  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2054   0013E8  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2055                           
  2056                           ;main2.c: 164:             morot_stop(&motor_1);
  2057   0013EC  0EFD               	movlw	low _motor_1
  2058   0013EE  6E0D               	movwf	morot_stop@motor_pin^0,c
  2059   0013F0  EC40  F024         	call	_morot_stop	;wreg free
  2060                           
  2061                           ;main2.c: 165:             morot_stop(&motor_2);
  2062   0013F4  0EFB               	movlw	low _motor_2
  2063   0013F6  6E0D               	movwf	morot_stop@motor_pin^0,c
  2064   0013F8  EC40  F024         	call	_morot_stop	;wreg free
  2065                           
  2066                           ;main2.c: 166:         }else if(i2c_data_3 == 'B'){
  2067   0013FC  EF28  F00A         	goto	l11780
  2068   001400                     l11776:
  2069   001400  0E42               	movlw	66
  2070   001402  1877               	xorwf	_i2c_data_3^0,w,c	;volatile
  2071   001404  A4D8               	btfss	status,2,c
  2072   001406  EF07  F00A         	goto	u12721
  2073   00140A  EF09  F00A         	goto	u12720
  2074   00140E                     u12721:
  2075   00140E  EF28  F00A         	goto	l1745
  2076   001412                     u12720:
  2077   001412                     
  2078                           ;main2.c: 167:             lcd_4bit_send_command(&lcd_4bit,0x0C);
  2079   001412  0EF5               	movlw	low _lcd_4bit
  2080   001414  6E11               	movwf	lcd_4bit_send_command@lcd^0,c
  2081   001416  0E0C               	movlw	12
  2082   001418  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2083   00141A  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  2084                           
  2085                           ;main2.c: 168:             led_turn_on(&led3);
  2086   00141E  0E75               	movlw	low _led3
  2087   001420  6E0D               	movwf	led_turn_on@led^0,c
  2088   001422  EC38  F021         	call	_led_turn_on	;wreg free
  2089                           
  2090                           ;main2.c: 169:             led_turn_on(&led5);
  2091   001426  0E74               	movlw	low _led5
  2092   001428  6E0D               	movwf	led_turn_on@led^0,c
  2093   00142A  EC38  F021         	call	_led_turn_on	;wreg free
  2094                           
  2095                           ;main2.c: 170:             GPIO_pIN_WRITE_LOGIC(&relay,GPIO_HIGH);
  2096   00142E  0E73               	movlw	low _relay
  2097   001430  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  2098   001432  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2099   001434  0E01               	movlw	1
  2100   001436  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2101   001438  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2102                           
  2103                           ;main2.c: 171:             morot_turn_right(&motor_1);
  2104   00143C  0EFD               	movlw	low _motor_1
  2105   00143E  6E0D               	movwf	morot_turn_right@motor_pin^0,c
  2106   001440  EC02  F024         	call	_morot_turn_right	;wreg free
  2107                           
  2108                           ;main2.c: 172:             morot_turn_left(&motor_2);
  2109   001444  0EFB               	movlw	low _motor_2
  2110   001446  6E0D               	movwf	morot_turn_left@motor_pin^0,c
  2111   001448  EC21  F024         	call	_morot_turn_left	;wreg free
  2112   00144C  EF28  F00A         	goto	l11780
  2113   001450                     l1745:
  2114   001450                     l11780:
  2115                           
  2116                           ;main2.c: 176:         if(i2c_data_4 <= 50){
  2117   001450  0E33               	movlw	51
  2118   001452  6076               	cpfslt	_i2c_data_4^0,c	;volatile
  2119   001454  EF2E  F00A         	goto	u12731
  2120   001458  EF30  F00A         	goto	u12730
  2121   00145C                     u12731:
  2122   00145C  EF3E  F008         	goto	l11672
  2123   001460                     u12730:
  2124   001460                     
  2125                           ;main2.c: 177:             convert_uint8_to_string(i2c_data_4,string);
  2126   001460  0E63               	movlw	low _string
  2127   001462  6E31               	movwf	convert_uint8_to_string@str^0,c
  2128   001464  0E01               	movlw	high _string
  2129   001466  6E32               	movwf	(convert_uint8_to_string@str+1)^0,c
  2130   001468  5076               	movf	_i2c_data_4^0,w,c	;volatile
  2131   00146A  EC07  F023         	call	_convert_uint8_to_string
  2132   00146E                     
  2133                           ;main2.c: 178:             lcd_4bit_send_string_pos(&lcd_4bit,1,2,"Temperature :");
  2134   00146E  0EF5               	movlw	low _lcd_4bit
  2135   001470  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2136   001472  0E01               	movlw	1
  2137   001474  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2138   001476  0E02               	movlw	2
  2139   001478  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2140   00147A  0E66               	movlw	low STR_4
  2141   00147C  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2142   00147E  501D               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2143   001480  A4D8               	btfss	status,2,c
  2144   001482  0E10               	movlw	high __smallconst
  2145   001484  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2146   001486  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2147   00148A                     
  2148                           ;main2.c: 179:             lcd_4bit_send_string_pos(&lcd_4bit,1,16,string);
  2149   00148A  0EF5               	movlw	low _lcd_4bit
  2150   00148C  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2151   00148E  0E01               	movlw	1
  2152   001490  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2153   001492  0E10               	movlw	16
  2154   001494  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2155   001496  0E63               	movlw	low _string
  2156   001498  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2157   00149A  0E01               	movlw	high _string
  2158   00149C  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2159   00149E  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2160   0014A2                     
  2161                           ;main2.c: 180:             if((i2c_data_4 <= 50)&& (i2c_data_4 > 40)){
  2162   0014A2  0E33               	movlw	51
  2163   0014A4  6076               	cpfslt	_i2c_data_4^0,c	;volatile
  2164   0014A6  EF57  F00A         	goto	u12741
  2165   0014AA  EF59  F00A         	goto	u12740
  2166   0014AE                     u12741:
  2167   0014AE  EF8D  F00A         	goto	l11804
  2168   0014B2                     u12740:
  2169   0014B2  0E28               	movlw	40
  2170   0014B4  6476               	cpfsgt	_i2c_data_4^0,c	;volatile
  2171   0014B6  EF5F  F00A         	goto	u12751
  2172   0014BA  EF61  F00A         	goto	u12750
  2173   0014BE                     u12751:
  2174   0014BE  EF8D  F00A         	goto	l11804
  2175   0014C2                     u12750:
  2176   0014C2                     
  2177                           ;main2.c: 181:                 lcd_4bit_send_string_pos(&lcd_4bit,2,2,"Error !!!!!    ")
      +                          ;
  2178   0014C2  0EF5               	movlw	low _lcd_4bit
  2179   0014C4  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2180   0014C6  0E02               	movlw	2
  2181   0014C8  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2182   0014CA  0E02               	movlw	2
  2183   0014CC  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2184   0014CE  0E47               	movlw	low STR_5
  2185   0014D0  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2186   0014D2  501D               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2187   0014D4  A4D8               	btfss	status,2,c
  2188   0014D6  0E10               	movlw	high __smallconst
  2189   0014D8  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2190   0014DA  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2191   0014DE                     
  2192                           ;main2.c: 182:                 led_toggle(&led3);
  2193   0014DE  0E75               	movlw	low _led3
  2194   0014E0  6E0A               	movwf	led_toggle@led^0,c
  2195   0014E2  EC43  F022         	call	_led_toggle	;wreg free
  2196   0014E6                     
  2197                           ;main2.c: 183:                 led_toggle(&led5);
  2198   0014E6  0E74               	movlw	low _led5
  2199   0014E8  6E0A               	movwf	led_toggle@led^0,c
  2200   0014EA  EC43  F022         	call	_led_toggle	;wreg free
  2201   0014EE                     
  2202                           ;main2.c: 184:                 lcd_4bit_send_command(&lcd_4bit,0x08);
  2203   0014EE  0EF5               	movlw	low _lcd_4bit
  2204   0014F0  6E11               	movwf	lcd_4bit_send_command@lcd^0,c
  2205   0014F2  0E08               	movlw	8
  2206   0014F4  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2207   0014F6  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  2208   0014FA                     
  2209                           ;main2.c: 185:                 _delay((unsigned long)((50)*(4000000UL/4000.0)));
  2210   0014FA  0E41               	movlw	65
  2211   0014FC  6E6E               	movwf	??_main^0,c
  2212   0014FE  0EEE               	movlw	238
  2213   001500                     u12817:
  2214   001500  2EE8               	decfsz	wreg,f,c
  2215   001502  D7FE               	bra	u12817
  2216   001504  2E6E               	decfsz	??_main^0,f,c
  2217   001506  D7FC               	bra	u12817
  2218   001508  D000               	nop2	
  2219   00150A                     
  2220                           ;main2.c: 186:                 lcd_4bit_send_command(&lcd_4bit,0x0C);
  2221   00150A  0EF5               	movlw	low _lcd_4bit
  2222   00150C  6E11               	movwf	lcd_4bit_send_command@lcd^0,c
  2223   00150E  0E0C               	movlw	12
  2224   001510  6E12               	movwf	lcd_4bit_send_command@command^0,c
  2225   001512  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  2226                           
  2227                           ;main2.c: 187:             }else if((i2c_data_4 <= 40) && (i2c_data_4 >= 36)){
  2228   001516  EF3E  F008         	goto	l11672
  2229   00151A                     l11804:
  2230   00151A  0E29               	movlw	41
  2231   00151C  6076               	cpfslt	_i2c_data_4^0,c	;volatile
  2232   00151E  EF93  F00A         	goto	u12761
  2233   001522  EF95  F00A         	goto	u12760
  2234   001526                     u12761:
  2235   001526  EFAD  F00A         	goto	l11810
  2236   00152A                     u12760:
  2237   00152A  0E23               	movlw	35
  2238   00152C  6476               	cpfsgt	_i2c_data_4^0,c	;volatile
  2239   00152E  EF9B  F00A         	goto	u12771
  2240   001532  EF9D  F00A         	goto	u12770
  2241   001536                     u12771:
  2242   001536  EFAD  F00A         	goto	l11810
  2243   00153A                     u12770:
  2244   00153A                     
  2245                           ;main2.c: 188:                 lcd_4bit_send_string_pos(&lcd_4bit,2,2,"dangerous temp !"
      +                          );
  2246   00153A  0EF5               	movlw	low _lcd_4bit
  2247   00153C  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2248   00153E  0E02               	movlw	2
  2249   001540  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2250   001542  0E02               	movlw	2
  2251   001544  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2252   001546  0E36               	movlw	low STR_6
  2253   001548  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2254   00154A  501D               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2255   00154C  A4D8               	btfss	status,2,c
  2256   00154E  0E10               	movlw	high __smallconst
  2257   001550  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2258   001552  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2259                           
  2260                           ;main2.c: 189:             }else if((i2c_data_4 < 36) && (i2c_data_4 >= 34)){
  2261   001556  EF3E  F008         	goto	l11672
  2262   00155A                     l11810:
  2263   00155A  0E24               	movlw	36
  2264   00155C  6076               	cpfslt	_i2c_data_4^0,c	;volatile
  2265   00155E  EFB3  F00A         	goto	u12781
  2266   001562  EFB5  F00A         	goto	u12780
  2267   001566                     u12781:
  2268   001566  EFE7  F00A         	goto	l11822
  2269   00156A                     u12780:
  2270   00156A  0E21               	movlw	33
  2271   00156C  6476               	cpfsgt	_i2c_data_4^0,c	;volatile
  2272   00156E  EFBB  F00A         	goto	u12791
  2273   001572  EFBD  F00A         	goto	u12790
  2274   001576                     u12791:
  2275   001576  EFE7  F00A         	goto	l11822
  2276   00157A                     u12790:
  2277   00157A                     
  2278                           ;main2.c: 190:                 if(counter_ == 0){
  2279   00157A  0100               	movlb	0	; () banked
  2280   00157C  51C1               	movf	_counter_& (0+255),w,b	;volatile
  2281   00157E  A4D8               	btfss	status,2,c
  2282   001580  EFC4  F00A         	goto	u12801
  2283   001584  EFC6  F00A         	goto	u12800
  2284   001588                     u12801:
  2285   001588  EFD7  F00A         	goto	l11820
  2286   00158C                     u12800:
  2287   00158C                     
  2288                           ; BSR set to: 0
  2289                           ;main2.c: 191:                    lcd_4bit_send_string_pos(&lcd_4bit,2,2,"              
      +                             ");
  2290   00158C  0EF5               	movlw	low _lcd_4bit
  2291   00158E  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2292   001590  0E02               	movlw	2
  2293   001592  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2294   001594  0E02               	movlw	2
  2295   001596  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2296   001598  0E24               	movlw	low STR_7
  2297   00159A  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2298   00159C  501D               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2299   00159E  A4D8               	btfss	status,2,c
  2300   0015A0  0E10               	movlw	high __smallconst
  2301   0015A2  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2302   0015A4  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2303   0015A8                     
  2304                           ;main2.c: 192:                   counter_=1;
  2305   0015A8  0E01               	movlw	1
  2306   0015AA  0100               	movlb	0	; () banked
  2307   0015AC  6FC1               	movwf	_counter_& (0+255),b	;volatile
  2308   0015AE                     l11820:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;main2.c: 195:                 lcd_4bit_send_string_pos(&lcd_4bit,2,2,"Warning temp !");
  2312   0015AE  0EF5               	movlw	low _lcd_4bit
  2313   0015B0  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2314   0015B2  0E02               	movlw	2
  2315   0015B4  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2316   0015B6  0E02               	movlw	2
  2317   0015B8  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2318   0015BA  0E57               	movlw	low STR_8
  2319   0015BC  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2320   0015BE  501D               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2321   0015C0  A4D8               	btfss	status,2,c
  2322   0015C2  0E10               	movlw	high __smallconst
  2323   0015C4  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2324   0015C6  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2325                           
  2326                           ;main2.c: 196:             }else{
  2327   0015CA  EF3E  F008         	goto	l11672
  2328   0015CE                     l11822:
  2329                           
  2330                           ;main2.c: 197:                 lcd_4bit_send_string_pos(&lcd_4bit,2,2,"Normal statue    
      +                           ");
  2331   0015CE  0EF5               	movlw	low _lcd_4bit
  2332   0015D0  6E1A               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2333   0015D2  0E02               	movlw	2
  2334   0015D4  6E1B               	movwf	lcd_4bit_send_string_pos@row^0,c
  2335   0015D6  0E02               	movlw	2
  2336   0015D8  6E1C               	movwf	lcd_4bit_send_string_pos@column^0,c
  2337   0015DA  0E11               	movlw	low STR_9
  2338   0015DC  6E1D               	movwf	lcd_4bit_send_string_pos@str^0,c
  2339   0015DE  501D               	movf	lcd_4bit_send_string_pos@str^0,w,c
  2340   0015E0  A4D8               	btfss	status,2,c
  2341   0015E2  0E10               	movlw	high __smallconst
  2342   0015E4  6E1E               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2343   0015E6  EC07  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  2344   0015EA  EF3E  F008         	goto	l11672
  2345   0015EE  EF07  F000         	goto	start
  2346   0015F2                     __end_of_main:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _morot_turn_right *****************
  2350 ;; Defined at:
  2351 ;;		line 20 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  motor_pin       1   12[COMRAM] PTR const struct .
  2354 ;;		 -> motor_2(2), motor_1(2), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  ret             1   14[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      unsigned char 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:        3 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 4
  2373 ;; This function calls:
  2374 ;;		_GPIO_pIN_WRITE_LOGIC
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text1
  2381   004804                     __ptext1:
  2382                           	callstack 0
  2383   004804                     _morot_turn_right:
  2384                           	callstack 26
  2385   004804                     
  2386                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 22:     if (((void*)0) == motor_pin){
  2387   004804  500D               	movf	morot_turn_right@motor_pin^0,w,c
  2388   004806  A4D8               	btfss	status,2,c
  2389   004808  EF08  F024         	goto	u11971
  2390   00480C  EF0A  F024         	goto	u11970
  2391   004810                     u11971:
  2392   004810  EF0C  F024         	goto	l11018
  2393   004814                     u11970:
  2394   004814                     
  2395                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 24:     }
  2396   004814  EF20  F024         	goto	l202
  2397   004818                     l11018:
  2398                           
  2399                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 26:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 27:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_HIGH);
  2400   004818  C00D  F004         	movff	morot_turn_right@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  2401   00481C  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2402   00481E  0E01               	movlw	1
  2403   004820  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2404   004822  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2405   004826  6E0F               	movwf	morot_turn_right@ret^0,c
  2406                           
  2407                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 28:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_LOW);
  2408   004828  C00D  F00E         	movff	morot_turn_right@motor_pin,??_morot_turn_right
  2409   00482C  0E01               	movlw	1
  2410   00482E  260E               	addwf	??_morot_turn_right^0,f,c
  2411   004830  C00E  F004         	movff	??_morot_turn_right,GPIO_pIN_WRITE_LOGIC@config_pin
  2412   004834  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2413   004836  0E00               	movlw	0
  2414   004838  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2415   00483A  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2416   00483E  6E0F               	movwf	morot_turn_right@ret^0,c
  2417   004840                     l202:
  2418   004840  0012               	return		;funcret
  2419   004842                     __end_of_morot_turn_right:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _morot_turn_left *****************
  2423 ;; Defined at:
  2424 ;;		line 33 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  motor_pin       1   12[COMRAM] PTR const struct .
  2427 ;;		 -> motor_2(2), motor_1(2), 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  ret             1   14[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      unsigned char 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:        3 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 4
  2446 ;; This function calls:
  2447 ;;		_GPIO_pIN_WRITE_LOGIC
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text2
  2454   004842                     __ptext2:
  2455                           	callstack 0
  2456   004842                     _morot_turn_left:
  2457                           	callstack 26
  2458   004842                     
  2459                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 35:     if (((void*)0) == motor_pin){
  2460   004842  500D               	movf	morot_turn_left@motor_pin^0,w,c
  2461   004844  A4D8               	btfss	status,2,c
  2462   004846  EF27  F024         	goto	u11981
  2463   00484A  EF29  F024         	goto	u11980
  2464   00484E                     u11981:
  2465   00484E  EF2B  F024         	goto	l11026
  2466   004852                     u11980:
  2467   004852                     
  2468                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 37:     }
  2469   004852  EF3F  F024         	goto	l207
  2470   004856                     l11026:
  2471                           
  2472                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 39:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 40:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_LOW);
  2473   004856  C00D  F004         	movff	morot_turn_left@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  2474   00485A  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2475   00485C  0E00               	movlw	0
  2476   00485E  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2477   004860  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2478   004864  6E0F               	movwf	morot_turn_left@ret^0,c
  2479                           
  2480                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 41:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_HIGH);
  2481   004866  C00D  F00E         	movff	morot_turn_left@motor_pin,??_morot_turn_left
  2482   00486A  0E01               	movlw	1
  2483   00486C  260E               	addwf	??_morot_turn_left^0,f,c
  2484   00486E  C00E  F004         	movff	??_morot_turn_left,GPIO_pIN_WRITE_LOGIC@config_pin
  2485   004872  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2486   004874  0E01               	movlw	1
  2487   004876  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2488   004878  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2489   00487C  6E0F               	movwf	morot_turn_left@ret^0,c
  2490   00487E                     l207:
  2491   00487E  0012               	return		;funcret
  2492   004880                     __end_of_morot_turn_left:
  2493                           	callstack 0
  2494                           
  2495 ;; *************** function _morot_stop *****************
  2496 ;; Defined at:
  2497 ;;		line 46 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  motor_pin       1   12[COMRAM] PTR const struct .
  2500 ;;		 -> motor_2(2), motor_1(2), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  ret             1   14[COMRAM] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        3 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 4
  2519 ;; This function calls:
  2520 ;;		_GPIO_pIN_WRITE_LOGIC
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text3
  2527   004880                     __ptext3:
  2528                           	callstack 0
  2529   004880                     _morot_stop:
  2530                           	callstack 26
  2531   004880                     
  2532                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 48:     if (((void*)0) == motor_pin){
  2533   004880  500D               	movf	morot_stop@motor_pin^0,w,c
  2534   004882  A4D8               	btfss	status,2,c
  2535   004884  EF46  F024         	goto	u11991
  2536   004888  EF48  F024         	goto	u11990
  2537   00488C                     u11991:
  2538   00488C  EF4A  F024         	goto	l11034
  2539   004890                     u11990:
  2540   004890                     
  2541                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 50:     }
  2542   004890  EF5E  F024         	goto	l212
  2543   004894                     l11034:
  2544                           
  2545                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 52:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 53:    
      +                               ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->motor_pin_config[0]),GPIO_LOW);
  2546   004894  C00D  F004         	movff	morot_stop@motor_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  2547   004898  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2548   00489A  0E00               	movlw	0
  2549   00489C  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2550   00489E  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2551   0048A2  6E0F               	movwf	morot_stop@ret^0,c
  2552                           
  2553                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 54:         ret =GPIO_pIN_WRITE_LOGIC(&(motor_pin->m
      +                          otor_pin_config[1]),GPIO_LOW);
  2554   0048A4  C00D  F00E         	movff	morot_stop@motor_pin,??_morot_stop
  2555   0048A8  0E01               	movlw	1
  2556   0048AA  260E               	addwf	??_morot_stop^0,f,c
  2557   0048AC  C00E  F004         	movff	??_morot_stop,GPIO_pIN_WRITE_LOGIC@config_pin
  2558   0048B0  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2559   0048B2  0E00               	movlw	0
  2560   0048B4  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2561   0048B6  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2562   0048BA  6E0F               	movwf	morot_stop@ret^0,c
  2563   0048BC                     l212:
  2564   0048BC  0012               	return		;funcret
  2565   0048BE                     __end_of_morot_stop:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _led_turn_on *****************
  2569 ;; Defined at:
  2570 ;;		line 29 in file "ECU_layer/LED/ecu_led.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  led             1   12[COMRAM] PTR const struct .
  2573 ;;		 -> led5(1), led3(1), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  pin_config      1   14[COMRAM] struct .
  2576 ;;  ret             1    0        unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      unsigned char 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2586 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;Total ram usage:        3 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 4
  2593 ;; This function calls:
  2594 ;;		_GPIO_pIN_WRITE_LOGIC
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text4
  2601   004270                     __ptext4:
  2602                           	callstack 0
  2603   004270                     _led_turn_on:
  2604                           	callstack 26
  2605   004270                     
  2606                           ;ECU_layer/LED/ecu_led.c: 32:     pin_config_t pin_config ={.port = led->port_name ,
  2607   004270  C0CF  F00F         	movff	led_turn_on@F3065,led_turn_on@pin_config
  2608   004274  500D               	movf	led_turn_on@led^0,w,c
  2609   004276  6ED9               	movwf	fsr2l,c
  2610   004278  6ADA               	clrf	fsr2h,c
  2611   00427A  50DF               	movf	223,w,c
  2612   00427C  0B0F               	andlw	15
  2613   00427E  6E0E               	movwf	??_led_turn_on^0,c
  2614   004280  500F               	movf	led_turn_on@pin_config^0,w,c
  2615   004282  180E               	xorwf	??_led_turn_on^0,w,c
  2616   004284  0BF8               	andlw	-8
  2617   004286  180E               	xorwf	??_led_turn_on^0,w,c
  2618   004288  6E0F               	movwf	led_turn_on@pin_config^0,c
  2619   00428A  500D               	movf	led_turn_on@led^0,w,c
  2620   00428C  6ED9               	movwf	fsr2l,c
  2621   00428E  6ADA               	clrf	fsr2h,c
  2622   004290  38DF               	swapf	223,w,c
  2623   004292  0B07               	andlw	7
  2624   004294  6E0E               	movwf	??_led_turn_on^0,c
  2625   004296  460E               	rlncf	??_led_turn_on^0,f,c
  2626   004298  460E               	rlncf	??_led_turn_on^0,f,c
  2627   00429A  460E               	rlncf	??_led_turn_on^0,f,c
  2628   00429C  500F               	movf	led_turn_on@pin_config^0,w,c
  2629   00429E  180E               	xorwf	??_led_turn_on^0,w,c
  2630   0042A0  0BC7               	andlw	-57
  2631   0042A2  180E               	xorwf	??_led_turn_on^0,w,c
  2632   0042A4  6E0F               	movwf	led_turn_on@pin_config^0,c
  2633   0042A6  9C0F               	bcf	led_turn_on@pin_config^0,6,c
  2634   0042A8  500D               	movf	led_turn_on@led^0,w,c
  2635   0042AA  6ED9               	movwf	fsr2l,c
  2636   0042AC  6ADA               	clrf	fsr2h,c
  2637   0042AE  AEDF               	btfss	indf2,7,c
  2638   0042B0  D002               	bra	u12005
  2639   0042B2  8E0F               	bsf	led_turn_on@pin_config^0,7,c
  2640   0042B4  D001               	bra	u12007
  2641   0042B6                     u12005:
  2642   0042B6  9E0F               	bcf	led_turn_on@pin_config^0,7,c
  2643   0042B8                     u12007:
  2644   0042B8                     
  2645                           ;ECU_layer/LED/ecu_led.c: 36:     if(((void*)0) == led)
  2646   0042B8  500D               	movf	led_turn_on@led^0,w,c
  2647   0042BA  A4D8               	btfss	status,2,c
  2648   0042BC  EF62  F021         	goto	u12011
  2649   0042C0  EF64  F021         	goto	u12010
  2650   0042C4                     u12011:
  2651   0042C4  EF66  F021         	goto	l11054
  2652   0042C8                     u12010:
  2653   0042C8                     
  2654                           ;ECU_layer/LED/ecu_led.c: 39:     }
  2655   0042C8  EF6D  F021         	goto	l232
  2656   0042CC                     l11054:
  2657   0042CC  0E0F               	movlw	low led_turn_on@pin_config
  2658   0042CE  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  2659   0042D0  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2660   0042D2  0E01               	movlw	1
  2661   0042D4  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2662   0042D6  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2663   0042DA                     l232:
  2664   0042DA  0012               	return		;funcret
  2665   0042DC                     __end_of_led_turn_on:
  2666                           	callstack 0
  2667                           
  2668 ;; *************** function _led_turn_off *****************
  2669 ;; Defined at:
  2670 ;;		line 49 in file "ECU_layer/LED/ecu_led.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  led             1   12[COMRAM] PTR const struct .
  2673 ;;		 -> led5(1), led3(1), 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  pin_config      1   14[COMRAM] struct .
  2676 ;;  ret             1    0        unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      unsigned char 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2686 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;Total ram usage:        3 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		_GPIO_pIN_WRITE_LOGIC
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text5
  2701   0042DC                     __ptext5:
  2702                           	callstack 0
  2703   0042DC                     _led_turn_off:
  2704                           	callstack 26
  2705   0042DC                     
  2706                           ;ECU_layer/LED/ecu_led.c: 52:     pin_config_t pin_config ={.port = led->port_name ,
  2707   0042DC  C0CE  F00F         	movff	led_turn_off@F3070,led_turn_off@pin_config
  2708   0042E0  500D               	movf	led_turn_off@led^0,w,c
  2709   0042E2  6ED9               	movwf	fsr2l,c
  2710   0042E4  6ADA               	clrf	fsr2h,c
  2711   0042E6  50DF               	movf	223,w,c
  2712   0042E8  0B0F               	andlw	15
  2713   0042EA  6E0E               	movwf	??_led_turn_off^0,c
  2714   0042EC  500F               	movf	led_turn_off@pin_config^0,w,c
  2715   0042EE  180E               	xorwf	??_led_turn_off^0,w,c
  2716   0042F0  0BF8               	andlw	-8
  2717   0042F2  180E               	xorwf	??_led_turn_off^0,w,c
  2718   0042F4  6E0F               	movwf	led_turn_off@pin_config^0,c
  2719   0042F6  500D               	movf	led_turn_off@led^0,w,c
  2720   0042F8  6ED9               	movwf	fsr2l,c
  2721   0042FA  6ADA               	clrf	fsr2h,c
  2722   0042FC  38DF               	swapf	223,w,c
  2723   0042FE  0B07               	andlw	7
  2724   004300  6E0E               	movwf	??_led_turn_off^0,c
  2725   004302  460E               	rlncf	??_led_turn_off^0,f,c
  2726   004304  460E               	rlncf	??_led_turn_off^0,f,c
  2727   004306  460E               	rlncf	??_led_turn_off^0,f,c
  2728   004308  500F               	movf	led_turn_off@pin_config^0,w,c
  2729   00430A  180E               	xorwf	??_led_turn_off^0,w,c
  2730   00430C  0BC7               	andlw	-57
  2731   00430E  180E               	xorwf	??_led_turn_off^0,w,c
  2732   004310  6E0F               	movwf	led_turn_off@pin_config^0,c
  2733   004312  9C0F               	bcf	led_turn_off@pin_config^0,6,c
  2734   004314  500D               	movf	led_turn_off@led^0,w,c
  2735   004316  6ED9               	movwf	fsr2l,c
  2736   004318  6ADA               	clrf	fsr2h,c
  2737   00431A  AEDF               	btfss	indf2,7,c
  2738   00431C  D002               	bra	u12025
  2739   00431E  8E0F               	bsf	led_turn_off@pin_config^0,7,c
  2740   004320  D001               	bra	u12027
  2741   004322                     u12025:
  2742   004322  9E0F               	bcf	led_turn_off@pin_config^0,7,c
  2743   004324                     u12027:
  2744   004324                     
  2745                           ;ECU_layer/LED/ecu_led.c: 56:     if(((void*)0) == led)
  2746   004324  500D               	movf	led_turn_off@led^0,w,c
  2747   004326  A4D8               	btfss	status,2,c
  2748   004328  EF98  F021         	goto	u12031
  2749   00432C  EF9A  F021         	goto	u12030
  2750   004330                     u12031:
  2751   004330  EF9C  F021         	goto	l11074
  2752   004334                     u12030:
  2753   004334                     
  2754                           ;ECU_layer/LED/ecu_led.c: 59:     }
  2755   004334  EFA3  F021         	goto	l239
  2756   004338                     l11074:
  2757   004338  0E0F               	movlw	low led_turn_off@pin_config
  2758   00433A  6E04               	movwf	GPIO_pIN_WRITE_LOGIC@config_pin^0,c
  2759   00433C  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  2760   00433E  0E00               	movlw	0
  2761   004340  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  2762   004342  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  2763   004346                     l239:
  2764   004346  0012               	return		;funcret
  2765   004348                     __end_of_led_turn_off:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _led_toggle *****************
  2769 ;; Defined at:
  2770 ;;		line 69 in file "ECU_layer/LED/ecu_led.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  led             1    9[COMRAM] PTR const struct .
  2773 ;;		 -> led5(1), led3(1), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  pin_config      1   11[COMRAM] struct .
  2776 ;;  ret             1    0        unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      unsigned char 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        3 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 4
  2793 ;; This function calls:
  2794 ;;		_GPIO_pIN_TOGGLE_LOGIC
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text6
  2801   004486                     __ptext6:
  2802                           	callstack 0
  2803   004486                     _led_toggle:
  2804                           	callstack 26
  2805   004486                     
  2806                           ;ECU_layer/LED/ecu_led.c: 72:     pin_config_t pin_config ={.port = led->port_name ,
  2807   004486  C0CD  F00C         	movff	led_toggle@F3075,led_toggle@pin_config
  2808   00448A  500A               	movf	led_toggle@led^0,w,c
  2809   00448C  6ED9               	movwf	fsr2l,c
  2810   00448E  6ADA               	clrf	fsr2h,c
  2811   004490  50DF               	movf	223,w,c
  2812   004492  0B0F               	andlw	15
  2813   004494  6E0B               	movwf	??_led_toggle^0,c
  2814   004496  500C               	movf	led_toggle@pin_config^0,w,c
  2815   004498  180B               	xorwf	??_led_toggle^0,w,c
  2816   00449A  0BF8               	andlw	-8
  2817   00449C  180B               	xorwf	??_led_toggle^0,w,c
  2818   00449E  6E0C               	movwf	led_toggle@pin_config^0,c
  2819   0044A0  500A               	movf	led_toggle@led^0,w,c
  2820   0044A2  6ED9               	movwf	fsr2l,c
  2821   0044A4  6ADA               	clrf	fsr2h,c
  2822   0044A6  38DF               	swapf	223,w,c
  2823   0044A8  0B07               	andlw	7
  2824   0044AA  6E0B               	movwf	??_led_toggle^0,c
  2825   0044AC  460B               	rlncf	??_led_toggle^0,f,c
  2826   0044AE  460B               	rlncf	??_led_toggle^0,f,c
  2827   0044B0  460B               	rlncf	??_led_toggle^0,f,c
  2828   0044B2  500C               	movf	led_toggle@pin_config^0,w,c
  2829   0044B4  180B               	xorwf	??_led_toggle^0,w,c
  2830   0044B6  0BC7               	andlw	-57
  2831   0044B8  180B               	xorwf	??_led_toggle^0,w,c
  2832   0044BA  6E0C               	movwf	led_toggle@pin_config^0,c
  2833   0044BC  9C0C               	bcf	led_toggle@pin_config^0,6,c
  2834   0044BE  500A               	movf	led_toggle@led^0,w,c
  2835   0044C0  6ED9               	movwf	fsr2l,c
  2836   0044C2  6ADA               	clrf	fsr2h,c
  2837   0044C4  AEDF               	btfss	indf2,7,c
  2838   0044C6  D002               	bra	u12045
  2839   0044C8  8E0C               	bsf	led_toggle@pin_config^0,7,c
  2840   0044CA  D001               	bra	u12047
  2841   0044CC                     u12045:
  2842   0044CC  9E0C               	bcf	led_toggle@pin_config^0,7,c
  2843   0044CE                     u12047:
  2844   0044CE                     
  2845                           ;ECU_layer/LED/ecu_led.c: 76:     if(((void*)0) == led)
  2846   0044CE  500A               	movf	led_toggle@led^0,w,c
  2847   0044D0  A4D8               	btfss	status,2,c
  2848   0044D2  EF6D  F022         	goto	u12051
  2849   0044D6  EF6F  F022         	goto	u12050
  2850   0044DA                     u12051:
  2851   0044DA  EF71  F022         	goto	l11094
  2852   0044DE                     u12050:
  2853   0044DE                     
  2854                           ;ECU_layer/LED/ecu_led.c: 79:     }
  2855   0044DE  EF75  F022         	goto	l246
  2856   0044E2                     l11094:
  2857   0044E2  0E0C               	movlw	low led_toggle@pin_config
  2858   0044E4  6E04               	movwf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,c
  2859   0044E6  ECC1  F01E         	call	_GPIO_pIN_TOGGLE_LOGIC	;wreg free
  2860   0044EA                     l246:
  2861   0044EA  0012               	return		;funcret
  2862   0044EC                     __end_of_led_toggle:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _GPIO_pIN_TOGGLE_LOGIC *****************
  2866 ;; Defined at:
  2867 ;;		line 101 in file "MKAL_layer/gpio/pro_gpio.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  config_pin      1    3[COMRAM] PTR const struct .
  2870 ;;		 -> relay_toggle@pin_config(1), led_toggle@pin_config(1), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  ret             1    8[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      unsigned char 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        6 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 3
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_led_toggle
  2893 ;;		_relay_toggle
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text7
  2898   003D82                     __ptext7:
  2899                           	callstack 0
  2900   003D82                     _GPIO_pIN_TOGGLE_LOGIC:
  2901                           	callstack 26
  2902   003D82                     
  2903                           ;MKAL_layer/gpio/pro_gpio.c: 101: Std_ReturnType GPIO_pIN_TOGGLE_LOGIC(const pin_config_
      +                          t *config_pin);MKAL_layer/gpio/pro_gpio.c: 102: {;MKAL_layer/gpio/pro_gpio.c: 103:     S
      +                          td_ReturnType ret =(Std_ReturnType)0x01;
  2904   003D82  0E01               	movlw	1
  2905   003D84  6E09               	movwf	GPIO_pIN_TOGGLE_LOGIC@ret^0,c
  2906                           
  2907                           ;MKAL_layer/gpio/pro_gpio.c: 104:     if ((((void*)0) == config_pin) || (config_pin->pin
      +                           > 8 -1)){
  2908   003D86  5004               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
  2909   003D88  B4D8               	btfsc	status,2,c
  2910   003D8A  EFC9  F01E         	goto	u11341
  2911   003D8E  EFCB  F01E         	goto	u11340
  2912   003D92                     u11341:
  2913   003D92  EFDB  F01E         	goto	l10528
  2914   003D96                     u11340:
  2915   003D96  5004               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
  2916   003D98  6ED9               	movwf	fsr2l,c
  2917   003D9A  6ADA               	clrf	fsr2h,c
  2918   003D9C  30DF               	rrcf	223,w,c
  2919   003D9E  32E8               	rrcf	wreg,f,c
  2920   003DA0  32E8               	rrcf	wreg,f,c
  2921   003DA2  0B07               	andlw	7
  2922   003DA4  6E05               	movwf	??_GPIO_pIN_TOGGLE_LOGIC^0,c
  2923   003DA6  0E07               	movlw	7
  2924   003DA8  6405               	cpfsgt	??_GPIO_pIN_TOGGLE_LOGIC^0,c
  2925   003DAA  EFD9  F01E         	goto	u11351
  2926   003DAE  EFDB  F01E         	goto	u11350
  2927   003DB2                     u11351:
  2928   003DB2  EFDF  F01E         	goto	l10530
  2929   003DB6                     u11350:
  2930   003DB6                     l10528:
  2931                           
  2932                           ;MKAL_layer/gpio/pro_gpio.c: 105:         ret =(Std_ReturnType)0x00;
  2933   003DB6  0E00               	movlw	0
  2934   003DB8  6E09               	movwf	GPIO_pIN_TOGGLE_LOGIC@ret^0,c
  2935                           
  2936                           ;MKAL_layer/gpio/pro_gpio.c: 106:     }
  2937   003DBA  EF05  F01F         	goto	l10532
  2938   003DBE                     l10530:
  2939                           
  2940                           ;MKAL_layer/gpio/pro_gpio.c: 108:         (*lat_regisrers[config_pin->port] ^= ((uint8)1
      +                           << config_pin->pin));
  2941   003DBE  5004               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
  2942   003DC0  6ED9               	movwf	fsr2l,c
  2943   003DC2  6ADA               	clrf	fsr2h,c
  2944   003DC4  30DF               	rrcf	223,w,c
  2945   003DC6  32E8               	rrcf	wreg,f,c
  2946   003DC8  32E8               	rrcf	wreg,f,c
  2947   003DCA  0B07               	andlw	7
  2948   003DCC  6E05               	movwf	??_GPIO_pIN_TOGGLE_LOGIC^0,c
  2949   003DCE  0E01               	movlw	1
  2950   003DD0  6E06               	movwf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,c
  2951   003DD2  2A05               	incf	??_GPIO_pIN_TOGGLE_LOGIC^0,f,c
  2952   003DD4  EFEE  F01E         	goto	u11364
  2953   003DD8                     u11365:
  2954   003DD8  90D8               	bcf	status,0,c
  2955   003DDA  3606               	rlcf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,f,c
  2956   003DDC                     u11364:
  2957   003DDC  2E05               	decfsz	??_GPIO_pIN_TOGGLE_LOGIC^0,f,c
  2958   003DDE  EFEC  F01E         	goto	u11365
  2959   003DE2  5004               	movf	GPIO_pIN_TOGGLE_LOGIC@config_pin^0,w,c
  2960   003DE4  6ED9               	movwf	fsr2l,c
  2961   003DE6  6ADA               	clrf	fsr2h,c
  2962   003DE8  50DF               	movf	223,w,c
  2963   003DEA  0B07               	andlw	7
  2964   003DEC  0D02               	mullw	2
  2965   003DEE  50F3               	movf	243,w,c
  2966   003DF0  0FD7               	addlw	low _lat_regisrers
  2967   003DF2  6ED9               	movwf	fsr2l,c
  2968   003DF4  6ADA               	clrf	fsr2h,c
  2969   003DF6  CFDE F007          	movff	postinc2,??_GPIO_pIN_TOGGLE_LOGIC+2
  2970   003DFA  CFDD F008          	movff	postdec2,??_GPIO_pIN_TOGGLE_LOGIC+3
  2971   003DFE  C007  FFD9         	movff	??_GPIO_pIN_TOGGLE_LOGIC+2,fsr2l
  2972   003E02  C008  FFDA         	movff	??_GPIO_pIN_TOGGLE_LOGIC+3,fsr2h
  2973   003E06  5006               	movf	(??_GPIO_pIN_TOGGLE_LOGIC+1)^0,w,c
  2974   003E08  1ADF               	xorwf	indf2,f,c
  2975   003E0A                     l10532:
  2976                           
  2977                           ;MKAL_layer/gpio/pro_gpio.c: 110:     return ret;
  2978   003E0A  5009               	movf	GPIO_pIN_TOGGLE_LOGIC@ret^0,w,c
  2979   003E0C  0012               	return		;funcret
  2980   003E0E                     __end_of_GPIO_pIN_TOGGLE_LOGIC:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _lcd_4bit_send_string_pos *****************
  2984 ;; Defined at:
  2985 ;;		line 162 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  lcd             1   25[COMRAM] PTR const struct .
  2988 ;;		 -> lcd_4bit(6), 
  2989 ;;  row             1   26[COMRAM] unsigned char 
  2990 ;;  column          1   27[COMRAM] unsigned char 
  2991 ;;  str             2   28[COMRAM] PTR unsigned char 
  2992 ;;		 -> STR_9(19), STR_8(15), STR_7(18), STR_6(17), 
  2993 ;;		 -> STR_5(16), STR_4(14), string(6), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  ret             1    0        unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        5 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 7
  3012 ;; This function calls:
  3013 ;;		_lcd_4bit_send_char_data
  3014 ;;		_lcd_4bit_set_cursor
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text8
  3021   003E0E                     __ptext8:
  3022                           	callstack 0
  3023   003E0E                     _lcd_4bit_send_string_pos:
  3024                           	callstack 23
  3025   003E0E                     
  3026                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 164:     if(((void*)0) == lcd){
  3027   003E0E  501A               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  3028   003E10  A4D8               	btfss	status,2,c
  3029   003E12  EF0D  F01F         	goto	u11861
  3030   003E16  EF0F  F01F         	goto	u11860
  3031   003E1A                     u11861:
  3032   003E1A  EF11  F01F         	goto	l10940
  3033   003E1E                     u11860:
  3034   003E1E                     
  3035                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 166:     }
  3036   003E1E  EF4C  F01F         	goto	l86
  3037   003E22                     l10940:
  3038   003E22  C01A  F014         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  3039   003E26  C01B  F015         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  3040   003E2A  C01C  F016         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@coulmn
  3041   003E2E  EC2F  F01E         	call	_lcd_4bit_set_cursor	;wreg free
  3042                           
  3043                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 169:         while(*str){
  3044   003E32  EF33  F01F         	goto	l10946
  3045   003E36                     l10942:
  3046   003E36  C01A  F011         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  3047   003E3A  C01D  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  3048   003E3E  C01E  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  3049   003E42  0E00               	movlw	low (__smallconst shr (0+16))
  3050   003E44  6EF8               	movwf	tblptru,c
  3051   003E46  0E0F               	movlw	(high __ramtop+-1)
  3052   003E48  64F7               	cpfsgt	tblptrh,c
  3053   003E4A  D003               	bra	u11877
  3054   003E4C  0008               	tblrd		*
  3055   003E4E  50F5               	movf	tablat,w,c
  3056   003E50  D005               	bra	u11870
  3057   003E52                     u11877:
  3058   003E52  CFF6 FFE9          	movff	tblptrl,fsr0l
  3059   003E56  CFF7 FFEA          	movff	tblptrh,fsr0h
  3060   003E5A  50EF               	movf	indf0,w,c
  3061   003E5C                     u11870:
  3062   003E5C  6E12               	movwf	lcd_4bit_send_char_data@data^0,c
  3063   003E5E  ECA9  F022         	call	_lcd_4bit_send_char_data	;wreg free
  3064   003E62  4A1D               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  3065   003E64  2A1E               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  3066   003E66                     l10946:
  3067                           
  3068                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 169:         while(*str){
  3069   003E66  C01D  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  3070   003E6A  C01E  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  3071   003E6E  0E00               	movlw	low (__smallconst shr (0+16))
  3072   003E70  6EF8               	movwf	tblptru,c
  3073   003E72  0E0F               	movlw	(high __ramtop+-1)
  3074   003E74  64F7               	cpfsgt	tblptrh,c
  3075   003E76  D003               	bra	u11887
  3076   003E78  0008               	tblrd		*
  3077   003E7A  50F5               	movf	tablat,w,c
  3078   003E7C  D005               	bra	u11880
  3079   003E7E                     u11887:
  3080   003E7E  CFF6 FFE9          	movff	tblptrl,fsr0l
  3081   003E82  CFF7 FFEA          	movff	tblptrh,fsr0h
  3082   003E86  50EF               	movf	indf0,w,c
  3083   003E88                     u11880:
  3084   003E88  0900               	iorlw	0
  3085   003E8A  A4D8               	btfss	status,2,c
  3086   003E8C  EF4A  F01F         	goto	u11891
  3087   003E90  EF4C  F01F         	goto	u11890
  3088   003E94                     u11891:
  3089   003E94  EF1B  F01F         	goto	l10942
  3090   003E98                     u11890:
  3091   003E98                     l86:
  3092   003E98  0012               	return		;funcret
  3093   003E9A                     __end_of_lcd_4bit_send_string_pos:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _lcd_4bit_set_cursor *****************
  3097 ;; Defined at:
  3098 ;;		line 534 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  lcd             1   19[COMRAM] PTR const struct .
  3101 ;;		 -> lcd_4bit(6), 
  3102 ;;  row             1   20[COMRAM] unsigned char 
  3103 ;;  coulmn          1   21[COMRAM] unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  ret             1   24[COMRAM] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      unsigned char 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3115 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;Total ram usage:        6 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 6
  3122 ;; This function calls:
  3123 ;;		_lcd_4bit_send_command
  3124 ;; This function is called by:
  3125 ;;		_lcd_4bit_send_string_pos
  3126 ;;		_lcd_4bit_send_char_data_pos
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text9
  3131   003C5E                     __ptext9:
  3132                           	callstack 0
  3133   003C5E                     _lcd_4bit_set_cursor:
  3134                           	callstack 23
  3135   003C5E                     
  3136                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 535:     Std_ReturnType ret = (Std_ReturnType)0x01;
  3137   003C5E  0E01               	movlw	1
  3138   003C60  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  3139   003C62                     
  3140                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 536:     coulmn--;
  3141   003C62  0616               	decf	lcd_4bit_set_cursor@coulmn^0,f,c
  3142                           
  3143                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 537:     switch(row){
  3144   003C64  EF5C  F01E         	goto	l10430
  3145   003C68                     l10422:
  3146   003C68  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3147   003C6C  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  3148   003C6E  0F80               	addlw	128
  3149   003C70  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3150   003C72  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3151   003C76  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  3152   003C78  EF79  F01E         	goto	l10432
  3153   003C7C                     l10424:
  3154   003C7C  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3155   003C80  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  3156   003C82  0FC0               	addlw	192
  3157   003C84  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3158   003C86  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3159   003C8A  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  3160   003C8C  EF79  F01E         	goto	l10432
  3161   003C90                     l10426:
  3162   003C90  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3163   003C94  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  3164   003C96  0F94               	addlw	148
  3165   003C98  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3166   003C9A  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3167   003C9E  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  3168   003CA0  EF79  F01E         	goto	l10432
  3169   003CA4                     l10428:
  3170   003CA4  C014  F011         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  3171   003CA8  5016               	movf	lcd_4bit_set_cursor@coulmn^0,w,c
  3172   003CAA  0FD4               	addlw	212
  3173   003CAC  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3174   003CAE  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3175   003CB2  6E19               	movwf	lcd_4bit_set_cursor@ret^0,c
  3176   003CB4  EF79  F01E         	goto	l10432
  3177   003CB8                     l10430:
  3178   003CB8  5015               	movf	lcd_4bit_set_cursor@row^0,w,c
  3179   003CBA  6E17               	movwf	??_lcd_4bit_set_cursor^0,c
  3180   003CBC  6A18               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  3181                           
  3182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3183                           ; Switch size 1, requested type "simple"
  3184                           ; Number of cases is 1, Range of values is 0 to 0
  3185                           ; switch strategies available:
  3186                           ; Name         Instructions Cycles
  3187                           ; simple_byte            4     3 (average)
  3188                           ;	Chosen strategy is simple_byte
  3189   003CBE  5018               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  3190   003CC0  0A00               	xorlw	0	; case 0
  3191   003CC2  B4D8               	btfsc	status,2,c
  3192   003CC4  EF66  F01E         	goto	l12004
  3193   003CC8  EF79  F01E         	goto	l10432
  3194   003CCC                     l12004:
  3195                           
  3196                           ; Switch size 1, requested type "simple"
  3197                           ; Number of cases is 4, Range of values is 1 to 4
  3198                           ; switch strategies available:
  3199                           ; Name         Instructions Cycles
  3200                           ; simple_byte           13     7 (average)
  3201                           ;	Chosen strategy is simple_byte
  3202   003CCC  5017               	movf	??_lcd_4bit_set_cursor^0,w,c
  3203   003CCE  0A01               	xorlw	1	; case 1
  3204   003CD0  B4D8               	btfsc	status,2,c
  3205   003CD2  EF34  F01E         	goto	l10422
  3206   003CD6  0A03               	xorlw	3	; case 2
  3207   003CD8  B4D8               	btfsc	status,2,c
  3208   003CDA  EF3E  F01E         	goto	l10424
  3209   003CDE  0A01               	xorlw	1	; case 3
  3210   003CE0  B4D8               	btfsc	status,2,c
  3211   003CE2  EF48  F01E         	goto	l10426
  3212   003CE6  0A07               	xorlw	7	; case 4
  3213   003CE8  B4D8               	btfsc	status,2,c
  3214   003CEA  EF52  F01E         	goto	l10428
  3215   003CEE  EF79  F01E         	goto	l10432
  3216   003CF2                     l10432:
  3217                           
  3218                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 544:     return ret;
  3219   003CF2  5019               	movf	lcd_4bit_set_cursor@ret^0,w,c
  3220   003CF4  0012               	return		;funcret
  3221   003CF6                     __end_of_lcd_4bit_set_cursor:
  3222                           	callstack 0
  3223                           
  3224 ;; *************** function _lcd_4bit_send_char_data *****************
  3225 ;; Defined at:
  3226 ;;		line 88 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  lcd             1   16[COMRAM] PTR const struct .
  3229 ;;		 -> lcd_4bit(6), 
  3230 ;;  data            1   17[COMRAM] unsigned char 
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  ret             1   18[COMRAM] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      unsigned char 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;Total ram usage:        3 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 5
  3249 ;; This function calls:
  3250 ;;		_GPIO_pIN_WRITE_LOGIC
  3251 ;;		_lcd_4bit_send_enable_signal
  3252 ;;		_lcd_send_4bits
  3253 ;; This function is called by:
  3254 ;;		_lcd_4bit_send_string_pos
  3255 ;;		_lcd_4bit_send_char_data_pos
  3256 ;;		_lcd_4bit_send_string
  3257 ;;		_lcd_4bit_send_custom_char
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text10
  3262   004552                     __ptext10:
  3263                           	callstack 0
  3264   004552                     _lcd_4bit_send_char_data:
  3265                           	callstack 24
  3266   004552                     
  3267                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 90:     if(((void*)0) == lcd){
  3268   004552  5011               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  3269   004554  A4D8               	btfss	status,2,c
  3270   004556  EFAF  F022         	goto	u11261
  3271   00455A  EFB1  F022         	goto	u11260
  3272   00455E                     u11261:
  3273   00455E  EFB5  F022         	goto	l10412
  3274   004562                     u11260:
  3275   004562                     
  3276                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 91:         ret = 0;
  3277   004562  0E00               	movlw	0
  3278   004564  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  3279                           
  3280                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 92:     }
  3281   004566  EFD6  F022         	goto	l10414
  3282   00456A                     l10412:
  3283                           
  3284                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 96:         ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_rs),
      +                           GPIO_HIGH);
  3285   00456A  C011  F004         	movff	lcd_4bit_send_char_data@lcd,GPIO_pIN_WRITE_LOGIC@config_pin
  3286   00456E  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3287   004570  0E01               	movlw	1
  3288   004572  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3289   004574  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3290   004578  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  3291                           
  3292                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 98:         ret = lcd_send_4bits(lcd, data >> 4);
  3293   00457A  C011  F00D         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  3294   00457E  3812               	swapf	lcd_4bit_send_char_data@data^0,w,c
  3295   004580  0B0F               	andlw	15
  3296   004582  6E0E               	movwf	lcd_send_4bits@_data_command^0,c
  3297   004584  EC00  F021         	call	_lcd_send_4bits	;wreg free
  3298   004588  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  3299                           
  3300                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 100:         ret = lcd_4bit_send_enable_signal(lcd);
  3301   00458A  C011  F00D         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  3302   00458E  ECD8  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  3303   004592  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  3304                           
  3305                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 102:         ret = lcd_send_4bits(lcd, data);
  3306   004594  C011  F00D         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  3307   004598  C012  F00E         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  3308   00459C  EC00  F021         	call	_lcd_send_4bits	;wreg free
  3309   0045A0  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  3310                           
  3311                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 104:         ret = lcd_4bit_send_enable_signal(lcd);
  3312   0045A2  C011  F00D         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  3313   0045A6  ECD8  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  3314   0045AA  6E13               	movwf	lcd_4bit_send_char_data@ret^0,c
  3315   0045AC                     l10414:
  3316                           
  3317                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 106:     return ret;
  3318   0045AC  5013               	movf	lcd_4bit_send_char_data@ret^0,w,c
  3319   0045AE  0012               	return		;funcret
  3320   0045B0                     __end_of_lcd_4bit_send_char_data:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _intitialized_functions *****************
  3324 ;; Defined at:
  3325 ;;		line 205 in file "main2.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 7
  3346 ;; This function calls:
  3347 ;;		_ADC_inti
  3348 ;;		_GPIO_pIN_INTIALIZE
  3349 ;;		_Interrupt_Intx_Inti
  3350 ;;		_MSSP_I2C_Init
  3351 ;;		_Timer2_init
  3352 ;;		_Timer3_init
  3353 ;;		_ccp1_init
  3354 ;;		_lcd_4bit_intialize
  3355 ;;		_led_intialize
  3356 ;;		_motor_intialize
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text11
  3363   003F22                     __ptext11:
  3364                           	callstack 0
  3365   003F22                     _intitialized_functions:
  3366                           	callstack 23
  3367   003F22                     
  3368                           ;main2.c: 206:     MSSP_I2C_Init(&mssp_i2c);
  3369   003F22  0E12               	movlw	low _mssp_i2c
  3370   003F24  6E61               	movwf	MSSP_I2C_Init@i2c_obj^0,c
  3371   003F26  0E01               	movlw	high _mssp_i2c
  3372   003F28  6E62               	movwf	(MSSP_I2C_Init@i2c_obj+1)^0,c
  3373   003F2A  ECB1  F016         	call	_MSSP_I2C_Init	;wreg free
  3374                           
  3375                           ;main2.c: 207:     ADC_inti(&ADC_);
  3376   003F2E  0E37               	movlw	low _ADC_
  3377   003F30  6E07               	movwf	ADC_inti@ADC_conf^0,c
  3378   003F32  0E01               	movlw	high _ADC_
  3379   003F34  6E08               	movwf	(ADC_inti@ADC_conf+1)^0,c
  3380   003F36  EC31  F01C         	call	_ADC_inti	;wreg free
  3381   003F3A                     
  3382                           ;main2.c: 208:     Interrupt_Intx_Inti(&INT_0);
  3383   003F3A  0E31               	movlw	low _INT_0
  3384   003F3C  6E14               	movwf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,c
  3385   003F3E  0E01               	movlw	high _INT_0
  3386   003F40  6E15               	movwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,c
  3387   003F42  EC76  F022         	call	_Interrupt_Intx_Inti	;wreg free
  3388   003F46                     
  3389                           ;main2.c: 209:     Interrupt_Intx_Inti(&INT_1);
  3390   003F46  0E2B               	movlw	low _INT_1
  3391   003F48  6E14               	movwf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,c
  3392   003F4A  0E01               	movlw	high _INT_1
  3393   003F4C  6E15               	movwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,c
  3394   003F4E  EC76  F022         	call	_Interrupt_Intx_Inti	;wreg free
  3395   003F52                     
  3396                           ;main2.c: 210:     motor_intialize(&motor_1);
  3397   003F52  0EFD               	movlw	low _motor_1
  3398   003F54  6E11               	movwf	motor_intialize@motor_pin^0,c
  3399   003F56  EC10  F025         	call	_motor_intialize	;wreg free
  3400   003F5A                     
  3401                           ;main2.c: 211:     motor_intialize(&motor_2);
  3402   003F5A  0EFB               	movlw	low _motor_2
  3403   003F5C  6E11               	movwf	motor_intialize@motor_pin^0,c
  3404   003F5E  EC10  F025         	call	_motor_intialize	;wreg free
  3405   003F62                     
  3406                           ;main2.c: 212:     ccp1_init(&ccp1_);
  3407   003F62  0E21               	movlw	low _ccp1_
  3408   003F64  6E1D               	movwf	ccp1_init@ccp1_^0,c
  3409   003F66  0E01               	movlw	high _ccp1_
  3410   003F68  6E1E               	movwf	(ccp1_init@ccp1_+1)^0,c
  3411   003F6A  EC02  F016         	call	_ccp1_init	;wreg free
  3412   003F6E                     
  3413                           ;main2.c: 213:     Timer2_init(&Timer2);
  3414   003F6E  0ED1               	movlw	low _Timer2
  3415   003F70  6E04               	movwf	Timer2_init@Timer2^0,c
  3416   003F72  EC4D  F01F         	call	_Timer2_init	;wreg free
  3417   003F76                     
  3418                           ;main2.c: 214:     Timer3_init(&Timer3_1);
  3419   003F76  0E69               	movlw	low _Timer3_1
  3420   003F78  6E06               	movwf	Timer3_init@Timer3^0,c
  3421   003F7A  0E01               	movlw	high _Timer3_1
  3422   003F7C  6E07               	movwf	(Timer3_init@Timer3+1)^0,c
  3423   003F7E  ECE4  F01C         	call	_Timer3_init	;wreg free
  3424   003F82                     
  3425                           ;main2.c: 215:     GPIO_pIN_INTIALIZE(&relay);
  3426   003F82  0E73               	movlw	low _relay
  3427   003F84  6E0D               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  3428   003F86  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3429   003F88  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3430   003F8C                     
  3431                           ;main2.c: 216:     lcd_4bit_intialize(&lcd_4bit);
  3432   003F8C  0EF5               	movlw	low _lcd_4bit
  3433   003F8E  6E14               	movwf	lcd_4bit_intialize@lcd^0,c
  3434   003F90  EC2C  F01A         	call	_lcd_4bit_intialize	;wreg free
  3435   003F94                     
  3436                           ;main2.c: 217:     led_intialize(&led3);
  3437   003F94  0E75               	movlw	low _led3
  3438   003F96  6E11               	movwf	led_intialize@led^0,c
  3439   003F98  EC0F  F022         	call	_led_intialize	;wreg free
  3440   003F9C                     
  3441                           ;main2.c: 218:     led_intialize(&led5);
  3442   003F9C  0E74               	movlw	low _led5
  3443   003F9E  6E11               	movwf	led_intialize@led^0,c
  3444   003FA0  EC0F  F022         	call	_led_intialize	;wreg free
  3445   003FA4  0012               	return		;funcret
  3446   003FA6                     __end_of_intitialized_functions:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _motor_intialize *****************
  3450 ;; Defined at:
  3451 ;;		line 7 in file "ECU_layer/DC_MOTOR/ecu_dc_motor.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  motor_pin       1   16[COMRAM] PTR const struct .
  3454 ;;		 -> motor_2(2), motor_1(2), 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  ret             1   18[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      unsigned char 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        3 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 5
  3473 ;; This function calls:
  3474 ;;		_GPIO_pIN_INTIALIZE
  3475 ;; This function is called by:
  3476 ;;		_intitialized_functions
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text12
  3481   004A20                     __ptext12:
  3482                           	callstack 0
  3483   004A20                     _motor_intialize:
  3484                           	callstack 24
  3485   004A20                     
  3486                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 9:     if (((void*)0) == motor_pin){
  3487   004A20  5011               	movf	motor_intialize@motor_pin^0,w,c
  3488   004A22  A4D8               	btfss	status,2,c
  3489   004A24  EF16  F025         	goto	u11311
  3490   004A28  EF18  F025         	goto	u11310
  3491   004A2C                     u11311:
  3492   004A2C  EF1A  F025         	goto	l10500
  3493   004A30                     u11310:
  3494   004A30                     
  3495                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 11:     }
  3496   004A30  EF2A  F025         	goto	l197
  3497   004A34                     l10500:
  3498                           
  3499                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 13:     {;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 14:    
      +                               ret =GPIO_pIN_INTIALIZE(&(motor_pin->motor_pin_config[0]));
  3500   004A34  C011  F00D         	movff	motor_intialize@motor_pin,GPIO_pIN_INTIALIZE@config_pin
  3501   004A38  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3502   004A3A  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3503   004A3E  6E13               	movwf	motor_intialize@ret^0,c
  3504                           
  3505                           ;ECU_layer/DC_MOTOR/ecu_dc_motor.c: 15:         ret =GPIO_pIN_INTIALIZE(&(motor_pin->mot
      +                          or_pin_config[1]));
  3506   004A40  C011  F012         	movff	motor_intialize@motor_pin,??_motor_intialize
  3507   004A44  0E01               	movlw	1
  3508   004A46  2612               	addwf	??_motor_intialize^0,f,c
  3509   004A48  C012  F00D         	movff	??_motor_intialize,GPIO_pIN_INTIALIZE@config_pin
  3510   004A4C  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3511   004A4E  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3512   004A52  6E13               	movwf	motor_intialize@ret^0,c
  3513   004A54                     l197:
  3514   004A54  0012               	return		;funcret
  3515   004A56                     __end_of_motor_intialize:
  3516                           	callstack 0
  3517                           
  3518 ;; *************** function _led_intialize *****************
  3519 ;; Defined at:
  3520 ;;		line 9 in file "ECU_layer/LED/ecu_led.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  led             1   16[COMRAM] PTR const struct .
  3523 ;;		 -> led5(1), led3(1), 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  pin_config      1   18[COMRAM] struct .
  3526 ;;  ret             1    0        unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      unsigned char 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3536 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;Total ram usage:        3 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 5
  3543 ;; This function calls:
  3544 ;;		_GPIO_pIN_INTIALIZE
  3545 ;; This function is called by:
  3546 ;;		_intitialized_functions
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text13
  3551   00441E                     __ptext13:
  3552                           	callstack 0
  3553   00441E                     _led_intialize:
  3554                           	callstack 24
  3555   00441E                     
  3556                           ;ECU_layer/LED/ecu_led.c: 12:     pin_config_t pin_config ={.port = led->port_name ,
  3557   00441E  C0D0  F013         	movff	led_intialize@F3060,led_intialize@pin_config
  3558   004422  5011               	movf	led_intialize@led^0,w,c
  3559   004424  6ED9               	movwf	fsr2l,c
  3560   004426  6ADA               	clrf	fsr2h,c
  3561   004428  50DF               	movf	223,w,c
  3562   00442A  0B0F               	andlw	15
  3563   00442C  6E12               	movwf	??_led_intialize^0,c
  3564   00442E  5013               	movf	led_intialize@pin_config^0,w,c
  3565   004430  1812               	xorwf	??_led_intialize^0,w,c
  3566   004432  0BF8               	andlw	-8
  3567   004434  1812               	xorwf	??_led_intialize^0,w,c
  3568   004436  6E13               	movwf	led_intialize@pin_config^0,c
  3569   004438  5011               	movf	led_intialize@led^0,w,c
  3570   00443A  6ED9               	movwf	fsr2l,c
  3571   00443C  6ADA               	clrf	fsr2h,c
  3572   00443E  38DF               	swapf	223,w,c
  3573   004440  0B07               	andlw	7
  3574   004442  6E12               	movwf	??_led_intialize^0,c
  3575   004444  4612               	rlncf	??_led_intialize^0,f,c
  3576   004446  4612               	rlncf	??_led_intialize^0,f,c
  3577   004448  4612               	rlncf	??_led_intialize^0,f,c
  3578   00444A  5013               	movf	led_intialize@pin_config^0,w,c
  3579   00444C  1812               	xorwf	??_led_intialize^0,w,c
  3580   00444E  0BC7               	andlw	-57
  3581   004450  1812               	xorwf	??_led_intialize^0,w,c
  3582   004452  6E13               	movwf	led_intialize@pin_config^0,c
  3583   004454  9C13               	bcf	led_intialize@pin_config^0,6,c
  3584   004456  5011               	movf	led_intialize@led^0,w,c
  3585   004458  6ED9               	movwf	fsr2l,c
  3586   00445A  6ADA               	clrf	fsr2h,c
  3587   00445C  AEDF               	btfss	indf2,7,c
  3588   00445E  D002               	bra	u11325
  3589   004460  8E13               	bsf	led_intialize@pin_config^0,7,c
  3590   004462  D001               	bra	u11327
  3591   004464                     u11325:
  3592   004464  9E13               	bcf	led_intialize@pin_config^0,7,c
  3593   004466                     u11327:
  3594   004466                     
  3595                           ;ECU_layer/LED/ecu_led.c: 16:     if(((void*)0) == led)
  3596   004466  5011               	movf	led_intialize@led^0,w,c
  3597   004468  A4D8               	btfss	status,2,c
  3598   00446A  EF39  F022         	goto	u11331
  3599   00446E  EF3B  F022         	goto	u11330
  3600   004472                     u11331:
  3601   004472  EF3D  F022         	goto	l10520
  3602   004476                     u11330:
  3603   004476                     
  3604                           ;ECU_layer/LED/ecu_led.c: 19:     }
  3605   004476  EF42  F022         	goto	l225
  3606   00447A                     l10520:
  3607   00447A  0E13               	movlw	low led_intialize@pin_config
  3608   00447C  6E0D               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  3609   00447E  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3610   004480  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3611   004484                     l225:
  3612   004484  0012               	return		;funcret
  3613   004486                     __end_of_led_intialize:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _lcd_4bit_intialize *****************
  3617 ;; Defined at:
  3618 ;;		line 22 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  lcd             1   19[COMRAM] PTR const struct .
  3621 ;;		 -> lcd_4bit(6), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  ret             1   22[COMRAM] unsigned char 
  3624 ;;  l_data_pins_    1   21[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      unsigned char 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        4 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 6
  3641 ;; This function calls:
  3642 ;;		_GPIO_pIN_INTIALIZE
  3643 ;;		_lcd_4bit_send_command
  3644 ;; This function is called by:
  3645 ;;		_intitialized_functions
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text14
  3650   003458                     __ptext14:
  3651                           	callstack 0
  3652   003458                     _lcd_4bit_intialize:
  3653                           	callstack 23
  3654   003458                     
  3655                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 24:     uint8 l_data_pins_counter = 0;
  3656   003458  0E00               	movlw	0
  3657   00345A  6E16               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  3658                           
  3659                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 25:     if(((void*)0) == lcd){
  3660   00345C  5014               	movf	lcd_4bit_intialize@lcd^0,w,c
  3661   00345E  A4D8               	btfss	status,2,c
  3662   003460  EF34  F01A         	goto	u11241
  3663   003464  EF36  F01A         	goto	u11240
  3664   003468                     u11241:
  3665   003468  EF38  F01A         	goto	l10370
  3666   00346C                     u11240:
  3667   00346C                     
  3668                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 27:     }
  3669   00346C  EFA6  F01A         	goto	l55
  3670   003470                     l10370:
  3671                           
  3672                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 29:         ret = GPIO_pIN_INTIALIZE(&(lcd->lcd_rs));
  3673   003470  C014  F00D         	movff	lcd_4bit_intialize@lcd,GPIO_pIN_INTIALIZE@config_pin
  3674   003474  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3675   003476  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3676   00347A  6E17               	movwf	lcd_4bit_intialize@ret^0,c
  3677                           
  3678                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 30:         ret = GPIO_pIN_INTIALIZE(&(lcd->lcd_en));
  3679   00347C  C014  F015         	movff	lcd_4bit_intialize@lcd,??_lcd_4bit_intialize
  3680   003480  0E01               	movlw	1
  3681   003482  2615               	addwf	??_lcd_4bit_intialize^0,f,c
  3682   003484  C015  F00D         	movff	??_lcd_4bit_intialize,GPIO_pIN_INTIALIZE@config_pin
  3683   003488  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3684   00348A  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3685   00348E  6E17               	movwf	lcd_4bit_intialize@ret^0,c
  3686   003490                     
  3687                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 31:         for(l_data_pins_counter=0; l_data_pins_cou
      +                          nter<4; l_data_pins_counter++){
  3688   003490  0E00               	movlw	0
  3689   003492  6E16               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  3690   003494                     l10378:
  3691   003494  5014               	movf	lcd_4bit_intialize@lcd^0,w,c
  3692   003496  2416               	addwf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  3693   003498  6E15               	movwf	??_lcd_4bit_intialize^0,c
  3694   00349A  0E02               	movlw	2
  3695   00349C  2615               	addwf	??_lcd_4bit_intialize^0,f,c
  3696   00349E  C015  F00D         	movff	??_lcd_4bit_intialize,GPIO_pIN_INTIALIZE@config_pin
  3697   0034A2  6A0E               	clrf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  3698   0034A4  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  3699   0034A8                     
  3700                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 33:         }
  3701   0034A8  2A16               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  3702   0034AA  0E03               	movlw	3
  3703   0034AC  6416               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  3704   0034AE  EF5B  F01A         	goto	u11251
  3705   0034B2  EF5D  F01A         	goto	u11250
  3706   0034B6                     u11251:
  3707   0034B6  EF4A  F01A         	goto	l10378
  3708   0034BA                     u11250:
  3709   0034BA                     
  3710                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 34:         _delay((unsigned long)((20)*(4000000UL/400
      +                          0.0)));
  3711   0034BA  0E1A               	movlw	26
  3712   0034BC  6E15               	movwf	??_lcd_4bit_intialize^0,c
  3713   0034BE  0EF8               	movlw	248
  3714   0034C0                     u12827:
  3715   0034C0  2EE8               	decfsz	wreg,f,c
  3716   0034C2  D7FE               	bra	u12827
  3717   0034C4  2E15               	decfsz	??_lcd_4bit_intialize^0,f,c
  3718   0034C6  D7FC               	bra	u12827
  3719   0034C8  D000               	nop2	
  3720   0034CA  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3721   0034CE  0E38               	movlw	56
  3722   0034D0  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3723   0034D2  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3724   0034D6                     
  3725                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 36:         _delay((unsigned long)((5)*(4000000UL/4000
      +                          .0)));
  3726   0034D6  0E07               	movlw	7
  3727   0034D8  6E15               	movwf	??_lcd_4bit_intialize^0,c
  3728   0034DA  0E7D               	movlw	125
  3729   0034DC                     u12837:
  3730   0034DC  2EE8               	decfsz	wreg,f,c
  3731   0034DE  D7FE               	bra	u12837
  3732   0034E0  2E15               	decfsz	??_lcd_4bit_intialize^0,f,c
  3733   0034E2  D7FC               	bra	u12837
  3734   0034E4  0000               	nop	
  3735   0034E6  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3736   0034EA  0E38               	movlw	56
  3737   0034EC  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3738   0034EE  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3739   0034F2                     
  3740                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 38:         _delay((unsigned long)((150)*(4000000UL/40
      +                          00000.0)));
  3741   0034F2  0E32               	movlw	50
  3742   0034F4                     u12847:
  3743   0034F4  2EE8               	decfsz	wreg,f,c
  3744   0034F6  D7FE               	bra	u12847
  3745   0034F8  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3746   0034FC  0E38               	movlw	56
  3747   0034FE  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3748   003500  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3749   003504  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3750   003508  0E01               	movlw	1
  3751   00350A  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3752   00350C  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3753   003510  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3754   003514  0E02               	movlw	2
  3755   003516  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3756   003518  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3757   00351C  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3758   003520  0E06               	movlw	6
  3759   003522  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3760   003524  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3761   003528  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3762   00352C  0E0C               	movlw	12
  3763   00352E  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3764   003530  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3765   003534  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3766   003538  0E28               	movlw	40
  3767   00353A  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3768   00353C  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3769   003540  C014  F011         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  3770   003544  0E80               	movlw	128
  3771   003546  6E12               	movwf	lcd_4bit_send_command@command^0,c
  3772   003548  ECD8  F022         	call	_lcd_4bit_send_command	;wreg free
  3773   00354C                     l55:
  3774   00354C  0012               	return		;funcret
  3775   00354E                     __end_of_lcd_4bit_intialize:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _lcd_4bit_send_command *****************
  3779 ;; Defined at:
  3780 ;;		line 59 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  lcd             1   16[COMRAM] PTR const struct .
  3783 ;;		 -> lcd_4bit(6), 
  3784 ;;  command         1   17[COMRAM] unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  ret             1   18[COMRAM] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      unsigned char 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;Total ram usage:        3 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 5
  3803 ;; This function calls:
  3804 ;;		_GPIO_pIN_WRITE_LOGIC
  3805 ;;		_lcd_4bit_send_enable_signal
  3806 ;;		_lcd_send_4bits
  3807 ;; This function is called by:
  3808 ;;		_lcd_4bit_intialize
  3809 ;;		_lcd_4bit_set_cursor
  3810 ;;		_main
  3811 ;;		_lcd_4bit_send_custom_char
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text15
  3816   0045B0                     __ptext15:
  3817                           	callstack 0
  3818   0045B0                     _lcd_4bit_send_command:
  3819                           	callstack 23
  3820   0045B0                     
  3821                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 61:     if(((void*)0) == lcd){
  3822   0045B0  5011               	movf	lcd_4bit_send_command@lcd^0,w,c
  3823   0045B2  A4D8               	btfss	status,2,c
  3824   0045B4  EFDE  F022         	goto	u10951
  3825   0045B8  EFE0  F022         	goto	u10950
  3826   0045BC                     u10951:
  3827   0045BC  EFE4  F022         	goto	l10070
  3828   0045C0                     u10950:
  3829   0045C0                     
  3830                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 62:         ret = 0;
  3831   0045C0  0E00               	movlw	0
  3832   0045C2  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  3833                           
  3834                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 63:     }
  3835   0045C4  EF05  F023         	goto	l10072
  3836   0045C8                     l10070:
  3837                           
  3838                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 67:         ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_rs),
      +                           GPIO_LOW);
  3839   0045C8  C011  F004         	movff	lcd_4bit_send_command@lcd,GPIO_pIN_WRITE_LOGIC@config_pin
  3840   0045CC  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3841   0045CE  0E00               	movlw	0
  3842   0045D0  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3843   0045D2  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3844   0045D6  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  3845                           
  3846                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 69:         ret = lcd_send_4bits(lcd, command >> 4);
  3847   0045D8  C011  F00D         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3848   0045DC  3812               	swapf	lcd_4bit_send_command@command^0,w,c
  3849   0045DE  0B0F               	andlw	15
  3850   0045E0  6E0E               	movwf	lcd_send_4bits@_data_command^0,c
  3851   0045E2  EC00  F021         	call	_lcd_send_4bits	;wreg free
  3852   0045E6  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  3853                           
  3854                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 71:         ret = lcd_4bit_send_enable_signal(lcd);
  3855   0045E8  C011  F00D         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3856   0045EC  ECD8  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  3857   0045F0  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  3858                           
  3859                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 73:         ret = lcd_send_4bits(lcd, command);
  3860   0045F2  C011  F00D         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3861   0045F6  C012  F00E         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  3862   0045FA  EC00  F021         	call	_lcd_send_4bits	;wreg free
  3863   0045FE  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  3864                           
  3865                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 75:         ret = lcd_4bit_send_enable_signal(lcd);
  3866   004600  C011  F00D         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3867   004604  ECD8  F024         	call	_lcd_4bit_send_enable_signal	;wreg free
  3868   004608  6E13               	movwf	lcd_4bit_send_command@ret^0,c
  3869   00460A                     l10072:
  3870                           
  3871                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 77:     return ret;
  3872   00460A  5013               	movf	lcd_4bit_send_command@ret^0,w,c
  3873   00460C  0012               	return		;funcret
  3874   00460E                     __end_of_lcd_4bit_send_command:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _lcd_send_4bits *****************
  3878 ;; Defined at:
  3879 ;;		line 464 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  lcd             1   12[COMRAM] PTR const struct .
  3882 ;;		 -> lcd_4bit(6), 
  3883 ;;  _data_comman    1   13[COMRAM] unsigned char 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  ret             1   15[COMRAM] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      unsigned char 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;Total ram usage:        4 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 4
  3902 ;; This function calls:
  3903 ;;		_GPIO_pIN_WRITE_LOGIC
  3904 ;; This function is called by:
  3905 ;;		_lcd_4bit_send_command
  3906 ;;		_lcd_4bit_send_char_data
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text16
  3911   004200                     __ptext16:
  3912                           	callstack 0
  3913   004200                     _lcd_send_4bits:
  3914                           	callstack 23
  3915   004200  C00D  F00F         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  3916   004204  0E02               	movlw	2
  3917   004206  260F               	addwf	??_lcd_send_4bits^0,f,c
  3918   004208  C00F  F004         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  3919   00420C  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3920   00420E  500E               	movf	lcd_send_4bits@_data_command^0,w,c
  3921   004210  0B01               	andlw	1
  3922   004212  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3923   004214  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3924   004218  C00D  F00F         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  3925   00421C  0E03               	movlw	3
  3926   00421E  260F               	addwf	??_lcd_send_4bits^0,f,c
  3927   004220  C00F  F004         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  3928   004224  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3929   004226  90D8               	bcf	status,0,c
  3930   004228  300E               	rrcf	lcd_send_4bits@_data_command^0,w,c
  3931   00422A  0B01               	andlw	1
  3932   00422C  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3933   00422E  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3934   004232  C00D  F00F         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  3935   004236  0E04               	movlw	4
  3936   004238  260F               	addwf	??_lcd_send_4bits^0,f,c
  3937   00423A  C00F  F004         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  3938   00423E  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3939   004240  400E               	rrncf	lcd_send_4bits@_data_command^0,w,c
  3940   004242  42E8               	rrncf	wreg,f,c
  3941   004244  0B3F               	andlw	63
  3942   004246  0B01               	andlw	1
  3943   004248  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3944   00424A  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3945   00424E                     
  3946                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 469:     ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_data[3]
      +                          ), (_data_command >> 3) & (uint8)0x01);
  3947   00424E  C00D  F00F         	movff	lcd_send_4bits@lcd,??_lcd_send_4bits
  3948   004252  0E05               	movlw	5
  3949   004254  260F               	addwf	??_lcd_send_4bits^0,f,c
  3950   004256  C00F  F004         	movff	??_lcd_send_4bits,GPIO_pIN_WRITE_LOGIC@config_pin
  3951   00425A  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  3952   00425C  380E               	swapf	lcd_send_4bits@_data_command^0,w,c
  3953   00425E  46E8               	rlncf	wreg,f,c
  3954   004260  0B1F               	andlw	31
  3955   004262  0B01               	andlw	1
  3956   004264  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  3957   004266  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  3958   00426A  6E10               	movwf	lcd_send_4bits@ret^0,c
  3959                           
  3960                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 470:     return ret;
  3961   00426C  5010               	movf	lcd_send_4bits@ret^0,w,c
  3962   00426E  0012               	return		;funcret
  3963   004270                     __end_of_lcd_send_4bits:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3967 ;; Defined at:
  3968 ;;		line 480 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  lcd             1   12[COMRAM] PTR const struct .
  3971 ;;		 -> lcd_4bit(6), 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  ret             1   14[COMRAM] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      unsigned char 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3983 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;Total ram usage:        3 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 4
  3990 ;; This function calls:
  3991 ;;		_GPIO_pIN_WRITE_LOGIC
  3992 ;; This function is called by:
  3993 ;;		_lcd_4bit_send_command
  3994 ;;		_lcd_4bit_send_char_data
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text17
  3999   0049B0                     __ptext17:
  4000                           	callstack 0
  4001   0049B0                     _lcd_4bit_send_enable_signal:
  4002                           	callstack 23
  4003   0049B0  C00D  F00E         	movff	lcd_4bit_send_enable_signal@lcd,??_lcd_4bit_send_enable_signal
  4004   0049B4  0E01               	movlw	1
  4005   0049B6  260E               	addwf	??_lcd_4bit_send_enable_signal^0,f,c
  4006   0049B8  C00E  F004         	movff	??_lcd_4bit_send_enable_signal,GPIO_pIN_WRITE_LOGIC@config_pin
  4007   0049BC  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4008   0049BE  0E01               	movlw	1
  4009   0049C0  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4010   0049C2  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4011   0049C6                     
  4012                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 483:     _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  4013   0049C6  D000               	nop2		;2 cycle nop
  4014   0049C8  D000               	nop2		;2 cycle nop
  4015   0049CA  0000               	nop	
  4016   0049CC                     
  4017                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 484:     ret = GPIO_pIN_WRITE_LOGIC(&(lcd->lcd_en), GP
      +                          IO_LOW);
  4018   0049CC  C00D  F00E         	movff	lcd_4bit_send_enable_signal@lcd,??_lcd_4bit_send_enable_signal
  4019   0049D0  0E01               	movlw	1
  4020   0049D2  260E               	addwf	??_lcd_4bit_send_enable_signal^0,f,c
  4021   0049D4  C00E  F004         	movff	??_lcd_4bit_send_enable_signal,GPIO_pIN_WRITE_LOGIC@config_pin
  4022   0049D8  6A05               	clrf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,c
  4023   0049DA  0E00               	movlw	0
  4024   0049DC  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  4025   0049DE  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  4026   0049E2  6E0F               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  4027                           
  4028                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 485:     return ret;
  4029   0049E4  500F               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  4030   0049E6  0012               	return		;funcret
  4031   0049E8                     __end_of_lcd_4bit_send_enable_signal:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _ccp1_init *****************
  4035 ;; Defined at:
  4036 ;;		line 12 in file "MKAL_layer/CCP1/hal_ccp1.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  ccp1_           2   28[COMRAM] PTR const struct .
  4039 ;;		 -> ccp1_(10), 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  ret             1    0        unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      unsigned char 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;Total ram usage:        6 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 5
  4058 ;; This function calls:
  4059 ;;		_GPIO_pIN_INTIALIZE
  4060 ;;		___lldiv
  4061 ;;		___lmul
  4062 ;; This function is called by:
  4063 ;;		_intitialized_functions
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text18
  4068   002C04                     __ptext18:
  4069                           	callstack 0
  4070   002C04                     _ccp1_init:
  4071                           	callstack 24
  4072   002C04                     
  4073                           ;MKAL_layer/CCP1/hal_ccp1.c: 14:     if (((void*)0) == ccp1_){
  4074   002C04  501D               	movf	ccp1_init@ccp1_^0,w,c
  4075   002C06  101E               	iorwf	(ccp1_init@ccp1_+1)^0,w,c
  4076   002C08  A4D8               	btfss	status,2,c
  4077   002C0A  EF09  F016         	goto	u11491
  4078   002C0E  EF0B  F016         	goto	u11490
  4079   002C12                     u11491:
  4080   002C12  EF0D  F016         	goto	l10638
  4081   002C16                     u11490:
  4082   002C16                     
  4083                           ;MKAL_layer/CCP1/hal_ccp1.c: 16:     }
  4084   002C16  EFB0  F016         	goto	l508
  4085   002C1A                     l10638:
  4086                           
  4087                           ;MKAL_layer/CCP1/hal_ccp1.c: 18:     {;MKAL_layer/CCP1/hal_ccp1.c: 19:         (CCP1CONb
      +                          its.CCP1M =0);
  4088   002C1A  0EF0               	movlw	-16
  4089   002C1C  16BD               	andwf	189,f,c	;volatile
  4090   002C1E                     
  4091                           ;MKAL_layer/CCP1/hal_ccp1.c: 20:         if(ccp1_->ccp1_mode == ccp1_capture_mode_select
      +                          )
  4092   002C1E  EE20 F002          	lfsr	2,2
  4093   002C22  501D               	movf	ccp1_init@ccp1_^0,w,c
  4094   002C24  26D9               	addwf	fsr2l,f,c
  4095   002C26  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4096   002C28  22DA               	addwfc	fsr2h,f,c
  4097   002C2A  50DF               	movf	indf2,w,c
  4098   002C2C  A4D8               	btfss	status,2,c
  4099   002C2E  EF1B  F016         	goto	u11501
  4100   002C32  EF1D  F016         	goto	u11500
  4101   002C36                     u11501:
  4102   002C36  EF1F  F016         	goto	l10644
  4103   002C3A                     u11500:
  4104   002C3A  EF9C  F016         	goto	l10656
  4105   002C3E                     l10644:
  4106   002C3E  EE20 F002          	lfsr	2,2
  4107   002C42  501D               	movf	ccp1_init@ccp1_^0,w,c
  4108   002C44  26D9               	addwf	fsr2l,f,c
  4109   002C46  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4110   002C48  22DA               	addwfc	fsr2h,f,c
  4111   002C4A  04DE               	decf	postinc2,w,c
  4112   002C4C  A4D8               	btfss	status,2,c
  4113   002C4E  EF2B  F016         	goto	u11511
  4114   002C52  EF2D  F016         	goto	u11510
  4115   002C56                     u11511:
  4116   002C56  EF2F  F016         	goto	l10648
  4117   002C5A                     u11510:
  4118   002C5A  EF9C  F016         	goto	l10656
  4119   002C5E                     l10648:
  4120   002C5E  EE20 F002          	lfsr	2,2
  4121   002C62  501D               	movf	ccp1_init@ccp1_^0,w,c
  4122   002C64  26D9               	addwf	fsr2l,f,c
  4123   002C66  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4124   002C68  22DA               	addwfc	fsr2h,f,c
  4125   002C6A  0E02               	movlw	2
  4126   002C6C  18DE               	xorwf	postinc2,w,c
  4127   002C6E  A4D8               	btfss	status,2,c
  4128   002C70  EF3C  F016         	goto	u11521
  4129   002C74  EF3E  F016         	goto	u11520
  4130   002C78                     u11521:
  4131   002C78  EF9C  F016         	goto	l10656
  4132   002C7C                     u11520:
  4133   002C7C                     
  4134                           ;MKAL_layer/CCP1/hal_ccp1.c: 57:         {;MKAL_layer/CCP1/hal_ccp1.c: 58:             i
      +                          f(ccp1_->ccp1_mode_variant == 0x0E){
  4135   002C7C  EE20 F003          	lfsr	2,3
  4136   002C80  501D               	movf	ccp1_init@ccp1_^0,w,c
  4137   002C82  26D9               	addwf	fsr2l,f,c
  4138   002C84  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4139   002C86  22DA               	addwfc	fsr2h,f,c
  4140   002C88  0E0E               	movlw	14
  4141   002C8A  18DE               	xorwf	postinc2,w,c
  4142   002C8C  A4D8               	btfss	status,2,c
  4143   002C8E  EF4B  F016         	goto	u11531
  4144   002C92  EF4D  F016         	goto	u11530
  4145   002C96                     u11531:
  4146   002C96  EF51  F016         	goto	l10654
  4147   002C9A                     u11530:
  4148   002C9A                     
  4149                           ;MKAL_layer/CCP1/hal_ccp1.c: 59:                 (CCP1CONbits.CCP1M =0x0E);
  4150   002C9A  50BD               	movf	189,w,c	;volatile
  4151   002C9C  0BF0               	andlw	-16
  4152   002C9E  090E               	iorlw	14
  4153   002CA0  6EBD               	movwf	189,c	;volatile
  4154   002CA2                     l10654:
  4155                           
  4156                           ;MKAL_layer/CCP1/hal_ccp1.c: 63:                 PR2 = (uint8)((4000000UL/(4*ccp1_->time
      +                          r2_postscaler_cfg *ccp1_->timer2_prescaler_cfg * ccp1_->pwm_frequence))-1);
  4157   002CA2  0E00               	movlw	0
  4158   002CA4  6E10               	movwf	___lldiv@dividend^0,c
  4159   002CA6  0E09               	movlw	9
  4160   002CA8  6E11               	movwf	(___lldiv@dividend+1)^0,c
  4161   002CAA  0E3D               	movlw	61
  4162   002CAC  6E12               	movwf	(___lldiv@dividend+2)^0,c
  4163   002CAE  0E00               	movlw	0
  4164   002CB0  6E13               	movwf	(___lldiv@dividend+3)^0,c
  4165   002CB2  EE20 F009          	lfsr	2,9
  4166   002CB6  501D               	movf	ccp1_init@ccp1_^0,w,c
  4167   002CB8  26D9               	addwf	fsr2l,f,c
  4168   002CBA  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4169   002CBC  22DA               	addwfc	fsr2h,f,c
  4170   002CBE  38DF               	swapf	223,w,c
  4171   002CC0  0B03               	andlw	3
  4172   002CC2  6E1F               	movwf	??_ccp1_init^0,c
  4173   002CC4  EE20 F009          	lfsr	2,9
  4174   002CC8  501D               	movf	ccp1_init@ccp1_^0,w,c
  4175   002CCA  26D9               	addwf	fsr2l,f,c
  4176   002CCC  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4177   002CCE  22DA               	addwfc	fsr2h,f,c
  4178   002CD0  50DF               	movf	223,w,c
  4179   002CD2  0B0F               	andlw	15
  4180   002CD4  6E20               	movwf	(??_ccp1_init+1)^0,c
  4181   002CD6  5020               	movf	(??_ccp1_init+1)^0,w,c
  4182   002CD8  021F               	mulwf	??_ccp1_init^0,c
  4183   002CDA  CFF3 F021          	movff	prodl,??_ccp1_init+2
  4184   002CDE  CFF4 F022          	movff	prodh,??_ccp1_init+3
  4185   002CE2  90D8               	bcf	status,0,c
  4186   002CE4  3621               	rlcf	(??_ccp1_init+2)^0,f,c
  4187   002CE6  3622               	rlcf	(??_ccp1_init+3)^0,f,c
  4188   002CE8  90D8               	bcf	status,0,c
  4189   002CEA  3621               	rlcf	(??_ccp1_init+2)^0,f,c
  4190   002CEC  3622               	rlcf	(??_ccp1_init+3)^0,f,c
  4191   002CEE  C021  F004         	movff	??_ccp1_init+2,___lmul@multiplier
  4192   002CF2  C022  F005         	movff	??_ccp1_init+3,___lmul@multiplier+1
  4193   002CF6  0E00               	movlw	0
  4194   002CF8  BE05               	btfsc	(___lmul@multiplier+1)^0,7,c
  4195   002CFA  0EFF               	movlw	-1
  4196   002CFC  6E06               	movwf	(___lmul@multiplier+2)^0,c
  4197   002CFE  6E07               	movwf	(___lmul@multiplier+3)^0,c
  4198   002D00  EE20 F005          	lfsr	2,5
  4199   002D04  501D               	movf	ccp1_init@ccp1_^0,w,c
  4200   002D06  26D9               	addwf	fsr2l,f,c
  4201   002D08  501E               	movf	(ccp1_init@ccp1_+1)^0,w,c
  4202   002D0A  22DA               	addwfc	fsr2h,f,c
  4203   002D0C  CFDE F008          	movff	postinc2,___lmul@multiplicand
  4204   002D10  CFDE F009          	movff	postinc2,___lmul@multiplicand+1
  4205   002D14  CFDE F00A          	movff	postinc2,___lmul@multiplicand+2
  4206   002D18  CFDE F00B          	movff	postinc2,___lmul@multiplicand+3
  4207   002D1C  ECDA  F021         	call	___lmul	;wreg free
  4208   002D20  C004  F014         	movff	?___lmul,___lldiv@divisor
  4209   002D24  C005  F015         	movff	?___lmul+1,___lldiv@divisor+1
  4210   002D28  C006  F016         	movff	?___lmul+2,___lldiv@divisor+2
  4211   002D2C  C007  F017         	movff	?___lmul+3,___lldiv@divisor+3
  4212   002D30  EC90  F01D         	call	___lldiv	;wreg free
  4213   002D34  0410               	decf	?___lldiv^0,w,c
  4214   002D36  6ECB               	movwf	203,c	;volatile
  4215   002D38                     l10656:
  4216   002D38  0E04               	movlw	4
  4217   002D3A  241D               	addwf	ccp1_init@ccp1_^0,w,c
  4218   002D3C  6E0D               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  4219   002D3E  0E00               	movlw	0
  4220   002D40  201E               	addwfc	(ccp1_init@ccp1_+1)^0,w,c
  4221   002D42  6E0E               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  4222   002D44  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  4223   002D48                     
  4224                           ;MKAL_layer/CCP1/hal_ccp1.c: 74:         (PIE1bits.CCP1IE = 1);
  4225   002D48  849D               	bsf	157,2,c	;volatile
  4226   002D4A                     
  4227                           ;MKAL_layer/CCP1/hal_ccp1.c: 75:         (PIR1bits.CCP1IF = 0);
  4228   002D4A  949E               	bcf	158,2,c	;volatile
  4229   002D4C                     
  4230                           ;MKAL_layer/CCP1/hal_ccp1.c: 76:         CCP1_Interrupthandler = ccp1_->CCP1_handler;
  4231   002D4C  C01D  FFD9         	movff	ccp1_init@ccp1_,fsr2l
  4232   002D50  C01E  FFDA         	movff	ccp1_init@ccp1_+1,fsr2h
  4233   002D54  CFDE F0B8          	movff	postinc2,_CCP1_Interrupthandler
  4234   002D58  CFDD F0B9          	movff	postdec2,_CCP1_Interrupthandler+1
  4235   002D5C                     
  4236                           ;MKAL_layer/CCP1/hal_ccp1.c: 90:         (INTCONbits.GIE =1);
  4237   002D5C  8EF2               	bsf	242,7,c	;volatile
  4238   002D5E                     
  4239                           ;MKAL_layer/CCP1/hal_ccp1.c: 91:         (INTCONbits.PEIE =1);
  4240   002D5E  8CF2               	bsf	242,6,c	;volatile
  4241   002D60                     l508:
  4242   002D60  0012               	return		;funcret
  4243   002D62                     __end_of_ccp1_init:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function ___lmul *****************
  4247 ;; Defined at:
  4248 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  multiplier      4    3[COMRAM] unsigned long 
  4251 ;;  multiplicand    4    7[COMRAM] unsigned long 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  product         4   11[COMRAM] unsigned long 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  4    3[COMRAM] unsigned long 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4263 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;Total ram usage:       12 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 3
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_ccp1_init
  4274 ;;		_main
  4275 ;;		_ccp2_init
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text19
  4280   0043B4                     __ptext19:
  4281                           	callstack 0
  4282   0043B4                     ___lmul:
  4283                           	callstack 25
  4284   0043B4  0E00               	movlw	0
  4285   0043B6  6E0C               	movwf	___lmul@product^0,c
  4286   0043B8  0E00               	movlw	0
  4287   0043BA  6E0D               	movwf	(___lmul@product+1)^0,c
  4288   0043BC  0E00               	movlw	0
  4289   0043BE  6E0E               	movwf	(___lmul@product+2)^0,c
  4290   0043C0  0E00               	movlw	0
  4291   0043C2  6E0F               	movwf	(___lmul@product+3)^0,c
  4292   0043C4                     l10326:
  4293   0043C4  A004               	btfss	___lmul@multiplier^0,0,c
  4294   0043C6  EFE7  F021         	goto	u11181
  4295   0043CA  EFE9  F021         	goto	u11180
  4296   0043CE                     u11181:
  4297   0043CE  EFF1  F021         	goto	l10330
  4298   0043D2                     u11180:
  4299   0043D2  5008               	movf	___lmul@multiplicand^0,w,c
  4300   0043D4  260C               	addwf	___lmul@product^0,f,c
  4301   0043D6  5009               	movf	(___lmul@multiplicand+1)^0,w,c
  4302   0043D8  220D               	addwfc	(___lmul@product+1)^0,f,c
  4303   0043DA  500A               	movf	(___lmul@multiplicand+2)^0,w,c
  4304   0043DC  220E               	addwfc	(___lmul@product+2)^0,f,c
  4305   0043DE  500B               	movf	(___lmul@multiplicand+3)^0,w,c
  4306   0043E0  220F               	addwfc	(___lmul@product+3)^0,f,c
  4307   0043E2                     l10330:
  4308   0043E2  90D8               	bcf	status,0,c
  4309   0043E4  3608               	rlcf	___lmul@multiplicand^0,f,c
  4310   0043E6  3609               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4311   0043E8  360A               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4312   0043EA  360B               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4313   0043EC  90D8               	bcf	status,0,c
  4314   0043EE  3207               	rrcf	(___lmul@multiplier+3)^0,f,c
  4315   0043F0  3206               	rrcf	(___lmul@multiplier+2)^0,f,c
  4316   0043F2  3205               	rrcf	(___lmul@multiplier+1)^0,f,c
  4317   0043F4  3204               	rrcf	___lmul@multiplier^0,f,c
  4318   0043F6  5004               	movf	___lmul@multiplier^0,w,c
  4319   0043F8  1005               	iorwf	(___lmul@multiplier+1)^0,w,c
  4320   0043FA  1006               	iorwf	(___lmul@multiplier+2)^0,w,c
  4321   0043FC  1007               	iorwf	(___lmul@multiplier+3)^0,w,c
  4322   0043FE  A4D8               	btfss	status,2,c
  4323   004400  EF04  F022         	goto	u11191
  4324   004404  EF06  F022         	goto	u11190
  4325   004408                     u11191:
  4326   004408  EFE2  F021         	goto	l10326
  4327   00440C                     u11190:
  4328   00440C  C00C  F004         	movff	___lmul@product,?___lmul
  4329   004410  C00D  F005         	movff	___lmul@product+1,?___lmul+1
  4330   004414  C00E  F006         	movff	___lmul@product+2,?___lmul+2
  4331   004418  C00F  F007         	movff	___lmul@product+3,?___lmul+3
  4332   00441C  0012               	return		;funcret
  4333   00441E                     __end_of___lmul:
  4334                           	callstack 0
  4335                           
  4336 ;; *************** function ___lldiv *****************
  4337 ;; Defined at:
  4338 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  dividend        4   15[COMRAM] unsigned long 
  4341 ;;  divisor         4   19[COMRAM] unsigned long 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  quotient        4   23[COMRAM] unsigned long 
  4344 ;;  counter         1   27[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  4   15[COMRAM] unsigned long 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:       13 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 3
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_ccp1_init
  4365 ;;		_main
  4366 ;;		_ccp2_init
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text20
  4371   003B20                     __ptext20:
  4372                           	callstack 0
  4373   003B20                     ___lldiv:
  4374                           	callstack 25
  4375   003B20  0E00               	movlw	0
  4376   003B22  6E18               	movwf	___lldiv@quotient^0,c
  4377   003B24  0E00               	movlw	0
  4378   003B26  6E19               	movwf	(___lldiv@quotient+1)^0,c
  4379   003B28  0E00               	movlw	0
  4380   003B2A  6E1A               	movwf	(___lldiv@quotient+2)^0,c
  4381   003B2C  0E00               	movlw	0
  4382   003B2E  6E1B               	movwf	(___lldiv@quotient+3)^0,c
  4383   003B30  5014               	movf	___lldiv@divisor^0,w,c
  4384   003B32  1015               	iorwf	(___lldiv@divisor+1)^0,w,c
  4385   003B34  1016               	iorwf	(___lldiv@divisor+2)^0,w,c
  4386   003B36  1017               	iorwf	(___lldiv@divisor+3)^0,w,c
  4387   003B38  B4D8               	btfsc	status,2,c
  4388   003B3A  EFA1  F01D         	goto	u11201
  4389   003B3E  EFA3  F01D         	goto	u11200
  4390   003B42                     u11201:
  4391   003B42  EFD9  F01D         	goto	l1847
  4392   003B46                     u11200:
  4393   003B46  0E01               	movlw	1
  4394   003B48  6E1C               	movwf	___lldiv@counter^0,c
  4395   003B4A  EFAD  F01D         	goto	l10342
  4396   003B4E                     l10340:
  4397   003B4E  90D8               	bcf	status,0,c
  4398   003B50  3614               	rlcf	___lldiv@divisor^0,f,c
  4399   003B52  3615               	rlcf	(___lldiv@divisor+1)^0,f,c
  4400   003B54  3616               	rlcf	(___lldiv@divisor+2)^0,f,c
  4401   003B56  3617               	rlcf	(___lldiv@divisor+3)^0,f,c
  4402   003B58  2A1C               	incf	___lldiv@counter^0,f,c
  4403   003B5A                     l10342:
  4404   003B5A  AE17               	btfss	(___lldiv@divisor+3)^0,7,c
  4405   003B5C  EFB2  F01D         	goto	u11211
  4406   003B60  EFB4  F01D         	goto	u11210
  4407   003B64                     u11211:
  4408   003B64  EFA7  F01D         	goto	l10340
  4409   003B68                     u11210:
  4410   003B68                     l10344:
  4411   003B68  90D8               	bcf	status,0,c
  4412   003B6A  3618               	rlcf	___lldiv@quotient^0,f,c
  4413   003B6C  3619               	rlcf	(___lldiv@quotient+1)^0,f,c
  4414   003B6E  361A               	rlcf	(___lldiv@quotient+2)^0,f,c
  4415   003B70  361B               	rlcf	(___lldiv@quotient+3)^0,f,c
  4416   003B72  5014               	movf	___lldiv@divisor^0,w,c
  4417   003B74  5C10               	subwf	___lldiv@dividend^0,w,c
  4418   003B76  5015               	movf	(___lldiv@divisor+1)^0,w,c
  4419   003B78  5811               	subwfb	(___lldiv@dividend+1)^0,w,c
  4420   003B7A  5016               	movf	(___lldiv@divisor+2)^0,w,c
  4421   003B7C  5812               	subwfb	(___lldiv@dividend+2)^0,w,c
  4422   003B7E  5017               	movf	(___lldiv@divisor+3)^0,w,c
  4423   003B80  5813               	subwfb	(___lldiv@dividend+3)^0,w,c
  4424   003B82  A0D8               	btfss	status,0,c
  4425   003B84  EFC6  F01D         	goto	u11221
  4426   003B88  EFC8  F01D         	goto	u11220
  4427   003B8C                     u11221:
  4428   003B8C  EFD1  F01D         	goto	l10352
  4429   003B90                     u11220:
  4430   003B90  5014               	movf	___lldiv@divisor^0,w,c
  4431   003B92  5E10               	subwf	___lldiv@dividend^0,f,c
  4432   003B94  5015               	movf	(___lldiv@divisor+1)^0,w,c
  4433   003B96  5A11               	subwfb	(___lldiv@dividend+1)^0,f,c
  4434   003B98  5016               	movf	(___lldiv@divisor+2)^0,w,c
  4435   003B9A  5A12               	subwfb	(___lldiv@dividend+2)^0,f,c
  4436   003B9C  5017               	movf	(___lldiv@divisor+3)^0,w,c
  4437   003B9E  5A13               	subwfb	(___lldiv@dividend+3)^0,f,c
  4438   003BA0  8018               	bsf	___lldiv@quotient^0,0,c
  4439   003BA2                     l10352:
  4440   003BA2  90D8               	bcf	status,0,c
  4441   003BA4  3217               	rrcf	(___lldiv@divisor+3)^0,f,c
  4442   003BA6  3216               	rrcf	(___lldiv@divisor+2)^0,f,c
  4443   003BA8  3215               	rrcf	(___lldiv@divisor+1)^0,f,c
  4444   003BAA  3214               	rrcf	___lldiv@divisor^0,f,c
  4445   003BAC  2E1C               	decfsz	___lldiv@counter^0,f,c
  4446   003BAE  EFB4  F01D         	goto	l10344
  4447   003BB2                     l1847:
  4448   003BB2  C018  F010         	movff	___lldiv@quotient,?___lldiv
  4449   003BB6  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
  4450   003BBA  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
  4451   003BBE  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
  4452   003BC2  0012               	return		;funcret
  4453   003BC4                     __end_of___lldiv:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _Timer3_init *****************
  4457 ;; Defined at:
  4458 ;;		line 14 in file "MKAL_layer/timer3/hal_timer3.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  Timer3          2    5[COMRAM] PTR const struct .
  4461 ;;		 -> Timer3_1(5), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  ret             1    0        unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      unsigned char 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;Total ram usage:        4 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 4
  4480 ;; This function calls:
  4481 ;;		_timer3_mode_cfg
  4482 ;;		_timer3_reg_bit_cfg
  4483 ;; This function is called by:
  4484 ;;		_intitialized_functions
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text21
  4489   0039C8                     __ptext21:
  4490                           	callstack 0
  4491   0039C8                     _Timer3_init:
  4492                           	callstack 25
  4493   0039C8                     
  4494                           ;MKAL_layer/timer3/hal_timer3.c: 16:     if (((void*)0) == Timer3){
  4495   0039C8  5006               	movf	Timer3_init@Timer3^0,w,c
  4496   0039CA  1007               	iorwf	(Timer3_init@Timer3+1)^0,w,c
  4497   0039CC  A4D8               	btfss	status,2,c
  4498   0039CE  EFEB  F01C         	goto	u11651
  4499   0039D2  EFED  F01C         	goto	u11650
  4500   0039D6                     u11651:
  4501   0039D6  EFEF  F01C         	goto	l1423
  4502   0039DA                     u11650:
  4503   0039DA                     
  4504                           ;MKAL_layer/timer3/hal_timer3.c: 18:     }
  4505   0039DA  EF39  F01D         	goto	l1425
  4506   0039DE                     l1423:
  4507                           
  4508                           ;MKAL_layer/timer3/hal_timer3.c: 20:     {;MKAL_layer/timer3/hal_timer3.c: 21:         (
      +                          T3CONbits.TMR3ON =0);
  4509   0039DE  90B1               	bcf	177,0,c	;volatile
  4510   0039E0                     
  4511                           ;MKAL_layer/timer3/hal_timer3.c: 22:         (T3CONbits.T3CKPS = Timer3->timer3_prescale
      +                          r_cfg);;
  4512   0039E0  EE20 F004          	lfsr	2,4
  4513   0039E4  5006               	movf	Timer3_init@Timer3^0,w,c
  4514   0039E6  26D9               	addwf	fsr2l,f,c
  4515   0039E8  5007               	movf	(Timer3_init@Timer3+1)^0,w,c
  4516   0039EA  22DA               	addwfc	fsr2h,f,c
  4517   0039EC  50DF               	movf	223,w,c
  4518   0039EE  0B03               	andlw	3
  4519   0039F0  6E08               	movwf	??_Timer3_init^0,c
  4520   0039F2  3A08               	swapf	??_Timer3_init^0,f,c
  4521   0039F4  50B1               	movf	177,w,c	;volatile
  4522   0039F6  1808               	xorwf	??_Timer3_init^0,w,c
  4523   0039F8  0BCF               	andlw	-49
  4524   0039FA  1808               	xorwf	??_Timer3_init^0,w,c
  4525   0039FC  6EB1               	movwf	177,c	;volatile
  4526   0039FE                     
  4527                           ;MKAL_layer/timer3/hal_timer3.c: 23:         timer3_mode_cfg(Timer3);
  4528   0039FE  C006  F004         	movff	Timer3_init@Timer3,timer3_mode_cfg@Timer3
  4529   003A02  C007  F005         	movff	Timer3_init@Timer3+1,timer3_mode_cfg@Timer3+1
  4530   003A06  ECD3  F01F         	call	_timer3_mode_cfg	;wreg free
  4531   003A0A                     
  4532                           ;MKAL_layer/timer3/hal_timer3.c: 24:         timer3_reg_bit_cfg(Timer3);
  4533   003A0A  C006  F004         	movff	Timer3_init@Timer3,timer3_reg_bit_cfg@Timer3
  4534   003A0E  C007  F005         	movff	Timer3_init@Timer3+1,timer3_reg_bit_cfg@Timer3+1
  4535   003A12  EC5F  F024         	call	_timer3_reg_bit_cfg	;wreg free
  4536                           
  4537                           ;MKAL_layer/timer3/hal_timer3.c: 25:         TMR3H = ((Timer3->timer3_preload_value) >> 
      +                          8);
  4538   003A16  EE20 F002          	lfsr	2,2
  4539   003A1A  5006               	movf	Timer3_init@Timer3^0,w,c
  4540   003A1C  26D9               	addwf	fsr2l,f,c
  4541   003A1E  5007               	movf	(Timer3_init@Timer3+1)^0,w,c
  4542   003A20  22DA               	addwfc	fsr2h,f,c
  4543   003A22  CFDE F008          	movff	postinc2,??_Timer3_init
  4544   003A26  CFDD F009          	movff	postdec2,??_Timer3_init+1
  4545   003A2A  C009  F008         	movff	??_Timer3_init+1,??_Timer3_init
  4546   003A2E  6A09               	clrf	(??_Timer3_init+1)^0,c
  4547   003A30  5008               	movf	??_Timer3_init^0,w,c
  4548   003A32  6EB3               	movwf	179,c	;volatile
  4549                           
  4550                           ;MKAL_layer/timer3/hal_timer3.c: 26:         TMR3L = (uint8)(Timer3->timer3_preload_valu
      +                          e);
  4551   003A34  EE20 F002          	lfsr	2,2
  4552   003A38  5006               	movf	Timer3_init@Timer3^0,w,c
  4553   003A3A  26D9               	addwf	fsr2l,f,c
  4554   003A3C  5007               	movf	(Timer3_init@Timer3+1)^0,w,c
  4555   003A3E  22DA               	addwfc	fsr2h,f,c
  4556   003A40  50DF               	movf	indf2,w,c
  4557   003A42  6EB2               	movwf	178,c	;volatile
  4558                           
  4559                           ;MKAL_layer/timer3/hal_timer3.c: 27:         Timer3_preload = Timer3->timer3_preload_val
      +                          ue;
  4560   003A44  EE20 F002          	lfsr	2,2
  4561   003A48  5006               	movf	Timer3_init@Timer3^0,w,c
  4562   003A4A  26D9               	addwf	fsr2l,f,c
  4563   003A4C  5007               	movf	(Timer3_init@Timer3+1)^0,w,c
  4564   003A4E  22DA               	addwfc	fsr2h,f,c
  4565   003A50  CFDE F08C          	movff	postinc2,_Timer3_preload
  4566   003A54  CFDD F08D          	movff	postdec2,_Timer3_preload+1
  4567   003A58                     
  4568                           ;MKAL_layer/timer3/hal_timer3.c: 29:         (PIE2bits.TMR3IE = 1);
  4569   003A58  82A0               	bsf	160,1,c	;volatile
  4570   003A5A                     
  4571                           ;MKAL_layer/timer3/hal_timer3.c: 30:         (PIR2bits.TMR3IF = 0);
  4572   003A5A  92A1               	bcf	161,1,c	;volatile
  4573   003A5C                     
  4574                           ;MKAL_layer/timer3/hal_timer3.c: 31:         TIMER3_Interrupthandler = Timer3->Timer3_ha
      +                          ndler;
  4575   003A5C  C006  FFD9         	movff	Timer3_init@Timer3,fsr2l
  4576   003A60  C007  FFDA         	movff	Timer3_init@Timer3+1,fsr2h
  4577   003A64  CFDE F08E          	movff	postinc2,_TIMER3_Interrupthandler
  4578   003A68  CFDD F08F          	movff	postdec2,_TIMER3_Interrupthandler+1
  4579   003A6C                     
  4580                           ;MKAL_layer/timer3/hal_timer3.c: 45:         (INTCONbits.GIE =1);
  4581   003A6C  8EF2               	bsf	242,7,c	;volatile
  4582   003A6E                     
  4583                           ;MKAL_layer/timer3/hal_timer3.c: 46:         (INTCONbits.PEIE =1);
  4584   003A6E  8CF2               	bsf	242,6,c	;volatile
  4585   003A70                     
  4586                           ;MKAL_layer/timer3/hal_timer3.c: 50:         (T3CONbits.TMR3ON =1);
  4587   003A70  80B1               	bsf	177,0,c	;volatile
  4588   003A72                     l1425:
  4589   003A72  0012               	return		;funcret
  4590   003A74                     __end_of_Timer3_init:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _timer3_reg_bit_cfg *****************
  4594 ;; Defined at:
  4595 ;;		line 119 in file "MKAL_layer/timer3/hal_timer3.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  Timer3          2    3[COMRAM] PTR const struct .
  4598 ;;		 -> Timer3_1(5), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;Total ram usage:        2 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 3
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_Timer3_init
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text22
  4625   0048BE                     __ptext22:
  4626                           	callstack 0
  4627   0048BE                     _timer3_reg_bit_cfg:
  4628                           	callstack 25
  4629   0048BE                     
  4630                           ;MKAL_layer/timer3/hal_timer3.c: 120:     if(Timer3->timer3_wr__reg_cfg == 0){
  4631   0048BE  EE20 F004          	lfsr	2,4
  4632   0048C2  5004               	movf	timer3_reg_bit_cfg@Timer3^0,w,c
  4633   0048C4  26D9               	addwf	fsr2l,f,c
  4634   0048C6  5005               	movf	(timer3_reg_bit_cfg@Timer3+1)^0,w,c
  4635   0048C8  22DA               	addwfc	fsr2h,f,c
  4636   0048CA  B8DF               	btfsc	indf2,4,c
  4637   0048CC  EF6A  F024         	goto	u11161
  4638   0048D0  EF6C  F024         	goto	u11160
  4639   0048D4                     u11161:
  4640   0048D4  EF6F  F024         	goto	l10320
  4641   0048D8                     u11160:
  4642   0048D8                     
  4643                           ;MKAL_layer/timer3/hal_timer3.c: 121:         (T3CONbits.RD16 =0);
  4644   0048D8  9EB1               	bcf	177,7,c	;volatile
  4645                           
  4646                           ;MKAL_layer/timer3/hal_timer3.c: 122:     }
  4647   0048DA  EF7D  F024         	goto	l1460
  4648   0048DE                     l10320:
  4649   0048DE  EE20 F004          	lfsr	2,4
  4650   0048E2  5004               	movf	timer3_reg_bit_cfg@Timer3^0,w,c
  4651   0048E4  26D9               	addwf	fsr2l,f,c
  4652   0048E6  5005               	movf	(timer3_reg_bit_cfg@Timer3+1)^0,w,c
  4653   0048E8  22DA               	addwfc	fsr2h,f,c
  4654   0048EA  A8DF               	btfss	indf2,4,c
  4655   0048EC  EF7A  F024         	goto	u11171
  4656   0048F0  EF7C  F024         	goto	u11170
  4657   0048F4                     u11171:
  4658   0048F4  EF7D  F024         	goto	l1460
  4659   0048F8                     u11170:
  4660   0048F8                     
  4661                           ;MKAL_layer/timer3/hal_timer3.c: 124:         (T3CONbits.RD16 =1);
  4662   0048F8  8EB1               	bsf	177,7,c	;volatile
  4663   0048FA                     l1460:
  4664   0048FA  0012               	return		;funcret
  4665   0048FC                     __end_of_timer3_reg_bit_cfg:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _timer3_mode_cfg *****************
  4669 ;; Defined at:
  4670 ;;		line 102 in file "MKAL_layer/timer3/hal_timer3.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  Timer3          2    3[COMRAM] PTR const struct .
  4673 ;;		 -> Timer3_1(5), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 3
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_Timer3_init
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text23
  4700   003FA6                     __ptext23:
  4701                           	callstack 0
  4702   003FA6                     _timer3_mode_cfg:
  4703                           	callstack 25
  4704   003FA6                     
  4705                           ;MKAL_layer/timer3/hal_timer3.c: 103:     if(Timer3->timer3_mode == 0){
  4706   003FA6  EE20 F004          	lfsr	2,4
  4707   003FAA  5004               	movf	timer3_mode_cfg@Timer3^0,w,c
  4708   003FAC  26D9               	addwf	fsr2l,f,c
  4709   003FAE  5005               	movf	(timer3_mode_cfg@Timer3+1)^0,w,c
  4710   003FB0  22DA               	addwfc	fsr2h,f,c
  4711   003FB2  B4DF               	btfsc	indf2,2,c
  4712   003FB4  EFDE  F01F         	goto	u11121
  4713   003FB8  EFE0  F01F         	goto	u11120
  4714   003FBC                     u11121:
  4715   003FBC  EFE3  F01F         	goto	l10304
  4716   003FC0                     u11120:
  4717   003FC0                     
  4718                           ;MKAL_layer/timer3/hal_timer3.c: 104:         (T3CONbits.TMR3CS =0);
  4719   003FC0  92B1               	bcf	177,1,c	;volatile
  4720                           
  4721                           ;MKAL_layer/timer3/hal_timer3.c: 105:     }
  4722   003FC2  EF11  F020         	goto	l1453
  4723   003FC6                     l10304:
  4724   003FC6  EE20 F004          	lfsr	2,4
  4725   003FCA  5004               	movf	timer3_mode_cfg@Timer3^0,w,c
  4726   003FCC  26D9               	addwf	fsr2l,f,c
  4727   003FCE  5005               	movf	(timer3_mode_cfg@Timer3+1)^0,w,c
  4728   003FD0  22DA               	addwfc	fsr2h,f,c
  4729   003FD2  A4DF               	btfss	indf2,2,c
  4730   003FD4  EFEE  F01F         	goto	u11131
  4731   003FD8  EFF0  F01F         	goto	u11130
  4732   003FDC                     u11131:
  4733   003FDC  EF11  F020         	goto	l1453
  4734   003FE0                     u11130:
  4735   003FE0                     
  4736                           ;MKAL_layer/timer3/hal_timer3.c: 107:         (T3CONbits.TMR3CS =1);
  4737   003FE0  82B1               	bsf	177,1,c	;volatile
  4738   003FE2                     
  4739                           ;MKAL_layer/timer3/hal_timer3.c: 108:         if(Timer3->timer3_counter_mode == 1){
  4740   003FE2  EE20 F004          	lfsr	2,4
  4741   003FE6  5004               	movf	timer3_mode_cfg@Timer3^0,w,c
  4742   003FE8  26D9               	addwf	fsr2l,f,c
  4743   003FEA  5005               	movf	(timer3_mode_cfg@Timer3+1)^0,w,c
  4744   003FEC  22DA               	addwfc	fsr2h,f,c
  4745   003FEE  A6DF               	btfss	indf2,3,c
  4746   003FF0  EFFC  F01F         	goto	u11141
  4747   003FF4  EFFE  F01F         	goto	u11140
  4748   003FF8                     u11141:
  4749   003FF8  EF01  F020         	goto	l10312
  4750   003FFC                     u11140:
  4751   003FFC                     
  4752                           ;MKAL_layer/timer3/hal_timer3.c: 109:             (T3CONbits.nT3SYNC =1);
  4753   003FFC  84B1               	bsf	177,2,c	;volatile
  4754                           
  4755                           ;MKAL_layer/timer3/hal_timer3.c: 110:         }
  4756   003FFE  EF11  F020         	goto	l1453
  4757   004002                     l10312:
  4758   004002  EE20 F004          	lfsr	2,4
  4759   004006  5004               	movf	timer3_mode_cfg@Timer3^0,w,c
  4760   004008  26D9               	addwf	fsr2l,f,c
  4761   00400A  5005               	movf	(timer3_mode_cfg@Timer3+1)^0,w,c
  4762   00400C  22DA               	addwfc	fsr2h,f,c
  4763   00400E  B6DF               	btfsc	indf2,3,c
  4764   004010  EF0C  F020         	goto	u11151
  4765   004014  EF0E  F020         	goto	u11150
  4766   004018                     u11151:
  4767   004018  EF11  F020         	goto	l1452
  4768   00401C                     u11150:
  4769   00401C                     
  4770                           ;MKAL_layer/timer3/hal_timer3.c: 112:             (T3CONbits.nT3SYNC =0);
  4771   00401C  94B1               	bcf	177,2,c	;volatile
  4772                           
  4773                           ;MKAL_layer/timer3/hal_timer3.c: 113:         }
  4774   00401E  EF11  F020         	goto	l1453
  4775   004022                     l1452:
  4776   004022                     l1453:
  4777   004022  0012               	return		;funcret
  4778   004024                     __end_of_timer3_mode_cfg:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function _Timer2_init *****************
  4782 ;; Defined at:
  4783 ;;		line 13 in file "MKAL_layer/timer2/hal_timer2.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  Timer2          1    3[COMRAM] PTR const struct .
  4786 ;;		 -> Timer2(4), 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  ret             1    0        unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      unsigned char 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;Total ram usage:        2 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 3
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_intitialized_functions
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text24
  4813   003E9A                     __ptext24:
  4814                           	callstack 0
  4815   003E9A                     _Timer2_init:
  4816                           	callstack 26
  4817   003E9A                     
  4818                           ;MKAL_layer/timer2/hal_timer2.c: 15:     if (((void*)0) == Timer2){
  4819   003E9A  5004               	movf	Timer2_init@Timer2^0,w,c
  4820   003E9C  A4D8               	btfss	status,2,c
  4821   003E9E  EF53  F01F         	goto	u11641
  4822   003EA2  EF55  F01F         	goto	u11640
  4823   003EA6                     u11641:
  4824   003EA6  EF57  F01F         	goto	l1377
  4825   003EAA                     u11640:
  4826   003EAA                     
  4827                           ;MKAL_layer/timer2/hal_timer2.c: 17:     }
  4828   003EAA  EF90  F01F         	goto	l1379
  4829   003EAE                     l1377:
  4830                           
  4831                           ;MKAL_layer/timer2/hal_timer2.c: 19:     {;MKAL_layer/timer2/hal_timer2.c: 20:         (
      +                          T2CONbits.TMR2ON = 0);
  4832   003EAE  94CA               	bcf	202,2,c	;volatile
  4833   003EB0                     
  4834                           ;MKAL_layer/timer2/hal_timer2.c: 21:         (T2CONbits.T2CKPS = Timer2->timer2_prescale
      +                          r_cfg);;
  4835   003EB0  5004               	movf	Timer2_init@Timer2^0,w,c
  4836   003EB2  6ED9               	movwf	fsr2l,c
  4837   003EB4  6ADA               	clrf	fsr2h,c
  4838   003EB6  0E03               	movlw	3
  4839   003EB8  26D9               	addwf	fsr2l,f,c
  4840   003EBA  38DF               	swapf	223,w,c
  4841   003EBC  0B03               	andlw	3
  4842   003EBE  6E05               	movwf	??_Timer2_init^0,c
  4843   003EC0  50CA               	movf	202,w,c	;volatile
  4844   003EC2  1805               	xorwf	??_Timer2_init^0,w,c
  4845   003EC4  0BFC               	andlw	-4
  4846   003EC6  1805               	xorwf	??_Timer2_init^0,w,c
  4847   003EC8  6ECA               	movwf	202,c	;volatile
  4848                           
  4849                           ;MKAL_layer/timer2/hal_timer2.c: 22:         (T2CONbits.TOUTPS = Timer2->timer2_postscal
      +                          er_cfg);;
  4850   003ECA  5004               	movf	Timer2_init@Timer2^0,w,c
  4851   003ECC  6ED9               	movwf	fsr2l,c
  4852   003ECE  6ADA               	clrf	fsr2h,c
  4853   003ED0  0E03               	movlw	3
  4854   003ED2  26D9               	addwf	fsr2l,f,c
  4855   003ED4  50DF               	movf	223,w,c
  4856   003ED6  0B0F               	andlw	15
  4857   003ED8  6E05               	movwf	??_Timer2_init^0,c
  4858   003EDA  4605               	rlncf	??_Timer2_init^0,f,c
  4859   003EDC  4605               	rlncf	??_Timer2_init^0,f,c
  4860   003EDE  4605               	rlncf	??_Timer2_init^0,f,c
  4861   003EE0  50CA               	movf	202,w,c	;volatile
  4862   003EE2  1805               	xorwf	??_Timer2_init^0,w,c
  4863   003EE4  0B87               	andlw	-121
  4864   003EE6  1805               	xorwf	??_Timer2_init^0,w,c
  4865   003EE8  6ECA               	movwf	202,c	;volatile
  4866                           
  4867                           ;MKAL_layer/timer2/hal_timer2.c: 23:         TMR2 = Timer2->timer1_preload_value;
  4868   003EEA  5004               	movf	Timer2_init@Timer2^0,w,c
  4869   003EEC  6ED9               	movwf	fsr2l,c
  4870   003EEE  6ADA               	clrf	fsr2h,c
  4871   003EF0  0E02               	movlw	2
  4872   003EF2  26D9               	addwf	fsr2l,f,c
  4873   003EF4  50DF               	movf	indf2,w,c
  4874   003EF6  6ECC               	movwf	204,c	;volatile
  4875                           
  4876                           ;MKAL_layer/timer2/hal_timer2.c: 24:         Timer2_preload = Timer2->timer1_preload_val
      +                          ue;
  4877   003EF8  5004               	movf	Timer2_init@Timer2^0,w,c
  4878   003EFA  6ED9               	movwf	fsr2l,c
  4879   003EFC  6ADA               	clrf	fsr2h,c
  4880   003EFE  0E02               	movlw	2
  4881   003F00  26D9               	addwf	fsr2l,f,c
  4882   003F02  50DF               	movf	indf2,w,c
  4883   003F04  0100               	movlb	0	; () banked
  4884   003F06  6FC8               	movwf	_Timer2_preload& (0+255),b
  4885   003F08                     
  4886                           ; BSR set to: 0
  4887                           ;MKAL_layer/timer2/hal_timer2.c: 26:         (PIE1bits.TMR2IE = 1);
  4888   003F08  829D               	bsf	157,1,c	;volatile
  4889   003F0A                     
  4890                           ; BSR set to: 0
  4891                           ;MKAL_layer/timer2/hal_timer2.c: 27:         (PIR1bits.TMR2IF = 0);
  4892   003F0A  929E               	bcf	158,1,c	;volatile
  4893   003F0C                     
  4894                           ; BSR set to: 0
  4895                           ;MKAL_layer/timer2/hal_timer2.c: 28:         TIMER2_Interrupthandler = Timer2->Timer2_ha
      +                          ndler;
  4896   003F0C  5004               	movf	Timer2_init@Timer2^0,w,c
  4897   003F0E  6ED9               	movwf	fsr2l,c
  4898   003F10  6ADA               	clrf	fsr2h,c
  4899   003F12  CFDE F090          	movff	postinc2,_TIMER2_Interrupthandler
  4900   003F16  CFDD F091          	movff	postdec2,_TIMER2_Interrupthandler+1
  4901   003F1A                     
  4902                           ; BSR set to: 0
  4903                           ;MKAL_layer/timer2/hal_timer2.c: 42:         (INTCONbits.GIE =1);
  4904   003F1A  8EF2               	bsf	242,7,c	;volatile
  4905   003F1C                     
  4906                           ; BSR set to: 0
  4907                           ;MKAL_layer/timer2/hal_timer2.c: 43:         (INTCONbits.PEIE =1);
  4908   003F1C  8CF2               	bsf	242,6,c	;volatile
  4909   003F1E                     
  4910                           ; BSR set to: 0
  4911                           ;MKAL_layer/timer2/hal_timer2.c: 47:         (T2CONbits.TMR2ON = 1);
  4912   003F1E  84CA               	bsf	202,2,c	;volatile
  4913   003F20                     l1379:
  4914   003F20  0012               	return		;funcret
  4915   003F22                     __end_of_Timer2_init:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _MSSP_I2C_Init *****************
  4919 ;; Defined at:
  4920 ;;		line 20 in file "MKAL_layer/I2C/hal_i2c.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  i2c_obj         2   96[COMRAM] PTR const struct .
  4923 ;;		 -> mssp_i2c(15), 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  ret             1    0        unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      unsigned char 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;Total ram usage:        2 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; Hardware stack levels required when called: 5
  4942 ;; This function calls:
  4943 ;;		_I2C_Master_Mode_Clock_Configurations
  4944 ;;		_I2C_Slave_Mode_Configurations
  4945 ;;		_MSSP_I2C_Interrupt_Configurations
  4946 ;;		_MSSP_I2C_Mode_GPIO_CFG
  4947 ;; This function is called by:
  4948 ;;		_intitialized_functions
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text25
  4953   002D62                     __ptext25:
  4954                           	callstack 0
  4955   002D62                     _MSSP_I2C_Init:
  4956                           	callstack 24
  4957   002D62                     
  4958                           ;MKAL_layer/I2C/hal_i2c.c: 22:     if(((void*)0) == i2c_obj){
  4959   002D62  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  4960   002D64  1062               	iorwf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  4961   002D66  A4D8               	btfss	status,2,c
  4962   002D68  EFB8  F016         	goto	u11541
  4963   002D6C  EFBA  F016         	goto	u11540
  4964   002D70                     u11541:
  4965   002D70  EFBC  F016         	goto	l760
  4966   002D74                     u11540:
  4967   002D74                     
  4968                           ;MKAL_layer/I2C/hal_i2c.c: 24:     }
  4969   002D74  EF53  F017         	goto	l778
  4970   002D78                     l760:
  4971                           
  4972                           ;MKAL_layer/I2C/hal_i2c.c: 27:         (SSPCON1bits.SSPEN = 0);
  4973   002D78  9AC6               	bcf	198,5,c	;volatile
  4974   002D7A                     
  4975                           ;MKAL_layer/I2C/hal_i2c.c: 29:         if(1 == i2c_obj->i2c_cfg.i2c_mode){
  4976   002D7A  EE20 F006          	lfsr	2,6
  4977   002D7E  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  4978   002D80  26D9               	addwf	fsr2l,f,c
  4979   002D82  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  4980   002D84  22DA               	addwfc	fsr2h,f,c
  4981   002D86  A0DF               	btfss	indf2,0,c
  4982   002D88  EFC8  F016         	goto	u11551
  4983   002D8C  EFCA  F016         	goto	u11550
  4984   002D90                     u11551:
  4985   002D90  EFD2  F016         	goto	l10682
  4986   002D94                     u11550:
  4987   002D94                     
  4988                           ;MKAL_layer/I2C/hal_i2c.c: 31:             I2C_Master_Mode_Clock_Configurations(i2c_obj)
      +                          ;
  4989   002D94  C061  F05E         	movff	MSSP_I2C_Init@i2c_obj,I2C_Master_Mode_Clock_Configurations@i2c_obj
  4990   002D98  C062  F05F         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Master_Mode_Clock_Configurations@i2c_obj+1
  4991   002D9C  ECE2  F01D         	call	_I2C_Master_Mode_Clock_Configurations	;wreg free
  4992                           
  4993                           ;MKAL_layer/I2C/hal_i2c.c: 32:         }
  4994   002DA0  EF0E  F017         	goto	l10696
  4995   002DA4                     l10682:
  4996   002DA4  EE20 F006          	lfsr	2,6
  4997   002DA8  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  4998   002DAA  26D9               	addwf	fsr2l,f,c
  4999   002DAC  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5000   002DAE  22DA               	addwfc	fsr2h,f,c
  5001   002DB0  B0DF               	btfsc	indf2,0,c
  5002   002DB2  EFDD  F016         	goto	u11561
  5003   002DB6  EFDF  F016         	goto	u11560
  5004   002DBA                     u11561:
  5005   002DBA  EF0E  F017         	goto	l10696
  5006   002DBE                     u11560:
  5007   002DBE                     
  5008                           ;MKAL_layer/I2C/hal_i2c.c: 35:             if(1 == i2c_obj->i2c_cfg.i2c_general_call){
  5009   002DBE  EE20 F006          	lfsr	2,6
  5010   002DC2  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5011   002DC4  26D9               	addwf	fsr2l,f,c
  5012   002DC6  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5013   002DC8  22DA               	addwfc	fsr2h,f,c
  5014   002DCA  A6DF               	btfss	indf2,3,c
  5015   002DCC  EFEA  F016         	goto	u11571
  5016   002DD0  EFEC  F016         	goto	u11570
  5017   002DD4                     u11571:
  5018   002DD4  EFEF  F016         	goto	l10688
  5019   002DD8                     u11570:
  5020   002DD8                     
  5021                           ;MKAL_layer/I2C/hal_i2c.c: 36:                 (SSPCON2bits.GCEN = 1);
  5022   002DD8  8EC5               	bsf	197,7,c	;volatile
  5023                           
  5024                           ;MKAL_layer/I2C/hal_i2c.c: 37:             }
  5025   002DDA  EFFD  F016         	goto	l766
  5026   002DDE                     l10688:
  5027   002DDE  EE20 F006          	lfsr	2,6
  5028   002DE2  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5029   002DE4  26D9               	addwf	fsr2l,f,c
  5030   002DE6  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5031   002DE8  22DA               	addwfc	fsr2h,f,c
  5032   002DEA  B6DF               	btfsc	indf2,3,c
  5033   002DEC  EFFA  F016         	goto	u11581
  5034   002DF0  EFFC  F016         	goto	u11580
  5035   002DF4                     u11581:
  5036   002DF4  EFFD  F016         	goto	l766
  5037   002DF8                     u11580:
  5038   002DF8                     
  5039                           ;MKAL_layer/I2C/hal_i2c.c: 39:                 (SSPCON2bits.GCEN = 0);
  5040   002DF8  9EC5               	bcf	197,7,c	;volatile
  5041   002DFA                     l766:
  5042                           
  5043                           ;MKAL_layer/I2C/hal_i2c.c: 43:             SSPCON1bits.WCOL = 0;
  5044   002DFA  9EC6               	bcf	198,7,c	;volatile
  5045                           
  5046                           ;MKAL_layer/I2C/hal_i2c.c: 45:             SSPCON1bits.SSPOV = 0;
  5047   002DFC  9CC6               	bcf	198,6,c	;volatile
  5048                           
  5049                           ;MKAL_layer/I2C/hal_i2c.c: 47:             SSPCON1bits.CKP = 1;
  5050   002DFE  88C6               	bsf	198,4,c	;volatile
  5051   002E00                     
  5052                           ;MKAL_layer/I2C/hal_i2c.c: 49:             SSPADD = i2c_obj->i2c_cfg.i2c_slave_address;
  5053   002E00  EE20 F005          	lfsr	2,5
  5054   002E04  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5055   002E06  26D9               	addwf	fsr2l,f,c
  5056   002E08  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5057   002E0A  22DA               	addwfc	fsr2h,f,c
  5058   002E0C  50DF               	movf	indf2,w,c
  5059   002E0E  6EC8               	movwf	200,c	;volatile
  5060   002E10                     
  5061                           ;MKAL_layer/I2C/hal_i2c.c: 51:             I2C_Slave_Mode_Configurations(i2c_obj);
  5062   002E10  C061  F004         	movff	MSSP_I2C_Init@i2c_obj,I2C_Slave_Mode_Configurations@i2c_obj
  5063   002E14  C062  F005         	movff	MSSP_I2C_Init@i2c_obj+1,I2C_Slave_Mode_Configurations@i2c_obj+1
  5064   002E18  EC13  F026         	call	_I2C_Slave_Mode_Configurations	;wreg free
  5065   002E1C                     l10696:
  5066                           
  5067                           ;MKAL_layer/I2C/hal_i2c.c: 55:         MSSP_I2C_Mode_GPIO_CFG();
  5068   002E1C  EC82  F026         	call	_MSSP_I2C_Mode_GPIO_CFG	;wreg free
  5069   002E20                     
  5070                           ;MKAL_layer/I2C/hal_i2c.c: 57:         if(1 == i2c_obj->i2c_cfg.i2c_slew_rate){
  5071   002E20  EE20 F006          	lfsr	2,6
  5072   002E24  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5073   002E26  26D9               	addwf	fsr2l,f,c
  5074   002E28  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5075   002E2A  22DA               	addwfc	fsr2h,f,c
  5076   002E2C  A2DF               	btfss	indf2,1,c
  5077   002E2E  EF1B  F017         	goto	u11591
  5078   002E32  EF1D  F017         	goto	u11590
  5079   002E36                     u11591:
  5080   002E36  EF20  F017         	goto	l10702
  5081   002E3A                     u11590:
  5082   002E3A                     
  5083                           ;MKAL_layer/I2C/hal_i2c.c: 58:             (SSPSTATbits.SMP = 1);
  5084   002E3A  8EC7               	bsf	199,7,c	;volatile
  5085                           
  5086                           ;MKAL_layer/I2C/hal_i2c.c: 59:         }
  5087   002E3C  EF2E  F017         	goto	l10706
  5088   002E40                     l10702:
  5089   002E40  EE20 F006          	lfsr	2,6
  5090   002E44  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5091   002E46  26D9               	addwf	fsr2l,f,c
  5092   002E48  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5093   002E4A  22DA               	addwfc	fsr2h,f,c
  5094   002E4C  B2DF               	btfsc	indf2,1,c
  5095   002E4E  EF2B  F017         	goto	u11601
  5096   002E52  EF2D  F017         	goto	u11600
  5097   002E56                     u11601:
  5098   002E56  EF2E  F017         	goto	l10706
  5099   002E5A                     u11600:
  5100   002E5A                     
  5101                           ;MKAL_layer/I2C/hal_i2c.c: 61:             (SSPSTATbits.SMP = 0);
  5102   002E5A  9EC7               	bcf	199,7,c	;volatile
  5103   002E5C                     l10706:
  5104                           
  5105                           ;MKAL_layer/I2C/hal_i2c.c: 65:         if(1 == i2c_obj->i2c_cfg.i2c_SMBus_control){
  5106   002E5C  EE20 F006          	lfsr	2,6
  5107   002E60  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5108   002E62  26D9               	addwf	fsr2l,f,c
  5109   002E64  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5110   002E66  22DA               	addwfc	fsr2h,f,c
  5111   002E68  A4DF               	btfss	indf2,2,c
  5112   002E6A  EF39  F017         	goto	u11611
  5113   002E6E  EF3B  F017         	goto	u11610
  5114   002E72                     u11611:
  5115   002E72  EF3E  F017         	goto	l10710
  5116   002E76                     u11610:
  5117   002E76                     
  5118                           ;MKAL_layer/I2C/hal_i2c.c: 66:             (SSPSTATbits.CKE = 1);
  5119   002E76  8CC7               	bsf	199,6,c	;volatile
  5120                           
  5121                           ;MKAL_layer/I2C/hal_i2c.c: 67:         }
  5122   002E78  EF4C  F017         	goto	l10714
  5123   002E7C                     l10710:
  5124   002E7C  EE20 F006          	lfsr	2,6
  5125   002E80  5061               	movf	MSSP_I2C_Init@i2c_obj^0,w,c
  5126   002E82  26D9               	addwf	fsr2l,f,c
  5127   002E84  5062               	movf	(MSSP_I2C_Init@i2c_obj+1)^0,w,c
  5128   002E86  22DA               	addwfc	fsr2h,f,c
  5129   002E88  B4DF               	btfsc	indf2,2,c
  5130   002E8A  EF49  F017         	goto	u11621
  5131   002E8E  EF4B  F017         	goto	u11620
  5132   002E92                     u11621:
  5133   002E92  EF4C  F017         	goto	l10714
  5134   002E96                     u11620:
  5135   002E96                     
  5136                           ;MKAL_layer/I2C/hal_i2c.c: 69:             (SSPSTATbits.CKE = 0);
  5137   002E96  9CC7               	bcf	199,6,c	;volatile
  5138   002E98                     l10714:
  5139                           
  5140                           ;MKAL_layer/I2C/hal_i2c.c: 74:       MSSP_I2C_Interrupt_Configurations(i2c_obj);
  5141   002E98  C061  F004         	movff	MSSP_I2C_Init@i2c_obj,MSSP_I2C_Interrupt_Configurations@i2c_obj
  5142   002E9C  C062  F005         	movff	MSSP_I2C_Init@i2c_obj+1,MSSP_I2C_Interrupt_Configurations@i2c_obj+1
  5143   002EA0  EC53  F023         	call	_MSSP_I2C_Interrupt_Configurations	;wreg free
  5144   002EA4                     
  5145                           ;MKAL_layer/I2C/hal_i2c.c: 77:         (SSPCON1bits.SSPEN = 1);
  5146   002EA4  8AC6               	bsf	198,5,c	;volatile
  5147   002EA6                     l778:
  5148   002EA6  0012               	return		;funcret
  5149   002EA8                     __end_of_MSSP_I2C_Init:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _MSSP_I2C_Mode_GPIO_CFG *****************
  5153 ;; Defined at:
  5154 ;;		line 307 in file "MKAL_layer/I2C/hal_i2c.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		None
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 3
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_MSSP_I2C_Init
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text26
  5183   004D04                     __ptext26:
  5184                           	callstack 0
  5185   004D04                     _MSSP_I2C_Mode_GPIO_CFG:
  5186                           	callstack 25
  5187   004D04                     
  5188                           ;MKAL_layer/I2C/hal_i2c.c: 308:     TRISCbits.TRISC3 = 1;
  5189   004D04  8694               	bsf	148,3,c	;volatile
  5190                           
  5191                           ;MKAL_layer/I2C/hal_i2c.c: 309:     TRISCbits.TRISC4 = 1;
  5192   004D06  8894               	bsf	148,4,c	;volatile
  5193   004D08  0012               	return		;funcret
  5194   004D0A                     __end_of_MSSP_I2C_Mode_GPIO_CFG:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function _MSSP_I2C_Interrupt_Configurations *****************
  5198 ;; Defined at:
  5199 ;;		line 322 in file "MKAL_layer/I2C/hal_i2c.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  i2c_obj         2    3[COMRAM] PTR const struct .
  5202 ;;		 -> mssp_i2c(15), 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;Total ram usage:        2 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 3
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_MSSP_I2C_Init
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text27
  5229   0046A6                     __ptext27:
  5230                           	callstack 0
  5231   0046A6                     _MSSP_I2C_Interrupt_Configurations:
  5232                           	callstack 25
  5233   0046A6                     
  5234                           ;MKAL_layer/I2C/hal_i2c.c: 324:         (PIE1bits.SSPIE = 1);
  5235   0046A6  869D               	bsf	157,3,c	;volatile
  5236                           
  5237                           ;MKAL_layer/I2C/hal_i2c.c: 325:         (PIE2bits.BCLIE = 1);
  5238   0046A8  86A0               	bsf	160,3,c	;volatile
  5239                           
  5240                           ;MKAL_layer/I2C/hal_i2c.c: 326:         (PIR1bits.SSPIF = 0);
  5241   0046AA  969E               	bcf	158,3,c	;volatile
  5242                           
  5243                           ;MKAL_layer/I2C/hal_i2c.c: 327:         (PIR2bits.BCLIF = 0);
  5244   0046AC  96A1               	bcf	161,3,c	;volatile
  5245   0046AE                     
  5246                           ;MKAL_layer/I2C/hal_i2c.c: 328:         I2C_Report_Write_Collision_InterruptHandler = i2
      +                          c_obj->I2C_Report_Write_Collision;
  5247   0046AE  EE20 F009          	lfsr	2,9
  5248   0046B2  5004               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  5249   0046B4  26D9               	addwf	fsr2l,f,c
  5250   0046B6  5005               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  5251   0046B8  22DA               	addwfc	fsr2h,f,c
  5252   0046BA  CFDE F0B4          	movff	postinc2,_I2C_Report_Write_Collision_InterruptHandler
  5253   0046BE  CFDD F0B5          	movff	postdec2,_I2C_Report_Write_Collision_InterruptHandler+1
  5254                           
  5255                           ;MKAL_layer/I2C/hal_i2c.c: 329:         I2C_DefaultInterruptHandle = i2c_obj->I2C_Defaul
      +                          tInterruptHandler;
  5256   0046C2  EE20 F00B          	lfsr	2,11
  5257   0046C6  5004               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  5258   0046C8  26D9               	addwf	fsr2l,f,c
  5259   0046CA  5005               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  5260   0046CC  22DA               	addwfc	fsr2h,f,c
  5261   0046CE  CFDE F0B2          	movff	postinc2,_I2C_DefaultInterruptHandle
  5262   0046D2  CFDD F0B3          	movff	postdec2,_I2C_DefaultInterruptHandle+1
  5263                           
  5264                           ;MKAL_layer/I2C/hal_i2c.c: 330:         I2C_Report_Receive_Overflow_InterruptHandle = i2
      +                          c_obj->I2C_Report_Receive_Overflow;
  5265   0046D6  EE20 F00D          	lfsr	2,13
  5266   0046DA  5004               	movf	MSSP_I2C_Interrupt_Configurations@i2c_obj^0,w,c
  5267   0046DC  26D9               	addwf	fsr2l,f,c
  5268   0046DE  5005               	movf	(MSSP_I2C_Interrupt_Configurations@i2c_obj+1)^0,w,c
  5269   0046E0  22DA               	addwfc	fsr2h,f,c
  5270   0046E2  CFDE F0B0          	movff	postinc2,_I2C_Report_Receive_Overflow_InterruptHandle
  5271   0046E6  CFDD F0B1          	movff	postdec2,_I2C_Report_Receive_Overflow_InterruptHandle+1
  5272   0046EA                     
  5273                           ;MKAL_layer/I2C/hal_i2c.c: 358:         (INTCONbits.GIE =1);
  5274   0046EA  8EF2               	bsf	242,7,c	;volatile
  5275   0046EC                     
  5276                           ;MKAL_layer/I2C/hal_i2c.c: 359:         (INTCONbits.PEIE =1);
  5277   0046EC  8CF2               	bsf	242,6,c	;volatile
  5278   0046EE  0012               	return		;funcret
  5279   0046F0                     __end_of_MSSP_I2C_Interrupt_Configurations:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _I2C_Slave_Mode_Configurations *****************
  5283 ;; Defined at:
  5284 ;;		line 318 in file "MKAL_layer/I2C/hal_i2c.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  i2c_obj         2    3[COMRAM] PTR const struct .
  5287 ;;		 -> mssp_i2c(15), 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;Total ram usage:        3 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 3
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_MSSP_I2C_Init
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text28
  5314   004C26                     __ptext28:
  5315                           	callstack 0
  5316   004C26                     _I2C_Slave_Mode_Configurations:
  5317                           	callstack 25
  5318   004C26                     
  5319                           ;MKAL_layer/I2C/hal_i2c.c: 319:     SSPCON1bits.SSPM = i2c_obj->i2c_cfg.i2c_mode_cfg;
  5320   004C26  EE20 F004          	lfsr	2,4
  5321   004C2A  5004               	movf	I2C_Slave_Mode_Configurations@i2c_obj^0,w,c
  5322   004C2C  26D9               	addwf	fsr2l,f,c
  5323   004C2E  5005               	movf	(I2C_Slave_Mode_Configurations@i2c_obj+1)^0,w,c
  5324   004C30  22DA               	addwfc	fsr2h,f,c
  5325   004C32  50DF               	movf	indf2,w,c
  5326   004C34  6E06               	movwf	??_I2C_Slave_Mode_Configurations^0,c
  5327   004C36  50C6               	movf	198,w,c	;volatile
  5328   004C38  1806               	xorwf	??_I2C_Slave_Mode_Configurations^0,w,c
  5329   004C3A  0BF0               	andlw	-16
  5330   004C3C  1806               	xorwf	??_I2C_Slave_Mode_Configurations^0,w,c
  5331   004C3E  6EC6               	movwf	198,c	;volatile
  5332   004C40  0012               	return		;funcret
  5333   004C42                     __end_of_I2C_Slave_Mode_Configurations:
  5334                           	callstack 0
  5335                           
  5336 ;; *************** function _I2C_Master_Mode_Clock_Configurations *****************
  5337 ;; Defined at:
  5338 ;;		line 312 in file "MKAL_layer/I2C/hal_i2c.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  i2c_obj         2   93[COMRAM] PTR const struct .
  5341 ;;		 -> mssp_i2c(15), 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:        3 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 4
  5360 ;; This function calls:
  5361 ;;		___fladd
  5362 ;;		___fldiv
  5363 ;;		___fltol
  5364 ;;		___xxtofl
  5365 ;; This function is called by:
  5366 ;;		_MSSP_I2C_Init
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text29
  5371   003BC4                     __ptext29:
  5372                           	callstack 0
  5373   003BC4                     _I2C_Master_Mode_Clock_Configurations:
  5374                           	callstack 24
  5375   003BC4                     
  5376                           ;MKAL_layer/I2C/hal_i2c.c: 314:     SSPCON1bits.SSPM = i2c_obj->i2c_cfg.i2c_mode_cfg;
  5377   003BC4  EE20 F004          	lfsr	2,4
  5378   003BC8  505E               	movf	I2C_Master_Mode_Clock_Configurations@i2c_obj^0,w,c
  5379   003BCA  26D9               	addwf	fsr2l,f,c
  5380   003BCC  505F               	movf	(I2C_Master_Mode_Clock_Configurations@i2c_obj+1)^0,w,c
  5381   003BCE  22DA               	addwfc	fsr2h,f,c
  5382   003BD0  50DF               	movf	indf2,w,c
  5383   003BD2  6E60               	movwf	??_I2C_Master_Mode_Clock_Configurations^0,c
  5384   003BD4  50C6               	movf	198,w,c	;volatile
  5385   003BD6  1860               	xorwf	??_I2C_Master_Mode_Clock_Configurations^0,w,c
  5386   003BD8  0BF0               	andlw	-16
  5387   003BDA  1860               	xorwf	??_I2C_Master_Mode_Clock_Configurations^0,w,c
  5388   003BDC  6EC6               	movwf	198,c	;volatile
  5389   003BDE                     
  5390                           ;MKAL_layer/I2C/hal_i2c.c: 315:     SSPADD = (uint8)(((4000000UL / 4.0) / i2c_obj->i2c_c
      +                          lock) - 1);
  5391   003BDE  0E00               	movlw	0
  5392   003BE0  6E2F               	movwf	___fladd@a^0,c
  5393   003BE2  0E00               	movlw	0
  5394   003BE4  6E30               	movwf	(___fladd@a+1)^0,c
  5395   003BE6  0E80               	movlw	128
  5396   003BE8  6E31               	movwf	(___fladd@a+2)^0,c
  5397   003BEA  0EBF               	movlw	191
  5398   003BEC  6E32               	movwf	(___fladd@a+3)^0,c
  5399   003BEE  C05E  FFD9         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj,fsr2l
  5400   003BF2  C05F  FFDA         	movff	I2C_Master_Mode_Clock_Configurations@i2c_obj+1,fsr2h
  5401   003BF6  CFDE F004          	movff	postinc2,___xxtofl@val
  5402   003BFA  CFDE F005          	movff	postinc2,___xxtofl@val+1
  5403   003BFE  CFDE F006          	movff	postinc2,___xxtofl@val+2
  5404   003C02  CFDE F007          	movff	postinc2,___xxtofl@val+3
  5405   003C06  0E00               	movlw	0
  5406   003C08  EC28  F015         	call	___xxtofl
  5407   003C0C  C004  F016         	movff	?___xxtofl,___fldiv@a
  5408   003C10  C005  F017         	movff	?___xxtofl+1,___fldiv@a+1
  5409   003C14  C006  F018         	movff	?___xxtofl+2,___fldiv@a+2
  5410   003C18  C007  F019         	movff	?___xxtofl+3,___fldiv@a+3
  5411   003C1C  0E00               	movlw	0
  5412   003C1E  6E12               	movwf	___fldiv@b^0,c
  5413   003C20  0E24               	movlw	36
  5414   003C22  6E13               	movwf	(___fldiv@b+1)^0,c
  5415   003C24  0E74               	movlw	116
  5416   003C26  6E14               	movwf	(___fldiv@b+2)^0,c
  5417   003C28  0E49               	movlw	73
  5418   003C2A  6E15               	movwf	(___fldiv@b+3)^0,c
  5419   003C2C  EC69  F011         	call	___fldiv	;wreg free
  5420   003C30  C012  F02B         	movff	?___fldiv,___fladd@b
  5421   003C34  C013  F02C         	movff	?___fldiv+1,___fladd@b+1
  5422   003C38  C014  F02D         	movff	?___fldiv+2,___fladd@b+2
  5423   003C3C  C015  F02E         	movff	?___fldiv+3,___fladd@b+3
  5424   003C40  ECF9  F00A         	call	___fladd	;wreg free
  5425   003C44  C02B  F054         	movff	?___fladd,___fltol@f1
  5426   003C48  C02C  F055         	movff	?___fladd+1,___fltol@f1+1
  5427   003C4C  C02D  F056         	movff	?___fladd+2,___fltol@f1+2
  5428   003C50  C02E  F057         	movff	?___fladd+3,___fltol@f1+3
  5429   003C54  ECA9  F019         	call	___fltol	;wreg free
  5430   003C58  5054               	movf	?___fltol^0,w,c
  5431   003C5A  6EC8               	movwf	200,c	;volatile
  5432   003C5C  0012               	return		;funcret
  5433   003C5E                     __end_of_I2C_Master_Mode_Clock_Configurations:
  5434                           	callstack 0
  5435                           
  5436 ;; *************** function _Interrupt_Intx_Inti *****************
  5437 ;; Defined at:
  5438 ;;		line 43 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  INTERRUPT_IN    2   19[COMRAM] PTR const struct .
  5441 ;;		 -> INT_1(6), INT_0(6), 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  ret             1   21[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      unsigned char 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        3 bytes
  5458 ;; Hardware stack levels used: 1
  5459 ;; Hardware stack levels required when called: 6
  5460 ;; This function calls:
  5461 ;;		_interrupt_intx_clear
  5462 ;;		_interrupt_intx_disable
  5463 ;;		_interrupt_intx_edge_inti
  5464 ;;		_interrupt_intx_enable
  5465 ;;		_interrupt_intx_pin_inti
  5466 ;;		_interrupt_intx_sethandler
  5467 ;; This function is called by:
  5468 ;;		_intitialized_functions
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text30
  5473   0044EC                     __ptext30:
  5474                           	callstack 0
  5475   0044EC                     _Interrupt_Intx_Inti:
  5476                           	callstack 23
  5477   0044EC                     
  5478                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 45:     if(((void*)0) == INTERRUPT_INTX
      +                          ){
  5479   0044EC  5014               	movf	Interrupt_Intx_Inti@INTERRUPT_INTX^0,w,c
  5480   0044EE  1015               	iorwf	(Interrupt_Intx_Inti@INTERRUPT_INTX+1)^0,w,c
  5481   0044F0  A4D8               	btfss	status,2,c
  5482   0044F2  EF7D  F022         	goto	u11631
  5483   0044F6  EF7F  F022         	goto	u11630
  5484   0044FA                     u11631:
  5485   0044FA  EF81  F022         	goto	l10728
  5486   0044FE                     u11630:
  5487   0044FE                     
  5488                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 47:     }
  5489   0044FE  EFA8  F022         	goto	l942
  5490   004502                     l10728:
  5491                           
  5492                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 49:     {;MKAL_layer/Interrupt/mcal_ext
      +                          ernal_interrupt.c: 51:         ret = interrupt_intx_disable(INTERRUPT_INTX);
  5493   004502  C014  F004         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_disable@INTERRUPT_INTX
  5494   004506  C015  F005         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_disable@INTERRUPT_INTX+1
  5495   00450A  EC8E  F020         	call	_interrupt_intx_disable	;wreg free
  5496   00450E  6E16               	movwf	Interrupt_Intx_Inti@ret^0,c
  5497                           
  5498                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 53:         ret = interrupt_intx_clear(
      +                          INTERRUPT_INTX);
  5499   004510  C014  F004         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_clear@INTERRUPT_INTX
  5500   004514  C015  F005         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_clear@INTERRUPT_INTX+1
  5501   004518  ECC7  F020         	call	_interrupt_intx_clear	;wreg free
  5502   00451C  6E16               	movwf	Interrupt_Intx_Inti@ret^0,c
  5503                           
  5504                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 55:         ret = interrupt_intx_edge_i
      +                          nti(INTERRUPT_INTX);
  5505   00451E  C014  F004         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_edge_inti@INTERRUPT_INTX
  5506   004522  C015  F005         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_edge_inti@INTERRUPT_INTX+1
  5507   004526  EC85  F018         	call	_interrupt_intx_edge_inti	;wreg free
  5508   00452A  6E16               	movwf	Interrupt_Intx_Inti@ret^0,c
  5509   00452C  C014  F011         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_pin_inti@INTERRUPT_INTX
  5510   004530  C015  F012         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_pin_inti@INTERRUPT_INTX+1
  5511   004534  EC45  F025         	call	_interrupt_intx_pin_inti	;wreg free
  5512   004538  C014  F006         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_sethandler@INTERRUPT_INTX
  5513   00453C  C015  F007         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_sethandler@INTERRUPT_INTX+1
  5514   004540  EC3A  F01D         	call	_interrupt_intx_sethandler	;wreg free
  5515   004544  C014  F004         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX,interrupt_intx_enable@INTERRUPT_INTX
  5516   004548  C015  F005         	movff	Interrupt_Intx_Inti@INTERRUPT_INTX+1,interrupt_intx_enable@INTERRUPT_INTX+1
  5517   00454C  EC12  F020         	call	_interrupt_intx_enable	;wreg free
  5518   004550                     l942:
  5519   004550  0012               	return		;funcret
  5520   004552                     __end_of_Interrupt_Intx_Inti:
  5521                           	callstack 0
  5522                           
  5523 ;; *************** function _interrupt_intx_sethandler *****************
  5524 ;; Defined at:
  5525 ;;		line 460 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  INTERRUPT_IN    2    5[COMRAM] PTR const struct .
  5528 ;;		 -> INT_1(6), INT_0(6), 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  ret             1    9[COMRAM] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      unsigned char 
  5533 ;; Registers used:
  5534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;Total ram usage:        5 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 4
  5547 ;; This function calls:
  5548 ;;		_INT0_setinterrupthandler
  5549 ;;		_INT1_setinterrupthandler
  5550 ;;		_INT2_setinterrupthandler
  5551 ;; This function is called by:
  5552 ;;		_Interrupt_Intx_Inti
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text31
  5557   003A74                     __ptext31:
  5558                           	callstack 0
  5559   003A74                     _interrupt_intx_sethandler:
  5560                           	callstack 24
  5561   003A74                     
  5562                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 461:     Std_ReturnType ret =(Std_Retur
      +                          nType)0x00;
  5563   003A74  0E00               	movlw	0
  5564   003A76  6E0A               	movwf	interrupt_intx_sethandler@ret^0,c
  5565   003A78                     
  5566                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 462:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  5567   003A78  5006               	movf	interrupt_intx_sethandler@INTERRUPT_INTX^0,w,c
  5568   003A7A  1007               	iorwf	(interrupt_intx_sethandler@INTERRUPT_INTX+1)^0,w,c
  5569   003A7C  A4D8               	btfss	status,2,c
  5570   003A7E  EF43  F01D         	goto	u11101
  5571   003A82  EF45  F01D         	goto	u11100
  5572   003A86                     u11101:
  5573   003A86  EF6F  F01D         	goto	l10266
  5574   003A8A                     u11100:
  5575   003A8A                     l10256:
  5576                           
  5577                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 463:         ret =(Std_ReturnType)0x00;
  5578   003A8A  0E00               	movlw	0
  5579   003A8C  6E0A               	movwf	interrupt_intx_sethandler@ret^0,c
  5580                           
  5581                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 464:     }
  5582   003A8E  EF8E  F01D         	goto	l10268
  5583   003A92                     l10258:
  5584                           
  5585                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 469:                 INT0_setinterrupth
      +                          andler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);
  5586   003A92  C006  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  5587   003A96  C007  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  5588   003A9A  CFDE F004          	movff	postinc2,INT0_setinterrupthandler@interrupthandler
  5589   003A9E  CFDD F005          	movff	postdec2,INT0_setinterrupthandler@interrupthandler+1
  5590   003AA2  EC03  F026         	call	_INT0_setinterrupthandler	;wreg free
  5591                           
  5592                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 470:                 break;
  5593   003AA6  EF8E  F01D         	goto	l10268
  5594   003AAA                     l10260:
  5595                           
  5596                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 472:                 ret =INT1_setinter
      +                          rupthandler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);
  5597   003AAA  C006  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  5598   003AAE  C007  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  5599   003AB2  CFDE F004          	movff	postinc2,INT1_setinterrupthandler@interrupthandler
  5600   003AB6  CFDD F005          	movff	postdec2,INT1_setinterrupthandler@interrupthandler+1
  5601   003ABA  ECF3  F025         	call	_INT1_setinterrupthandler	;wreg free
  5602   003ABE  6E0A               	movwf	interrupt_intx_sethandler@ret^0,c
  5603                           
  5604                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 473:                 break;
  5605   003AC0  EF8E  F01D         	goto	l10268
  5606   003AC4                     l10262:
  5607                           
  5608                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 475:                 ret =INT2_setinter
      +                          rupthandler(INTERRUPT_INTX->EXT_INTERRUPTHANDLE);;
  5609   003AC4  C006  FFD9         	movff	interrupt_intx_sethandler@INTERRUPT_INTX,fsr2l
  5610   003AC8  C007  FFDA         	movff	interrupt_intx_sethandler@INTERRUPT_INTX+1,fsr2h
  5611   003ACC  CFDE F004          	movff	postinc2,INT2_setinterrupthandler@interrupthandler
  5612   003AD0  CFDD F005          	movff	postdec2,INT2_setinterrupthandler@interrupthandler+1
  5613   003AD4  ECE3  F025         	call	_INT2_setinterrupthandler	;wreg free
  5614   003AD8  6E0A               	movwf	interrupt_intx_sethandler@ret^0,c
  5615                           
  5616                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 476:                 break;
  5617   003ADA  EF8E  F01D         	goto	l10268
  5618   003ADE                     l10266:
  5619   003ADE  EE20 F004          	lfsr	2,4
  5620   003AE2  5006               	movf	interrupt_intx_sethandler@INTERRUPT_INTX^0,w,c
  5621   003AE4  26D9               	addwf	fsr2l,f,c
  5622   003AE6  5007               	movf	(interrupt_intx_sethandler@INTERRUPT_INTX+1)^0,w,c
  5623   003AE8  22DA               	addwfc	fsr2h,f,c
  5624   003AEA  50DF               	movf	indf2,w,c
  5625   003AEC  6E08               	movwf	??_interrupt_intx_sethandler^0,c
  5626   003AEE  6A09               	clrf	(??_interrupt_intx_sethandler+1)^0,c
  5627                           
  5628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5629                           ; Switch size 1, requested type "simple"
  5630                           ; Number of cases is 1, Range of values is 0 to 0
  5631                           ; switch strategies available:
  5632                           ; Name         Instructions Cycles
  5633                           ; simple_byte            4     3 (average)
  5634                           ;	Chosen strategy is simple_byte
  5635   003AF0  5009               	movf	(??_interrupt_intx_sethandler+1)^0,w,c
  5636   003AF2  0A00               	xorlw	0	; case 0
  5637   003AF4  B4D8               	btfsc	status,2,c
  5638   003AF6  EF7F  F01D         	goto	l12006
  5639   003AFA  EF45  F01D         	goto	l10256
  5640   003AFE                     l12006:
  5641                           
  5642                           ; Switch size 1, requested type "simple"
  5643                           ; Number of cases is 3, Range of values is 0 to 2
  5644                           ; switch strategies available:
  5645                           ; Name         Instructions Cycles
  5646                           ; simple_byte           10     6 (average)
  5647                           ;	Chosen strategy is simple_byte
  5648   003AFE  5008               	movf	??_interrupt_intx_sethandler^0,w,c
  5649   003B00  0A00               	xorlw	0	; case 0
  5650   003B02  B4D8               	btfsc	status,2,c
  5651   003B04  EF49  F01D         	goto	l10258
  5652   003B08  0A01               	xorlw	1	; case 1
  5653   003B0A  B4D8               	btfsc	status,2,c
  5654   003B0C  EF55  F01D         	goto	l10260
  5655   003B10  0A03               	xorlw	3	; case 2
  5656   003B12  B4D8               	btfsc	status,2,c
  5657   003B14  EF62  F01D         	goto	l10262
  5658   003B18  EF45  F01D         	goto	l10256
  5659   003B1C                     l10268:
  5660                           
  5661                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 481:     return ret ;
  5662   003B1C  500A               	movf	interrupt_intx_sethandler@ret^0,w,c
  5663   003B1E  0012               	return		;funcret
  5664   003B20                     __end_of_interrupt_intx_sethandler:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _INT2_setinterrupthandler *****************
  5668 ;; Defined at:
  5669 ;;		line 446 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  interrupthan    2    3[COMRAM] PTR FTN()void 
  5672 ;;		 -> int1_interrupt(1), into_interrupt(1), 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  ret             1    0        unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  1    wreg      unsigned char 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;Total ram usage:        2 bytes
  5689 ;; Hardware stack levels used: 1
  5690 ;; Hardware stack levels required when called: 3
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_interrupt_intx_sethandler
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text32
  5699   004BC6                     __ptext32:
  5700                           	callstack 0
  5701   004BC6                     _INT2_setinterrupthandler:
  5702                           	callstack 24
  5703   004BC6                     
  5704                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 448:     if(((void*)0) == interrupthand
      +                          ler){
  5705   004BC6  5004               	movf	INT2_setinterrupthandler@interrupthandler^0,w,c
  5706   004BC8  1005               	iorwf	(INT2_setinterrupthandler@interrupthandler+1)^0,w,c
  5707   004BCA  A4D8               	btfss	status,2,c
  5708   004BCC  EFEA  F025         	goto	u10051
  5709   004BD0  EFEC  F025         	goto	u10050
  5710   004BD4                     u10051:
  5711   004BD4  EFEE  F025         	goto	l9584
  5712   004BD8                     u10050:
  5713   004BD8                     
  5714                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 450:     }
  5715   004BD8  EFF2  F025         	goto	l1039
  5716   004BDC                     l9584:
  5717                           
  5718                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 452:         Int2_interrupthandler = in
      +                          terrupthandler;
  5719   004BDC  C004  F0AA         	movff	INT2_setinterrupthandler@interrupthandler,_Int2_interrupthandler
  5720   004BE0  C005  F0AB         	movff	INT2_setinterrupthandler@interrupthandler+1,_Int2_interrupthandler+1
  5721   004BE4                     l1039:
  5722   004BE4  0012               	return		;funcret
  5723   004BE6                     __end_of_INT2_setinterrupthandler:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function _INT1_setinterrupthandler *****************
  5727 ;; Defined at:
  5728 ;;		line 432 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  interrupthan    2    3[COMRAM] PTR FTN()void 
  5731 ;;		 -> int1_interrupt(1), into_interrupt(1), 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  ret             1    0        unsigned char 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      unsigned char 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;Total ram usage:        2 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; Hardware stack levels required when called: 3
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_interrupt_intx_sethandler
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text33
  5758   004BE6                     __ptext33:
  5759                           	callstack 0
  5760   004BE6                     _INT1_setinterrupthandler:
  5761                           	callstack 24
  5762   004BE6                     
  5763                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 434:     if(((void*)0) == interrupthand
      +                          ler){
  5764   004BE6  5004               	movf	INT1_setinterrupthandler@interrupthandler^0,w,c
  5765   004BE8  1005               	iorwf	(INT1_setinterrupthandler@interrupthandler+1)^0,w,c
  5766   004BEA  A4D8               	btfss	status,2,c
  5767   004BEC  EFFA  F025         	goto	u10041
  5768   004BF0  EFFC  F025         	goto	u10040
  5769   004BF4                     u10041:
  5770   004BF4  EFFE  F025         	goto	l9576
  5771   004BF8                     u10040:
  5772   004BF8                     
  5773                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 436:     }
  5774   004BF8  EF02  F026         	goto	l1034
  5775   004BFC                     l9576:
  5776                           
  5777                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 438:         Int1_interrupthandler = in
      +                          terrupthandler;
  5778   004BFC  C004  F0AC         	movff	INT1_setinterrupthandler@interrupthandler,_Int1_interrupthandler
  5779   004C00  C005  F0AD         	movff	INT1_setinterrupthandler@interrupthandler+1,_Int1_interrupthandler+1
  5780   004C04                     l1034:
  5781   004C04  0012               	return		;funcret
  5782   004C06                     __end_of_INT1_setinterrupthandler:
  5783                           	callstack 0
  5784                           
  5785 ;; *************** function _INT0_setinterrupthandler *****************
  5786 ;; Defined at:
  5787 ;;		line 418 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  interrupthan    2    3[COMRAM] PTR FTN()void 
  5790 ;;		 -> int1_interrupt(1), into_interrupt(1), 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  ret             1    0        unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      unsigned char 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;Total ram usage:        2 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; Hardware stack levels required when called: 3
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_interrupt_intx_sethandler
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text34
  5817   004C06                     __ptext34:
  5818                           	callstack 0
  5819   004C06                     _INT0_setinterrupthandler:
  5820                           	callstack 24
  5821   004C06                     
  5822                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 420:     if(((void*)0) == interrupthand
      +                          ler){
  5823   004C06  5004               	movf	INT0_setinterrupthandler@interrupthandler^0,w,c
  5824   004C08  1005               	iorwf	(INT0_setinterrupthandler@interrupthandler+1)^0,w,c
  5825   004C0A  A4D8               	btfss	status,2,c
  5826   004C0C  EF0A  F026         	goto	u10031
  5827   004C10  EF0C  F026         	goto	u10030
  5828   004C14                     u10031:
  5829   004C14  EF0E  F026         	goto	l9568
  5830   004C18                     u10030:
  5831   004C18                     
  5832                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 422:     }
  5833   004C18  EF12  F026         	goto	l1029
  5834   004C1C                     l9568:
  5835                           
  5836                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 424:         Int0_interrupthandler = in
      +                          terrupthandler;
  5837   004C1C  C004  F0AE         	movff	INT0_setinterrupthandler@interrupthandler,_Int0_interrupthandler
  5838   004C20  C005  F0AF         	movff	INT0_setinterrupthandler@interrupthandler+1,_Int0_interrupthandler+1
  5839   004C24                     l1029:
  5840   004C24  0012               	return		;funcret
  5841   004C26                     __end_of_INT0_setinterrupthandler:
  5842                           	callstack 0
  5843                           
  5844 ;; *************** function _interrupt_intx_pin_inti *****************
  5845 ;; Defined at:
  5846 ;;		line 367 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  INTERRUPT_IN    2   16[COMRAM] PTR const struct .
  5849 ;;		 -> INT_1(6), INT_0(6), 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  ret             1   18[COMRAM] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      unsigned char 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;Total ram usage:        3 bytes
  5866 ;; Hardware stack levels used: 1
  5867 ;; Hardware stack levels required when called: 5
  5868 ;; This function calls:
  5869 ;;		_GPIO_pIN_INTIALIZE
  5870 ;; This function is called by:
  5871 ;;		_Interrupt_Intx_Inti
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text35
  5876   004A8A                     __ptext35:
  5877                           	callstack 0
  5878   004A8A                     _interrupt_intx_pin_inti:
  5879                           	callstack 23
  5880   004A8A                     
  5881                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 369:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  5882   004A8A  5011               	movf	interrupt_intx_pin_inti@INTERRUPT_INTX^0,w,c
  5883   004A8C  1012               	iorwf	(interrupt_intx_pin_inti@INTERRUPT_INTX+1)^0,w,c
  5884   004A8E  A4D8               	btfss	status,2,c
  5885   004A90  EF4C  F025         	goto	u11091
  5886   004A94  EF4E  F025         	goto	u11090
  5887   004A98                     u11091:
  5888   004A98  EF52  F025         	goto	l10246
  5889   004A9C                     u11090:
  5890   004A9C                     
  5891                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 370:         ret =(Std_ReturnType)0x00;
  5892   004A9C  0E00               	movlw	0
  5893   004A9E  6E13               	movwf	interrupt_intx_pin_inti@ret^0,c
  5894                           
  5895                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 371:     }
  5896   004AA0  EF5B  F025         	goto	l10248
  5897   004AA4                     l10246:
  5898                           
  5899                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 373:     {;MKAL_layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 374:         ret =GPIO_pIN_INTIALIZE(&(INTERRUPT_INTX->pin_config));
  5900   004AA4  0E02               	movlw	2
  5901   004AA6  2411               	addwf	interrupt_intx_pin_inti@INTERRUPT_INTX^0,w,c
  5902   004AA8  6E0D               	movwf	GPIO_pIN_INTIALIZE@config_pin^0,c
  5903   004AAA  0E00               	movlw	0
  5904   004AAC  2012               	addwfc	(interrupt_intx_pin_inti@INTERRUPT_INTX+1)^0,w,c
  5905   004AAE  6E0E               	movwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,c
  5906   004AB0  ECA4  F021         	call	_GPIO_pIN_INTIALIZE	;wreg free
  5907   004AB4  6E13               	movwf	interrupt_intx_pin_inti@ret^0,c
  5908   004AB6                     l10248:
  5909                           
  5910                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 377:     return ret ;
  5911   004AB6  5013               	movf	interrupt_intx_pin_inti@ret^0,w,c
  5912   004AB8  0012               	return		;funcret
  5913   004ABA                     __end_of_interrupt_intx_pin_inti:
  5914                           	callstack 0
  5915                           
  5916 ;; *************** function _GPIO_pIN_INTIALIZE *****************
  5917 ;; Defined at:
  5918 ;;		line 72 in file "MKAL_layer/gpio/pro_gpio.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  config_pin      2   12[COMRAM] PTR const struct .
  5921 ;;		 -> relay(1), lcd_4bit$lcd_data(4), lcd_4bit(6), motor_2$motor_pin_config(2), 
  5922 ;;		 -> motor_2(2), motor_1$motor_pin_config(2), motor_1(2), ccp1_(10), 
  5923 ;;		 -> INT_1(6), INT_0(6), relay_intialize@pin_config(1), led_intialize@pin_config(1), 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  ret             1   15[COMRAM] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      unsigned char 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;Total ram usage:        4 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; Hardware stack levels required when called: 4
  5942 ;; This function calls:
  5943 ;;		_GPIO_pIN_DIRECTION_INTIALIZE
  5944 ;;		_GPIO_pIN_WRITE_LOGIC
  5945 ;; This function is called by:
  5946 ;;		_lcd_4bit_intialize
  5947 ;;		_motor_intialize
  5948 ;;		_led_intialize
  5949 ;;		_ccp1_init
  5950 ;;		_interrupt_intx_pin_inti
  5951 ;;		_intitialized_functions
  5952 ;;		_lcd_8bit_intialize
  5953 ;;		_keypad_intialize
  5954 ;;		_relay_intialize
  5955 ;;		_initilized
  5956 ;;		_ccp2_init
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text36
  5961   004348                     __ptext36:
  5962                           	callstack 0
  5963   004348                     _GPIO_pIN_INTIALIZE:
  5964                           	callstack 24
  5965   004348                     
  5966                           ;MKAL_layer/gpio/pro_gpio.c: 75:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  5967   004348  500D               	movf	GPIO_pIN_INTIALIZE@config_pin^0,w,c
  5968   00434A  100E               	iorwf	(GPIO_pIN_INTIALIZE@config_pin+1)^0,w,c
  5969   00434C  B4D8               	btfsc	status,2,c
  5970   00434E  EFAB  F021         	goto	u10011
  5971   004352  EFAD  F021         	goto	u10010
  5972   004356                     u10011:
  5973   004356  EFBE  F021         	goto	l9532
  5974   00435A                     u10010:
  5975   00435A  C00D  FFD9         	movff	GPIO_pIN_INTIALIZE@config_pin,fsr2l
  5976   00435E  C00E  FFDA         	movff	GPIO_pIN_INTIALIZE@config_pin+1,fsr2h
  5977   004362  30DF               	rrcf	223,w,c
  5978   004364  32E8               	rrcf	wreg,f,c
  5979   004366  32E8               	rrcf	wreg,f,c
  5980   004368  0B07               	andlw	7
  5981   00436A  6E0F               	movwf	??_GPIO_pIN_INTIALIZE^0,c
  5982   00436C  0E07               	movlw	7
  5983   00436E  640F               	cpfsgt	??_GPIO_pIN_INTIALIZE^0,c
  5984   004370  EFBC  F021         	goto	u10021
  5985   004374  EFBE  F021         	goto	u10020
  5986   004378                     u10021:
  5987   004378  EFC2  F021         	goto	l9534
  5988   00437C                     u10020:
  5989   00437C                     l9532:
  5990                           
  5991                           ;MKAL_layer/gpio/pro_gpio.c: 76:         ret =(Std_ReturnType)0x00;
  5992   00437C  0E00               	movlw	0
  5993   00437E  6E10               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  5994                           
  5995                           ;MKAL_layer/gpio/pro_gpio.c: 77:     }
  5996   004380  EFD8  F021         	goto	l9536
  5997   004384                     l9534:
  5998                           
  5999                           ;MKAL_layer/gpio/pro_gpio.c: 79:         ret =GPIO_pIN_DIRECTION_INTIALIZE(config_pin);
  6000   004384  C00D  F004         	movff	GPIO_pIN_INTIALIZE@config_pin,GPIO_pIN_DIRECTION_INTIALIZE@config_pin
  6001   004388  C00E  F005         	movff	GPIO_pIN_INTIALIZE@config_pin+1,GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1
  6002   00438C  EC54  F017         	call	_GPIO_pIN_DIRECTION_INTIALIZE	;wreg free
  6003   004390  6E10               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  6004                           
  6005                           ;MKAL_layer/gpio/pro_gpio.c: 80:         ret =GPIO_pIN_WRITE_LOGIC(config_pin,config_pin
      +                          ->logic);
  6006   004392  C00D  F004         	movff	GPIO_pIN_INTIALIZE@config_pin,GPIO_pIN_WRITE_LOGIC@config_pin
  6007   004396  C00E  F005         	movff	GPIO_pIN_INTIALIZE@config_pin+1,GPIO_pIN_WRITE_LOGIC@config_pin+1
  6008   00439A  C00D  FFD9         	movff	GPIO_pIN_INTIALIZE@config_pin,fsr2l
  6009   00439E  C00E  FFDA         	movff	GPIO_pIN_INTIALIZE@config_pin+1,fsr2h
  6010   0043A2  0E00               	movlw	0
  6011   0043A4  BEDF               	btfsc	indf2,7,c
  6012   0043A6  0E01               	movlw	1
  6013   0043A8  6E06               	movwf	GPIO_pIN_WRITE_LOGIC@logic^0,c
  6014   0043AA  EC1B  F019         	call	_GPIO_pIN_WRITE_LOGIC	;wreg free
  6015   0043AE  6E10               	movwf	GPIO_pIN_INTIALIZE@ret^0,c
  6016   0043B0                     l9536:
  6017                           
  6018                           ;MKAL_layer/gpio/pro_gpio.c: 82:     return ret;
  6019   0043B0  5010               	movf	GPIO_pIN_INTIALIZE@ret^0,w,c
  6020   0043B2  0012               	return		;funcret
  6021   0043B4                     __end_of_GPIO_pIN_INTIALIZE:
  6022                           	callstack 0
  6023                           
  6024 ;; *************** function _GPIO_pIN_WRITE_LOGIC *****************
  6025 ;; Defined at:
  6026 ;;		line 50 in file "MKAL_layer/gpio/pro_gpio.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  config_pin      2    3[COMRAM] PTR const struct .
  6029 ;;		 -> relay(1), lcd_4bit$lcd_data(4), lcd_4bit(6), motor_2$motor_pin_config(2), 
  6030 ;;		 -> motor_2(2), motor_1$motor_pin_config(2), motor_1(2), ccp1_(10), 
  6031 ;;		 -> INT_1(6), INT_0(6), relay_turn_off@pin_config(1), relay_turn_on@pin_config(1), 
  6032 ;;		 -> relay_intialize@pin_config(1), led_turn_off@pin_config(1), led_turn_on@pin_config(1), led_intialize@pin_config(1
      +), 
  6033 ;;  logic           1    5[COMRAM] enum E2980
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  ret             1   11[COMRAM] unsigned char 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      unsigned char 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        9 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 3
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_lcd_4bit_send_command
  6056 ;;		_lcd_4bit_send_char_data
  6057 ;;		_lcd_send_4bits
  6058 ;;		_lcd_4bit_send_enable_signal
  6059 ;;		_morot_turn_right
  6060 ;;		_morot_turn_left
  6061 ;;		_morot_stop
  6062 ;;		_led_turn_on
  6063 ;;		_led_turn_off
  6064 ;;		_GPIO_pIN_INTIALIZE
  6065 ;;		_main
  6066 ;;		_lcd_8bit_send_command
  6067 ;;		_lcd_8bit_send_char_data
  6068 ;;		_lcd_8bit_send_enable_signal
  6069 ;;		_keypad_get_value
  6070 ;;		_relay_turn_on
  6071 ;;		_relay_turn_off
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text37
  6076   003236                     __ptext37:
  6077                           	callstack 0
  6078   003236                     _GPIO_pIN_WRITE_LOGIC:
  6079                           	callstack 26
  6080   003236                     
  6081                           ;MKAL_layer/gpio/pro_gpio.c: 50: Std_ReturnType GPIO_pIN_WRITE_LOGIC(const pin_config_t 
      +                          *config_pin ,logic_t logic);MKAL_layer/gpio/pro_gpio.c: 51: {;MKAL_layer/gpio/pro_gpio.c
      +                          : 52:     Std_ReturnType ret =(Std_ReturnType)0x01;
  6082   003236  0E01               	movlw	1
  6083   003238  6E0C               	movwf	GPIO_pIN_WRITE_LOGIC@ret^0,c
  6084   00323A                     
  6085                           ;MKAL_layer/gpio/pro_gpio.c: 53:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  6086   00323A  5004               	movf	GPIO_pIN_WRITE_LOGIC@config_pin^0,w,c
  6087   00323C  1005               	iorwf	(GPIO_pIN_WRITE_LOGIC@config_pin+1)^0,w,c
  6088   00323E  B4D8               	btfsc	status,2,c
  6089   003240  EF24  F019         	goto	u9801
  6090   003244  EF26  F019         	goto	u9800
  6091   003248                     u9801:
  6092   003248  EF37  F019         	goto	l9410
  6093   00324C                     u9800:
  6094   00324C  C004  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  6095   003250  C005  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  6096   003254  30DF               	rrcf	223,w,c
  6097   003256  32E8               	rrcf	wreg,f,c
  6098   003258  32E8               	rrcf	wreg,f,c
  6099   00325A  0B07               	andlw	7
  6100   00325C  6E07               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  6101   00325E  0E07               	movlw	7
  6102   003260  6407               	cpfsgt	??_GPIO_pIN_WRITE_LOGIC^0,c
  6103   003262  EF35  F019         	goto	u9811
  6104   003266  EF37  F019         	goto	u9810
  6105   00326A                     u9811:
  6106   00326A  EF92  F019         	goto	l9418
  6107   00326E                     u9810:
  6108   00326E                     l9410:
  6109                           
  6110                           ;MKAL_layer/gpio/pro_gpio.c: 54:         ret =(Std_ReturnType)0x00;
  6111   00326E  0E00               	movlw	0
  6112   003270  6E0C               	movwf	GPIO_pIN_WRITE_LOGIC@ret^0,c
  6113                           
  6114                           ;MKAL_layer/gpio/pro_gpio.c: 55:     }
  6115   003272  EFA7  F019         	goto	l9420
  6116   003276                     l9412:
  6117                           
  6118                           ;MKAL_layer/gpio/pro_gpio.c: 59:                 (*lat_regisrers[config_pin->port] &= ~(
      +                          (uint8)1 << config_pin->pin));
  6119   003276  C004  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  6120   00327A  C005  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  6121   00327E  30DF               	rrcf	223,w,c
  6122   003280  32E8               	rrcf	wreg,f,c
  6123   003282  32E8               	rrcf	wreg,f,c
  6124   003284  0B07               	andlw	7
  6125   003286  6E07               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  6126   003288  0E01               	movlw	1
  6127   00328A  6E08               	movwf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  6128   00328C  2A07               	incf	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  6129   00328E  EF4B  F019         	goto	u9824
  6130   003292                     u9825:
  6131   003292  90D8               	bcf	status,0,c
  6132   003294  3608               	rlcf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
  6133   003296                     u9824:
  6134   003296  2E07               	decfsz	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  6135   003298  EF49  F019         	goto	u9825
  6136   00329C  5008               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  6137   00329E  0AFF               	xorlw	255
  6138   0032A0  6E09               	movwf	(??_GPIO_pIN_WRITE_LOGIC+2)^0,c
  6139   0032A2  C004  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  6140   0032A6  C005  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  6141   0032AA  50DF               	movf	223,w,c
  6142   0032AC  0B07               	andlw	7
  6143   0032AE  0D02               	mullw	2
  6144   0032B0  50F3               	movf	243,w,c
  6145   0032B2  0FD7               	addlw	low _lat_regisrers
  6146   0032B4  6ED9               	movwf	fsr2l,c
  6147   0032B6  6ADA               	clrf	fsr2h,c
  6148   0032B8  CFDE F00A          	movff	postinc2,??_GPIO_pIN_WRITE_LOGIC+3
  6149   0032BC  CFDD F00B          	movff	postdec2,??_GPIO_pIN_WRITE_LOGIC+4
  6150   0032C0  C00A  FFD9         	movff	??_GPIO_pIN_WRITE_LOGIC+3,fsr2l
  6151   0032C4  C00B  FFDA         	movff	??_GPIO_pIN_WRITE_LOGIC+4,fsr2h
  6152   0032C8  5009               	movf	(??_GPIO_pIN_WRITE_LOGIC+2)^0,w,c
  6153   0032CA  16DF               	andwf	indf2,f,c
  6154                           
  6155                           ;MKAL_layer/gpio/pro_gpio.c: 60:                 break;
  6156   0032CC  EFA7  F019         	goto	l9420
  6157   0032D0                     l9414:
  6158                           
  6159                           ;MKAL_layer/gpio/pro_gpio.c: 62:                 (*lat_regisrers[config_pin->port] |= ((
      +                          uint8)1 << config_pin->pin));
  6160   0032D0  C004  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  6161   0032D4  C005  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  6162   0032D8  30DF               	rrcf	223,w,c
  6163   0032DA  32E8               	rrcf	wreg,f,c
  6164   0032DC  32E8               	rrcf	wreg,f,c
  6165   0032DE  0B07               	andlw	7
  6166   0032E0  6E07               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  6167   0032E2  0E01               	movlw	1
  6168   0032E4  6E08               	movwf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  6169   0032E6  2A07               	incf	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  6170   0032E8  EF78  F019         	goto	u9834
  6171   0032EC                     u9835:
  6172   0032EC  90D8               	bcf	status,0,c
  6173   0032EE  3608               	rlcf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,f,c
  6174   0032F0                     u9834:
  6175   0032F0  2E07               	decfsz	??_GPIO_pIN_WRITE_LOGIC^0,f,c
  6176   0032F2  EF76  F019         	goto	u9835
  6177   0032F6  C004  FFD9         	movff	GPIO_pIN_WRITE_LOGIC@config_pin,fsr2l
  6178   0032FA  C005  FFDA         	movff	GPIO_pIN_WRITE_LOGIC@config_pin+1,fsr2h
  6179   0032FE  50DF               	movf	223,w,c
  6180   003300  0B07               	andlw	7
  6181   003302  0D02               	mullw	2
  6182   003304  50F3               	movf	243,w,c
  6183   003306  0FD7               	addlw	low _lat_regisrers
  6184   003308  6ED9               	movwf	fsr2l,c
  6185   00330A  6ADA               	clrf	fsr2h,c
  6186   00330C  CFDE F009          	movff	postinc2,??_GPIO_pIN_WRITE_LOGIC+2
  6187   003310  CFDD F00A          	movff	postdec2,??_GPIO_pIN_WRITE_LOGIC+3
  6188   003314  C009  FFD9         	movff	??_GPIO_pIN_WRITE_LOGIC+2,fsr2l
  6189   003318  C00A  FFDA         	movff	??_GPIO_pIN_WRITE_LOGIC+3,fsr2h
  6190   00331C  5008               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  6191   00331E  12DF               	iorwf	indf2,f,c
  6192                           
  6193                           ;MKAL_layer/gpio/pro_gpio.c: 63:                 break;
  6194   003320  EFA7  F019         	goto	l9420
  6195   003324                     l9418:
  6196   003324  5006               	movf	GPIO_pIN_WRITE_LOGIC@logic^0,w,c
  6197   003326  6E07               	movwf	??_GPIO_pIN_WRITE_LOGIC^0,c
  6198   003328  6A08               	clrf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,c
  6199                           
  6200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6201                           ; Switch size 1, requested type "simple"
  6202                           ; Number of cases is 1, Range of values is 0 to 0
  6203                           ; switch strategies available:
  6204                           ; Name         Instructions Cycles
  6205                           ; simple_byte            4     3 (average)
  6206                           ;	Chosen strategy is simple_byte
  6207   00332A  5008               	movf	(??_GPIO_pIN_WRITE_LOGIC+1)^0,w,c
  6208   00332C  0A00               	xorlw	0	; case 0
  6209   00332E  B4D8               	btfsc	status,2,c
  6210   003330  EF9C  F019         	goto	l12008
  6211   003334  EF37  F019         	goto	l9410
  6212   003338                     l12008:
  6213                           
  6214                           ; Switch size 1, requested type "simple"
  6215                           ; Number of cases is 2, Range of values is 0 to 1
  6216                           ; switch strategies available:
  6217                           ; Name         Instructions Cycles
  6218                           ; simple_byte            7     4 (average)
  6219                           ;	Chosen strategy is simple_byte
  6220   003338  5007               	movf	??_GPIO_pIN_WRITE_LOGIC^0,w,c
  6221   00333A  0A00               	xorlw	0	; case 0
  6222   00333C  B4D8               	btfsc	status,2,c
  6223   00333E  EF3B  F019         	goto	l9412
  6224   003342  0A01               	xorlw	1	; case 1
  6225   003344  B4D8               	btfsc	status,2,c
  6226   003346  EF68  F019         	goto	l9414
  6227   00334A  EF37  F019         	goto	l9410
  6228   00334E                     l9420:
  6229                           
  6230                           ;MKAL_layer/gpio/pro_gpio.c: 67:     return ret;
  6231   00334E  500C               	movf	GPIO_pIN_WRITE_LOGIC@ret^0,w,c
  6232   003350  0012               	return		;funcret
  6233   003352                     __end_of_GPIO_pIN_WRITE_LOGIC:
  6234                           	callstack 0
  6235                           
  6236 ;; *************** function _GPIO_pIN_DIRECTION_INTIALIZE *****************
  6237 ;; Defined at:
  6238 ;;		line 14 in file "MKAL_layer/gpio/pro_gpio.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  config_pin      2    3[COMRAM] PTR const struct .
  6241 ;;		 -> relay(1), lcd_4bit$lcd_data(4), lcd_4bit(6), motor_2$motor_pin_config(2), 
  6242 ;;		 -> motor_2(2), motor_1$motor_pin_config(2), motor_1(2), ccp1_(10), 
  6243 ;;		 -> INT_1(6), INT_0(6), relay_intialize@pin_config(1), led_intialize@pin_config(1), 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  ret             1   10[COMRAM] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      unsigned char 
  6248 ;; Registers used:
  6249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;Total ram usage:        8 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 3
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_GPIO_pIN_INTIALIZE
  6266 ;;		_button_intialize
  6267 ;;		_keypad_intialize
  6268 ;;		_Interrupt_Pbx_Inti
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text38
  6273   002EA8                     __ptext38:
  6274                           	callstack 0
  6275   002EA8                     _GPIO_pIN_DIRECTION_INTIALIZE:
  6276                           	callstack 24
  6277   002EA8                     
  6278                           ;MKAL_layer/gpio/pro_gpio.c: 14: Std_ReturnType GPIO_pIN_DIRECTION_INTIALIZE(const pin_c
      +                          onfig_t *config_pin);MKAL_layer/gpio/pro_gpio.c: 15: {;MKAL_layer/gpio/pro_gpio.c: 16:  
      +                             Std_ReturnType ret =(Std_ReturnType)0x01;
  6279   002EA8  0E01               	movlw	1
  6280   002EAA  6E0B               	movwf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,c
  6281   002EAC                     
  6282                           ;MKAL_layer/gpio/pro_gpio.c: 17:     if ((((void*)0) == config_pin) || (config_pin->pin 
      +                          > 8 -1)){
  6283   002EAC  5004               	movf	GPIO_pIN_DIRECTION_INTIALIZE@config_pin^0,w,c
  6284   002EAE  1005               	iorwf	(GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1)^0,w,c
  6285   002EB0  B4D8               	btfsc	status,2,c
  6286   002EB2  EF5D  F017         	goto	u9741
  6287   002EB6  EF5F  F017         	goto	u9740
  6288   002EBA                     u9741:
  6289   002EBA  EF70  F017         	goto	l9386
  6290   002EBE                     u9740:
  6291   002EBE  C004  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  6292   002EC2  C005  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  6293   002EC6  30DF               	rrcf	223,w,c
  6294   002EC8  32E8               	rrcf	wreg,f,c
  6295   002ECA  32E8               	rrcf	wreg,f,c
  6296   002ECC  0B07               	andlw	7
  6297   002ECE  6E06               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  6298   002ED0  0E07               	movlw	7
  6299   002ED2  6406               	cpfsgt	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  6300   002ED4  EF6E  F017         	goto	u9751
  6301   002ED8  EF70  F017         	goto	u9750
  6302   002EDC                     u9751:
  6303   002EDC  EFCB  F017         	goto	l9394
  6304   002EE0                     u9750:
  6305   002EE0                     l9386:
  6306                           
  6307                           ;MKAL_layer/gpio/pro_gpio.c: 18:         ret =(Std_ReturnType)0x00;
  6308   002EE0  0E00               	movlw	0
  6309   002EE2  6E0B               	movwf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,c
  6310                           
  6311                           ;MKAL_layer/gpio/pro_gpio.c: 19:     }
  6312   002EE4  EFEC  F017         	goto	l9396
  6313   002EE8                     l9388:
  6314                           
  6315                           ;MKAL_layer/gpio/pro_gpio.c: 23:                 (*tris_regisrers[config_pin->port] &= ~
      +                          ((uint8)1 << config_pin->pin));
  6316   002EE8  C004  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  6317   002EEC  C005  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  6318   002EF0  30DF               	rrcf	223,w,c
  6319   002EF2  32E8               	rrcf	wreg,f,c
  6320   002EF4  32E8               	rrcf	wreg,f,c
  6321   002EF6  0B07               	andlw	7
  6322   002EF8  6E06               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  6323   002EFA  0E01               	movlw	1
  6324   002EFC  6E07               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  6325   002EFE  2A06               	incf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  6326   002F00  EF84  F017         	goto	u9764
  6327   002F04                     u9765:
  6328   002F04  90D8               	bcf	status,0,c
  6329   002F06  3607               	rlcf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,f,c
  6330   002F08                     u9764:
  6331   002F08  2E06               	decfsz	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  6332   002F0A  EF82  F017         	goto	u9765
  6333   002F0E  5007               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  6334   002F10  0AFF               	xorlw	255
  6335   002F12  6E08               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,c
  6336   002F14  C004  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  6337   002F18  C005  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  6338   002F1C  50DF               	movf	223,w,c
  6339   002F1E  0B07               	andlw	7
  6340   002F20  0D02               	mullw	2
  6341   002F22  50F3               	movf	243,w,c
  6342   002F24  0FE1               	addlw	low _tris_regisrers
  6343   002F26  6ED9               	movwf	fsr2l,c
  6344   002F28  6ADA               	clrf	fsr2h,c
  6345   002F2A  CFDE F009          	movff	postinc2,??_GPIO_pIN_DIRECTION_INTIALIZE+3
  6346   002F2E  CFDD F00A          	movff	postdec2,??_GPIO_pIN_DIRECTION_INTIALIZE+4
  6347   002F32  C009  FFD9         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+3,fsr2l
  6348   002F36  C00A  FFDA         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+4,fsr2h
  6349   002F3A  5008               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+2)^0,w,c
  6350   002F3C  16DF               	andwf	indf2,f,c
  6351                           
  6352                           ;MKAL_layer/gpio/pro_gpio.c: 24:                 break;
  6353   002F3E  EFEC  F017         	goto	l9396
  6354   002F42                     l9390:
  6355                           
  6356                           ;MKAL_layer/gpio/pro_gpio.c: 26:                 (*tris_regisrers[config_pin->port] |= (
      +                          (uint8)1 << config_pin->pin));
  6357   002F42  C004  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  6358   002F46  C005  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  6359   002F4A  30DF               	rrcf	223,w,c
  6360   002F4C  32E8               	rrcf	wreg,f,c
  6361   002F4E  32E8               	rrcf	wreg,f,c
  6362   002F50  0B07               	andlw	7
  6363   002F52  6E06               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  6364   002F54  0E01               	movlw	1
  6365   002F56  6E07               	movwf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  6366   002F58  2A06               	incf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  6367   002F5A  EFB1  F017         	goto	u9774
  6368   002F5E                     u9775:
  6369   002F5E  90D8               	bcf	status,0,c
  6370   002F60  3607               	rlcf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,f,c
  6371   002F62                     u9774:
  6372   002F62  2E06               	decfsz	??_GPIO_pIN_DIRECTION_INTIALIZE^0,f,c
  6373   002F64  EFAF  F017         	goto	u9775
  6374   002F68  C004  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  6375   002F6C  C005  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  6376   002F70  50DF               	movf	223,w,c
  6377   002F72  0B07               	andlw	7
  6378   002F74  0D02               	mullw	2
  6379   002F76  50F3               	movf	243,w,c
  6380   002F78  0FE1               	addlw	low _tris_regisrers
  6381   002F7A  6ED9               	movwf	fsr2l,c
  6382   002F7C  6ADA               	clrf	fsr2h,c
  6383   002F7E  CFDE F008          	movff	postinc2,??_GPIO_pIN_DIRECTION_INTIALIZE+2
  6384   002F82  CFDD F009          	movff	postdec2,??_GPIO_pIN_DIRECTION_INTIALIZE+3
  6385   002F86  C008  FFD9         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+2,fsr2l
  6386   002F8A  C009  FFDA         	movff	??_GPIO_pIN_DIRECTION_INTIALIZE+3,fsr2h
  6387   002F8E  5007               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  6388   002F90  12DF               	iorwf	indf2,f,c
  6389                           
  6390                           ;MKAL_layer/gpio/pro_gpio.c: 27:                 break;
  6391   002F92  EFEC  F017         	goto	l9396
  6392   002F96                     l9394:
  6393   002F96  C004  FFD9         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin,fsr2l
  6394   002F9A  C005  FFDA         	movff	GPIO_pIN_DIRECTION_INTIALIZE@config_pin+1,fsr2h
  6395   002F9E  BCDF               	btfsc	indf2,6,c
  6396   002FA0  EFD4  F017         	goto	u9781
  6397   002FA4  EFD7  F017         	goto	u9780
  6398   002FA8                     u9781:
  6399   002FA8  0E01               	movlw	1
  6400   002FAA  EFD8  F017         	goto	u9790
  6401   002FAE                     u9780:
  6402   002FAE  0E00               	movlw	0
  6403   002FB0                     u9790:
  6404   002FB0  6E06               	movwf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,c
  6405   002FB2  6A07               	clrf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,c
  6406                           
  6407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6408                           ; Switch size 1, requested type "simple"
  6409                           ; Number of cases is 1, Range of values is 0 to 0
  6410                           ; switch strategies available:
  6411                           ; Name         Instructions Cycles
  6412                           ; simple_byte            4     3 (average)
  6413                           ;	Chosen strategy is simple_byte
  6414   002FB4  5007               	movf	(??_GPIO_pIN_DIRECTION_INTIALIZE+1)^0,w,c
  6415   002FB6  0A00               	xorlw	0	; case 0
  6416   002FB8  B4D8               	btfsc	status,2,c
  6417   002FBA  EFE1  F017         	goto	l12010
  6418   002FBE  EF70  F017         	goto	l9386
  6419   002FC2                     l12010:
  6420                           
  6421                           ; Switch size 1, requested type "simple"
  6422                           ; Number of cases is 2, Range of values is 0 to 1
  6423                           ; switch strategies available:
  6424                           ; Name         Instructions Cycles
  6425                           ; simple_byte            7     4 (average)
  6426                           ;	Chosen strategy is simple_byte
  6427   002FC2  5006               	movf	??_GPIO_pIN_DIRECTION_INTIALIZE^0,w,c
  6428   002FC4  0A00               	xorlw	0	; case 0
  6429   002FC6  B4D8               	btfsc	status,2,c
  6430   002FC8  EF74  F017         	goto	l9388
  6431   002FCC  0A01               	xorlw	1	; case 1
  6432   002FCE  B4D8               	btfsc	status,2,c
  6433   002FD0  EFA1  F017         	goto	l9390
  6434   002FD4  EF70  F017         	goto	l9386
  6435   002FD8                     l9396:
  6436                           
  6437                           ;MKAL_layer/gpio/pro_gpio.c: 31:     return ret;
  6438   002FD8  500B               	movf	GPIO_pIN_DIRECTION_INTIALIZE@ret^0,w,c
  6439   002FDA  0012               	return		;funcret
  6440   002FDC                     __end_of_GPIO_pIN_DIRECTION_INTIALIZE:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function _interrupt_intx_enable *****************
  6444 ;; Defined at:
  6445 ;;		line 172 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  INTERRUPT_IN    2    3[COMRAM] PTR const struct .
  6448 ;;		 -> INT_1(6), INT_0(6), 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  ret             1    7[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      unsigned char 
  6453 ;; Registers used:
  6454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:        5 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 3
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_Interrupt_Intx_Inti
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text39
  6475   004024                     __ptext39:
  6476                           	callstack 0
  6477   004024                     _interrupt_intx_enable:
  6478                           	callstack 25
  6479   004024                     
  6480                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 174:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  6481   004024  5004               	movf	interrupt_intx_enable@INTERRUPT_INTX^0,w,c
  6482   004026  1005               	iorwf	(interrupt_intx_enable@INTERRUPT_INTX+1)^0,w,c
  6483   004028  A4D8               	btfss	status,2,c
  6484   00402A  EF19  F020         	goto	u11111
  6485   00402E  EF1B  F020         	goto	u11110
  6486   004032                     u11111:
  6487   004032  EF30  F020         	goto	l10290
  6488   004036                     u11110:
  6489   004036                     l10280:
  6490                           
  6491                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 175:         ret =(Std_ReturnType)0x00;
  6492   004036  0E00               	movlw	0
  6493   004038  6E08               	movwf	interrupt_intx_enable@ret^0,c
  6494                           
  6495                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 176:     }
  6496   00403A  EF4F  F020         	goto	l10292
  6497   00403E                     l969:
  6498                           
  6499                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 184:                 (INTCONbits.GIE =1
      +                          );
  6500   00403E  8EF2               	bsf	242,7,c	;volatile
  6501                           
  6502                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 185:                 (INTCONbits.PEIE =
      +                          1);
  6503   004040  8CF2               	bsf	242,6,c	;volatile
  6504                           
  6505                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 187:                 (INTCONbits.INT0IE
      +                           = 1);
  6506   004042  88F2               	bsf	242,4,c	;volatile
  6507   004044                     l10282:
  6508                           
  6509                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 188:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  6510   004044  0E01               	movlw	1
  6511   004046  6E08               	movwf	interrupt_intx_enable@ret^0,c
  6512                           
  6513                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 189:                 break;
  6514   004048  EF4F  F020         	goto	l10292
  6515   00404C                     l971:
  6516                           
  6517                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 203:                 (INTCONbits.GIE =1
      +                          );
  6518   00404C  8EF2               	bsf	242,7,c	;volatile
  6519                           
  6520                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 204:                 (INTCONbits.PEIE =
      +                          1);
  6521   00404E  8CF2               	bsf	242,6,c	;volatile
  6522                           
  6523                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 206:                 (INTCON3bits.INT1I
      +                          E = 1);
  6524   004050  86F0               	bsf	240,3,c	;volatile
  6525   004052  EF22  F020         	goto	l10282
  6526   004056                     l972:
  6527                           
  6528                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 223:                 (INTCONbits.GIE =1
      +                          );
  6529   004056  8EF2               	bsf	242,7,c	;volatile
  6530                           
  6531                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 224:                 (INTCONbits.PEIE =
      +                          1);
  6532   004058  8CF2               	bsf	242,6,c	;volatile
  6533                           
  6534                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 226:                 (INTCON3bits.INT2I
      +                          E = 1);
  6535   00405A  88F0               	bsf	240,4,c	;volatile
  6536   00405C  EF22  F020         	goto	l10282
  6537   004060                     l10290:
  6538   004060  EE20 F004          	lfsr	2,4
  6539   004064  5004               	movf	interrupt_intx_enable@INTERRUPT_INTX^0,w,c
  6540   004066  26D9               	addwf	fsr2l,f,c
  6541   004068  5005               	movf	(interrupt_intx_enable@INTERRUPT_INTX+1)^0,w,c
  6542   00406A  22DA               	addwfc	fsr2h,f,c
  6543   00406C  50DF               	movf	indf2,w,c
  6544   00406E  6E06               	movwf	??_interrupt_intx_enable^0,c
  6545   004070  6A07               	clrf	(??_interrupt_intx_enable+1)^0,c
  6546                           
  6547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6548                           ; Switch size 1, requested type "simple"
  6549                           ; Number of cases is 1, Range of values is 0 to 0
  6550                           ; switch strategies available:
  6551                           ; Name         Instructions Cycles
  6552                           ; simple_byte            4     3 (average)
  6553                           ;	Chosen strategy is simple_byte
  6554   004072  5007               	movf	(??_interrupt_intx_enable+1)^0,w,c
  6555   004074  0A00               	xorlw	0	; case 0
  6556   004076  B4D8               	btfsc	status,2,c
  6557   004078  EF40  F020         	goto	l12012
  6558   00407C  EF1B  F020         	goto	l10280
  6559   004080                     l12012:
  6560                           
  6561                           ; Switch size 1, requested type "simple"
  6562                           ; Number of cases is 3, Range of values is 0 to 2
  6563                           ; switch strategies available:
  6564                           ; Name         Instructions Cycles
  6565                           ; simple_byte           10     6 (average)
  6566                           ;	Chosen strategy is simple_byte
  6567   004080  5006               	movf	??_interrupt_intx_enable^0,w,c
  6568   004082  0A00               	xorlw	0	; case 0
  6569   004084  B4D8               	btfsc	status,2,c
  6570   004086  EF1F  F020         	goto	l969
  6571   00408A  0A01               	xorlw	1	; case 1
  6572   00408C  B4D8               	btfsc	status,2,c
  6573   00408E  EF26  F020         	goto	l971
  6574   004092  0A03               	xorlw	3	; case 2
  6575   004094  B4D8               	btfsc	status,2,c
  6576   004096  EF2B  F020         	goto	l972
  6577   00409A  EF1B  F020         	goto	l10280
  6578   00409E                     l10292:
  6579                           
  6580                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 233:     return ret ;
  6581   00409E  5008               	movf	interrupt_intx_enable@ret^0,w,c
  6582   0040A0  0012               	return		;funcret
  6583   0040A2                     __end_of_interrupt_intx_enable:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _interrupt_intx_edge_inti *****************
  6587 ;; Defined at:
  6588 ;;		line 272 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  INTERRUPT_IN    2    3[COMRAM] PTR const struct .
  6591 ;;		 -> INT_1(6), INT_0(6), 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  ret             1    7[COMRAM] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      unsigned char 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;Total ram usage:        5 bytes
  6608 ;; Hardware stack levels used: 1
  6609 ;; Hardware stack levels required when called: 3
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_Interrupt_Intx_Inti
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text40
  6618   00310A                     __ptext40:
  6619                           	callstack 0
  6620   00310A                     _interrupt_intx_edge_inti:
  6621                           	callstack 25
  6622   00310A                     
  6623                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 274:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  6624   00310A  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6625   00310C  1005               	iorwf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6626   00310E  A4D8               	btfss	status,2,c
  6627   003110  EF8C  F018         	goto	u11021
  6628   003114  EF8E  F018         	goto	u11020
  6629   003118                     u11021:
  6630   003118  EFFA  F018         	goto	l10230
  6631   00311C                     u11020:
  6632   00311C                     l10196:
  6633                           
  6634                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 275:         ret =(Std_ReturnType)0x00;
  6635   00311C  0E00               	movlw	0
  6636   00311E  6E08               	movwf	interrupt_intx_edge_inti@ret^0,c
  6637                           
  6638                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 276:     }
  6639   003120  EF19  F019         	goto	l10232
  6640   003124                     l10198:
  6641                           
  6642                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 281:                 if(INTERRUPT_FALLI
      +                          NG_EDGE == INTERRUPT_INTX->edge){
  6643   003124  EE20 F003          	lfsr	2,3
  6644   003128  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6645   00312A  26D9               	addwf	fsr2l,f,c
  6646   00312C  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6647   00312E  22DA               	addwfc	fsr2h,f,c
  6648   003130  50DF               	movf	indf2,w,c
  6649   003132  A4D8               	btfss	status,2,c
  6650   003134  EF9E  F018         	goto	u11031
  6651   003138  EFA0  F018         	goto	u11030
  6652   00313C                     u11031:
  6653   00313C  EFA3  F018         	goto	l10202
  6654   003140                     u11030:
  6655   003140                     
  6656                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 282:                     (INTCON2bits.I
      +                          NTEDG0 = 0);
  6657   003140  9CF1               	bcf	241,6,c	;volatile
  6658                           
  6659                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 283:                 }
  6660   003142  EFB2  F018         	goto	l10206
  6661   003146                     l10202:
  6662   003146  EE20 F003          	lfsr	2,3
  6663   00314A  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6664   00314C  26D9               	addwf	fsr2l,f,c
  6665   00314E  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6666   003150  22DA               	addwfc	fsr2h,f,c
  6667   003152  04DE               	decf	postinc2,w,c
  6668   003154  A4D8               	btfss	status,2,c
  6669   003156  EFAF  F018         	goto	u11041
  6670   00315A  EFB1  F018         	goto	u11040
  6671   00315E                     u11041:
  6672   00315E  EFB2  F018         	goto	l10206
  6673   003162                     u11040:
  6674   003162                     
  6675                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 285:                     (INTCON2bits.I
      +                          NTEDG0 = 1);
  6676   003162  8CF1               	bsf	241,6,c	;volatile
  6677   003164                     l10206:
  6678                           
  6679                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 288:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  6680   003164  0E01               	movlw	1
  6681   003166  6E08               	movwf	interrupt_intx_edge_inti@ret^0,c
  6682                           
  6683                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 289:                 break;
  6684   003168  EF19  F019         	goto	l10232
  6685   00316C                     l10208:
  6686                           
  6687                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 291:                 if(INTERRUPT_FALLI
      +                          NG_EDGE == INTERRUPT_INTX->edge){
  6688   00316C  EE20 F003          	lfsr	2,3
  6689   003170  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6690   003172  26D9               	addwf	fsr2l,f,c
  6691   003174  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6692   003176  22DA               	addwfc	fsr2h,f,c
  6693   003178  50DF               	movf	indf2,w,c
  6694   00317A  A4D8               	btfss	status,2,c
  6695   00317C  EFC2  F018         	goto	u11051
  6696   003180  EFC4  F018         	goto	u11050
  6697   003184                     u11051:
  6698   003184  EFC7  F018         	goto	l10212
  6699   003188                     u11050:
  6700   003188                     
  6701                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 292:                     (INTCON2bits.I
      +                          NTEDG1 = 0);
  6702   003188  9AF1               	bcf	241,5,c	;volatile
  6703                           
  6704                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 293:                 }
  6705   00318A  EFB2  F018         	goto	l10206
  6706   00318E                     l10212:
  6707   00318E  EE20 F003          	lfsr	2,3
  6708   003192  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6709   003194  26D9               	addwf	fsr2l,f,c
  6710   003196  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6711   003198  22DA               	addwfc	fsr2h,f,c
  6712   00319A  04DE               	decf	postinc2,w,c
  6713   00319C  A4D8               	btfss	status,2,c
  6714   00319E  EFD3  F018         	goto	u11061
  6715   0031A2  EFD5  F018         	goto	u11060
  6716   0031A6                     u11061:
  6717   0031A6  EFB2  F018         	goto	l10206
  6718   0031AA                     u11060:
  6719   0031AA                     
  6720                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 295:                     (INTCON2bits.I
      +                          NTEDG1 = 1);
  6721   0031AA  8AF1               	bsf	241,5,c	;volatile
  6722                           
  6723                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 296:                 }
  6724   0031AC  EFB2  F018         	goto	l10206
  6725   0031B0                     l10218:
  6726                           
  6727                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 301:                if(INTERRUPT_FALLIN
      +                          G_EDGE == INTERRUPT_INTX->edge){
  6728   0031B0  EE20 F003          	lfsr	2,3
  6729   0031B4  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6730   0031B6  26D9               	addwf	fsr2l,f,c
  6731   0031B8  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6732   0031BA  22DA               	addwfc	fsr2h,f,c
  6733   0031BC  50DF               	movf	indf2,w,c
  6734   0031BE  A4D8               	btfss	status,2,c
  6735   0031C0  EFE4  F018         	goto	u11071
  6736   0031C4  EFE6  F018         	goto	u11070
  6737   0031C8                     u11071:
  6738   0031C8  EFE9  F018         	goto	l10222
  6739   0031CC                     u11070:
  6740   0031CC                     
  6741                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 302:                     (INTCON2bits.I
      +                          NTEDG2 = 0);
  6742   0031CC  98F1               	bcf	241,4,c	;volatile
  6743                           
  6744                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 303:                 }
  6745   0031CE  EFB2  F018         	goto	l10206
  6746   0031D2                     l10222:
  6747   0031D2  EE20 F003          	lfsr	2,3
  6748   0031D6  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6749   0031D8  26D9               	addwf	fsr2l,f,c
  6750   0031DA  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6751   0031DC  22DA               	addwfc	fsr2h,f,c
  6752   0031DE  04DE               	decf	postinc2,w,c
  6753   0031E0  A4D8               	btfss	status,2,c
  6754   0031E2  EFF5  F018         	goto	u11081
  6755   0031E6  EFF7  F018         	goto	u11080
  6756   0031EA                     u11081:
  6757   0031EA  EFB2  F018         	goto	l10206
  6758   0031EE                     u11080:
  6759   0031EE                     
  6760                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 305:                     (INTCON2bits.I
      +                          NTEDG2 = 1);
  6761   0031EE  88F1               	bsf	241,4,c	;volatile
  6762                           
  6763                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 306:                 }
  6764   0031F0  EFB2  F018         	goto	l10206
  6765   0031F4                     l10230:
  6766   0031F4  EE20 F004          	lfsr	2,4
  6767   0031F8  5004               	movf	interrupt_intx_edge_inti@INTERRUPT_INTX^0,w,c
  6768   0031FA  26D9               	addwf	fsr2l,f,c
  6769   0031FC  5005               	movf	(interrupt_intx_edge_inti@INTERRUPT_INTX+1)^0,w,c
  6770   0031FE  22DA               	addwfc	fsr2h,f,c
  6771   003200  50DF               	movf	indf2,w,c
  6772   003202  6E06               	movwf	??_interrupt_intx_edge_inti^0,c
  6773   003204  6A07               	clrf	(??_interrupt_intx_edge_inti+1)^0,c
  6774                           
  6775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6776                           ; Switch size 1, requested type "simple"
  6777                           ; Number of cases is 1, Range of values is 0 to 0
  6778                           ; switch strategies available:
  6779                           ; Name         Instructions Cycles
  6780                           ; simple_byte            4     3 (average)
  6781                           ;	Chosen strategy is simple_byte
  6782   003206  5007               	movf	(??_interrupt_intx_edge_inti+1)^0,w,c
  6783   003208  0A00               	xorlw	0	; case 0
  6784   00320A  B4D8               	btfsc	status,2,c
  6785   00320C  EF0A  F019         	goto	l12014
  6786   003210  EF8E  F018         	goto	l10196
  6787   003214                     l12014:
  6788                           
  6789                           ; Switch size 1, requested type "simple"
  6790                           ; Number of cases is 3, Range of values is 0 to 2
  6791                           ; switch strategies available:
  6792                           ; Name         Instructions Cycles
  6793                           ; simple_byte           10     6 (average)
  6794                           ;	Chosen strategy is simple_byte
  6795   003214  5006               	movf	??_interrupt_intx_edge_inti^0,w,c
  6796   003216  0A00               	xorlw	0	; case 0
  6797   003218  B4D8               	btfsc	status,2,c
  6798   00321A  EF92  F018         	goto	l10198
  6799   00321E  0A01               	xorlw	1	; case 1
  6800   003220  B4D8               	btfsc	status,2,c
  6801   003222  EFB6  F018         	goto	l10208
  6802   003226  0A03               	xorlw	3	; case 2
  6803   003228  B4D8               	btfsc	status,2,c
  6804   00322A  EFD8  F018         	goto	l10218
  6805   00322E  EF8E  F018         	goto	l10196
  6806   003232                     l10232:
  6807                           
  6808                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 314:     return ret ;
  6809   003232  5008               	movf	interrupt_intx_edge_inti@ret^0,w,c
  6810   003234  0012               	return		;funcret
  6811   003236                     __end_of_interrupt_intx_edge_inti:
  6812                           	callstack 0
  6813                           
  6814 ;; *************** function _interrupt_intx_disable *****************
  6815 ;; Defined at:
  6816 ;;		line 240 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  INTERRUPT_IN    2    3[COMRAM] PTR const struct .
  6819 ;;		 -> INT_1(6), INT_0(6), 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  ret             1    7[COMRAM] unsigned char 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      unsigned char 
  6824 ;; Registers used:
  6825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:        5 bytes
  6836 ;; Hardware stack levels used: 1
  6837 ;; Hardware stack levels required when called: 3
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_Interrupt_Intx_Inti
  6842 ;;		_Interrupt_Intx_Deinti
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text41
  6847   00411C                     __ptext41:
  6848                           	callstack 0
  6849   00411C                     _interrupt_intx_disable:
  6850                           	callstack 25
  6851   00411C                     
  6852                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 242:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  6853   00411C  5004               	movf	interrupt_intx_disable@INTERRUPT_INTX^0,w,c
  6854   00411E  1005               	iorwf	(interrupt_intx_disable@INTERRUPT_INTX+1)^0,w,c
  6855   004120  A4D8               	btfss	status,2,c
  6856   004122  EF95  F020         	goto	u11001
  6857   004126  EF97  F020         	goto	u11000
  6858   00412A                     u11001:
  6859   00412A  EFA6  F020         	goto	l10158
  6860   00412E                     u11000:
  6861   00412E                     l10148:
  6862                           
  6863                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 243:         ret =(Std_ReturnType)0x00;
  6864   00412E  0E00               	movlw	0
  6865   004130  6E08               	movwf	interrupt_intx_disable@ret^0,c
  6866                           
  6867                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 244:     }
  6868   004132  EFC5  F020         	goto	l10160
  6869   004136                     l980:
  6870                           
  6871                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 249:                 (INTCONbits.INT0IE
      +                           = 0);
  6872   004136  98F2               	bcf	242,4,c	;volatile
  6873   004138                     l10150:
  6874                           
  6875                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 250:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  6876   004138  0E01               	movlw	1
  6877   00413A  6E08               	movwf	interrupt_intx_disable@ret^0,c
  6878                           
  6879                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 251:                 break;
  6880   00413C  EFC5  F020         	goto	l10160
  6881   004140                     l982:
  6882                           
  6883                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 253:                 (INTCON3bits.INT1I
      +                          E = 0);
  6884   004140  96F0               	bcf	240,3,c	;volatile
  6885   004142  EF9C  F020         	goto	l10150
  6886   004146                     l983:
  6887                           
  6888                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 257:                 (INTCON3bits.INT2I
      +                          E = 0);
  6889   004146  98F0               	bcf	240,4,c	;volatile
  6890   004148  EF9C  F020         	goto	l10150
  6891   00414C                     l10158:
  6892   00414C  EE20 F004          	lfsr	2,4
  6893   004150  5004               	movf	interrupt_intx_disable@INTERRUPT_INTX^0,w,c
  6894   004152  26D9               	addwf	fsr2l,f,c
  6895   004154  5005               	movf	(interrupt_intx_disable@INTERRUPT_INTX+1)^0,w,c
  6896   004156  22DA               	addwfc	fsr2h,f,c
  6897   004158  50DF               	movf	indf2,w,c
  6898   00415A  6E06               	movwf	??_interrupt_intx_disable^0,c
  6899   00415C  6A07               	clrf	(??_interrupt_intx_disable+1)^0,c
  6900                           
  6901                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6902                           ; Switch size 1, requested type "simple"
  6903                           ; Number of cases is 1, Range of values is 0 to 0
  6904                           ; switch strategies available:
  6905                           ; Name         Instructions Cycles
  6906                           ; simple_byte            4     3 (average)
  6907                           ;	Chosen strategy is simple_byte
  6908   00415E  5007               	movf	(??_interrupt_intx_disable+1)^0,w,c
  6909   004160  0A00               	xorlw	0	; case 0
  6910   004162  B4D8               	btfsc	status,2,c
  6911   004164  EFB6  F020         	goto	l12016
  6912   004168  EF97  F020         	goto	l10148
  6913   00416C                     l12016:
  6914                           
  6915                           ; Switch size 1, requested type "simple"
  6916                           ; Number of cases is 3, Range of values is 0 to 2
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte           10     6 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921   00416C  5006               	movf	??_interrupt_intx_disable^0,w,c
  6922   00416E  0A00               	xorlw	0	; case 0
  6923   004170  B4D8               	btfsc	status,2,c
  6924   004172  EF9B  F020         	goto	l980
  6925   004176  0A01               	xorlw	1	; case 1
  6926   004178  B4D8               	btfsc	status,2,c
  6927   00417A  EFA0  F020         	goto	l982
  6928   00417E  0A03               	xorlw	3	; case 2
  6929   004180  B4D8               	btfsc	status,2,c
  6930   004182  EFA3  F020         	goto	l983
  6931   004186  EF97  F020         	goto	l10148
  6932   00418A                     l10160:
  6933                           
  6934                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 264:     return ret ;
  6935   00418A  5008               	movf	interrupt_intx_disable@ret^0,w,c
  6936   00418C  0012               	return		;funcret
  6937   00418E                     __end_of_interrupt_intx_disable:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _interrupt_intx_clear *****************
  6941 ;; Defined at:
  6942 ;;		line 384 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  INTERRUPT_IN    2    3[COMRAM] PTR const struct .
  6945 ;;		 -> INT_1(6), INT_0(6), 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  ret             1    7[COMRAM] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      unsigned char 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;Total ram usage:        5 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 3
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_Interrupt_Intx_Inti
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text42
  6972   00418E                     __ptext42:
  6973                           	callstack 0
  6974   00418E                     _interrupt_intx_clear:
  6975                           	callstack 25
  6976   00418E                     
  6977                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 386:     if(((void*)0) == INTERRUPT_INT
      +                          X){
  6978   00418E  5004               	movf	interrupt_intx_clear@INTERRUPT_INTX^0,w,c
  6979   004190  1005               	iorwf	(interrupt_intx_clear@INTERRUPT_INTX+1)^0,w,c
  6980   004192  A4D8               	btfss	status,2,c
  6981   004194  EFCE  F020         	goto	u11011
  6982   004198  EFD0  F020         	goto	u11010
  6983   00419C                     u11011:
  6984   00419C  EFDF  F020         	goto	l10182
  6985   0041A0                     u11010:
  6986   0041A0                     l10172:
  6987                           
  6988                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 387:         ret =(Std_ReturnType)0x00;
  6989   0041A0  0E00               	movlw	0
  6990   0041A2  6E08               	movwf	interrupt_intx_clear@ret^0,c
  6991                           
  6992                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 388:     }
  6993   0041A4  EFFE  F020         	goto	l10184
  6994   0041A8                     l1019:
  6995                           
  6996                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 393:                 (INTCONbits.INT0IF
      +                           = 0);
  6997   0041A8  92F2               	bcf	242,1,c	;volatile
  6998   0041AA                     l10174:
  6999                           
  7000                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 394:                 ret =(Std_ReturnTy
      +                          pe)0x01;
  7001   0041AA  0E01               	movlw	1
  7002   0041AC  6E08               	movwf	interrupt_intx_clear@ret^0,c
  7003                           
  7004                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 395:                 break;
  7005   0041AE  EFFE  F020         	goto	l10184
  7006   0041B2                     l1021:
  7007                           
  7008                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 397:                 (INTCON3bits.INT1I
      +                          F = 0);
  7009   0041B2  90F0               	bcf	240,0,c	;volatile
  7010   0041B4  EFD5  F020         	goto	l10174
  7011   0041B8                     l1022:
  7012                           
  7013                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 401:                 (INTCON3bits.INT2I
      +                          F = 0);
  7014   0041B8  92F0               	bcf	240,1,c	;volatile
  7015   0041BA  EFD5  F020         	goto	l10174
  7016   0041BE                     l10182:
  7017   0041BE  EE20 F004          	lfsr	2,4
  7018   0041C2  5004               	movf	interrupt_intx_clear@INTERRUPT_INTX^0,w,c
  7019   0041C4  26D9               	addwf	fsr2l,f,c
  7020   0041C6  5005               	movf	(interrupt_intx_clear@INTERRUPT_INTX+1)^0,w,c
  7021   0041C8  22DA               	addwfc	fsr2h,f,c
  7022   0041CA  50DF               	movf	indf2,w,c
  7023   0041CC  6E06               	movwf	??_interrupt_intx_clear^0,c
  7024   0041CE  6A07               	clrf	(??_interrupt_intx_clear+1)^0,c
  7025                           
  7026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7027                           ; Switch size 1, requested type "simple"
  7028                           ; Number of cases is 1, Range of values is 0 to 0
  7029                           ; switch strategies available:
  7030                           ; Name         Instructions Cycles
  7031                           ; simple_byte            4     3 (average)
  7032                           ;	Chosen strategy is simple_byte
  7033   0041D0  5007               	movf	(??_interrupt_intx_clear+1)^0,w,c
  7034   0041D2  0A00               	xorlw	0	; case 0
  7035   0041D4  B4D8               	btfsc	status,2,c
  7036   0041D6  EFEF  F020         	goto	l12018
  7037   0041DA  EFD0  F020         	goto	l10172
  7038   0041DE                     l12018:
  7039                           
  7040                           ; Switch size 1, requested type "simple"
  7041                           ; Number of cases is 3, Range of values is 0 to 2
  7042                           ; switch strategies available:
  7043                           ; Name         Instructions Cycles
  7044                           ; simple_byte           10     6 (average)
  7045                           ;	Chosen strategy is simple_byte
  7046   0041DE  5006               	movf	??_interrupt_intx_clear^0,w,c
  7047   0041E0  0A00               	xorlw	0	; case 0
  7048   0041E2  B4D8               	btfsc	status,2,c
  7049   0041E4  EFD4  F020         	goto	l1019
  7050   0041E8  0A01               	xorlw	1	; case 1
  7051   0041EA  B4D8               	btfsc	status,2,c
  7052   0041EC  EFD9  F020         	goto	l1021
  7053   0041F0  0A03               	xorlw	3	; case 2
  7054   0041F2  B4D8               	btfsc	status,2,c
  7055   0041F4  EFDC  F020         	goto	l1022
  7056   0041F8  EFD0  F020         	goto	l10172
  7057   0041FC                     l10184:
  7058                           
  7059                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 408:     return ret ;
  7060   0041FC  5008               	movf	interrupt_intx_clear@ret^0,w,c
  7061   0041FE  0012               	return		;funcret
  7062   004200                     __end_of_interrupt_intx_clear:
  7063                           	callstack 0
  7064                           
  7065 ;; *************** function _ADC_inti *****************
  7066 ;; Defined at:
  7067 ;;		line 15 in file "MKAL_layer/ADC/hal_adc.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  ADC_conf        2    6[COMRAM] PTR const struct .
  7070 ;;		 -> ADC_(6), 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  ret             1    0        unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      unsigned char 
  7075 ;; Registers used:
  7076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;Total ram usage:        3 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 4
  7089 ;; This function calls:
  7090 ;;		_adc_channel_port_confige
  7091 ;;		_configure_voltage_ref
  7092 ;;		_select_result_format
  7093 ;; This function is called by:
  7094 ;;		_intitialized_functions
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text43
  7099   003862                     __ptext43:
  7100                           	callstack 0
  7101   003862                     _ADC_inti:
  7102                           	callstack 25
  7103   003862                     
  7104                           ;MKAL_layer/ADC/hal_adc.c: 17:     if (((void*)0) == ADC_conf){
  7105   003862  5007               	movf	ADC_inti@ADC_conf^0,w,c
  7106   003864  1008               	iorwf	(ADC_inti@ADC_conf+1)^0,w,c
  7107   003866  A4D8               	btfss	status,2,c
  7108   003868  EF38  F01C         	goto	u11371
  7109   00386C  EF3A  F01C         	goto	u11370
  7110   003870                     u11371:
  7111   003870  EF3C  F01C         	goto	l392
  7112   003874                     u11370:
  7113   003874                     
  7114                           ;MKAL_layer/ADC/hal_adc.c: 19:     }
  7115   003874  EF8B  F01C         	goto	l394
  7116   003878                     l392:
  7117                           
  7118                           ;MKAL_layer/ADC/hal_adc.c: 22:         (ADCON0bits.ADON = 0);
  7119   003878  90C2               	bcf	194,0,c	;volatile
  7120   00387A                     
  7121                           ;MKAL_layer/ADC/hal_adc.c: 24:         ADCON2bits.ACQT = ADC_conf->Acquisition_time;
  7122   00387A  EE20 F003          	lfsr	2,3
  7123   00387E  5007               	movf	ADC_inti@ADC_conf^0,w,c
  7124   003880  26D9               	addwf	fsr2l,f,c
  7125   003882  5008               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  7126   003884  22DA               	addwfc	fsr2h,f,c
  7127   003886  50DF               	movf	indf2,w,c
  7128   003888  6E09               	movwf	??_ADC_inti^0,c
  7129   00388A  4609               	rlncf	??_ADC_inti^0,f,c
  7130   00388C  4609               	rlncf	??_ADC_inti^0,f,c
  7131   00388E  4609               	rlncf	??_ADC_inti^0,f,c
  7132   003890  50C0               	movf	192,w,c	;volatile
  7133   003892  1809               	xorwf	??_ADC_inti^0,w,c
  7134   003894  0BC7               	andlw	-57
  7135   003896  1809               	xorwf	??_ADC_inti^0,w,c
  7136   003898  6EC0               	movwf	192,c	;volatile
  7137                           
  7138                           ;MKAL_layer/ADC/hal_adc.c: 26:         ADCON2bits.ADCS = ADC_conf->Conversion_Clock;
  7139   00389A  EE20 F004          	lfsr	2,4
  7140   00389E  5007               	movf	ADC_inti@ADC_conf^0,w,c
  7141   0038A0  26D9               	addwf	fsr2l,f,c
  7142   0038A2  5008               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  7143   0038A4  22DA               	addwfc	fsr2h,f,c
  7144   0038A6  50DF               	movf	indf2,w,c
  7145   0038A8  6E09               	movwf	??_ADC_inti^0,c
  7146   0038AA  50C0               	movf	192,w,c	;volatile
  7147   0038AC  1809               	xorwf	??_ADC_inti^0,w,c
  7148   0038AE  0BF8               	andlw	-8
  7149   0038B0  1809               	xorwf	??_ADC_inti^0,w,c
  7150   0038B2  6EC0               	movwf	192,c	;volatile
  7151                           
  7152                           ;MKAL_layer/ADC/hal_adc.c: 28:         ADCON0bits.CHS = ADC_conf->ADC_CHANNAL_SELECT;
  7153   0038B4  EE20 F002          	lfsr	2,2
  7154   0038B8  5007               	movf	ADC_inti@ADC_conf^0,w,c
  7155   0038BA  26D9               	addwf	fsr2l,f,c
  7156   0038BC  5008               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  7157   0038BE  22DA               	addwfc	fsr2h,f,c
  7158   0038C0  50DF               	movf	indf2,w,c
  7159   0038C2  6E09               	movwf	??_ADC_inti^0,c
  7160   0038C4  4609               	rlncf	??_ADC_inti^0,f,c
  7161   0038C6  4609               	rlncf	??_ADC_inti^0,f,c
  7162   0038C8  50C2               	movf	194,w,c	;volatile
  7163   0038CA  1809               	xorwf	??_ADC_inti^0,w,c
  7164   0038CC  0BC3               	andlw	-61
  7165   0038CE  1809               	xorwf	??_ADC_inti^0,w,c
  7166   0038D0  6EC2               	movwf	194,c	;volatile
  7167   0038D2                     
  7168                           ;MKAL_layer/ADC/hal_adc.c: 29:         adc_channel_port_confige(ADC_conf->ADC_CHANNAL_SE
      +                          LECT);
  7169   0038D2  EE20 F002          	lfsr	2,2
  7170   0038D6  5007               	movf	ADC_inti@ADC_conf^0,w,c
  7171   0038D8  26D9               	addwf	fsr2l,f,c
  7172   0038DA  5008               	movf	(ADC_inti@ADC_conf+1)^0,w,c
  7173   0038DC  22DA               	addwfc	fsr2h,f,c
  7174   0038DE  50DF               	movf	indf2,w,c
  7175   0038E0  ECA7  F01A         	call	_adc_channel_port_confige
  7176   0038E4                     
  7177                           ;MKAL_layer/ADC/hal_adc.c: 50:         (INTCONbits.GIE =1);
  7178   0038E4  8EF2               	bsf	242,7,c	;volatile
  7179   0038E6                     
  7180                           ;MKAL_layer/ADC/hal_adc.c: 51:         (INTCONbits.PEIE =1);
  7181   0038E6  8CF2               	bsf	242,6,c	;volatile
  7182   0038E8                     
  7183                           ;MKAL_layer/ADC/hal_adc.c: 53:         (PIE1bits.ADIE = 1);
  7184   0038E8  8C9D               	bsf	157,6,c	;volatile
  7185   0038EA                     
  7186                           ;MKAL_layer/ADC/hal_adc.c: 55:         (PIR1bits.ADIF = 0);
  7187   0038EA  9C9E               	bcf	158,6,c	;volatile
  7188   0038EC                     
  7189                           ;MKAL_layer/ADC/hal_adc.c: 57:         ADC_INTERRUPTHANDLER = ADC_conf->ADC_interruptHan
      +                          dler;
  7190   0038EC  C007  FFD9         	movff	ADC_inti@ADC_conf,fsr2l
  7191   0038F0  C008  FFDA         	movff	ADC_inti@ADC_conf+1,fsr2h
  7192   0038F4  CFDE F0BA          	movff	postinc2,_ADC_INTERRUPTHANDLER
  7193   0038F8  CFDD F0BB          	movff	postdec2,_ADC_INTERRUPTHANDLER+1
  7194   0038FC                     
  7195                           ;MKAL_layer/ADC/hal_adc.c: 61:         select_result_format(ADC_conf);
  7196   0038FC  C007  F004         	movff	ADC_inti@ADC_conf,select_result_format@ADC_conf
  7197   003900  C008  F005         	movff	ADC_inti@ADC_conf+1,select_result_format@ADC_conf+1
  7198   003904  ECC0  F023         	call	_select_result_format	;wreg free
  7199   003908                     
  7200                           ;MKAL_layer/ADC/hal_adc.c: 63:         configure_voltage_ref(ADC_conf);
  7201   003908  C007  F004         	movff	ADC_inti@ADC_conf,configure_voltage_ref@ADC_conf
  7202   00390C  C008  F005         	movff	ADC_inti@ADC_conf+1,configure_voltage_ref@ADC_conf+1
  7203   003910  EC78  F023         	call	_configure_voltage_ref	;wreg free
  7204   003914                     
  7205                           ;MKAL_layer/ADC/hal_adc.c: 65:         (ADCON0bits.ADON = 1);
  7206   003914  80C2               	bsf	194,0,c	;volatile
  7207   003916                     l394:
  7208   003916  0012               	return		;funcret
  7209   003918                     __end_of_ADC_inti:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _select_result_format *****************
  7213 ;; Defined at:
  7214 ;;		line 195 in file "MKAL_layer/ADC/hal_adc.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  ADC_conf        2    3[COMRAM] PTR const struct .
  7217 ;;		 -> ADC_(6), 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;Total ram usage:        2 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 3
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_ADC_inti
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text44
  7244   004780                     __ptext44:
  7245                           	callstack 0
  7246   004780                     _select_result_format:
  7247                           	callstack 25
  7248   004780                     
  7249                           ;MKAL_layer/ADC/hal_adc.c: 196:     if(ADC_conf->result_format == 1){
  7250   004780  EE20 F005          	lfsr	2,5
  7251   004784  5004               	movf	select_result_format@ADC_conf^0,w,c
  7252   004786  26D9               	addwf	fsr2l,f,c
  7253   004788  5005               	movf	(select_result_format@ADC_conf+1)^0,w,c
  7254   00478A  22DA               	addwfc	fsr2h,f,c
  7255   00478C  A2DF               	btfss	indf2,1,c
  7256   00478E  EFCB  F023         	goto	u10961
  7257   004792  EFCD  F023         	goto	u10960
  7258   004796                     u10961:
  7259   004796  EFD0  F023         	goto	l10116
  7260   00479A                     u10960:
  7261   00479A                     
  7262                           ;MKAL_layer/ADC/hal_adc.c: 197:         (ADCON2bits.ADFM = 1);
  7263   00479A  8EC0               	bsf	192,7,c	;volatile
  7264                           
  7265                           ;MKAL_layer/ADC/hal_adc.c: 198:     }else if(ADC_conf->result_format == 0){
  7266   00479C  EFE1  F023         	goto	l467
  7267   0047A0                     l10116:
  7268   0047A0  EE20 F005          	lfsr	2,5
  7269   0047A4  5004               	movf	select_result_format@ADC_conf^0,w,c
  7270   0047A6  26D9               	addwf	fsr2l,f,c
  7271   0047A8  5005               	movf	(select_result_format@ADC_conf+1)^0,w,c
  7272   0047AA  22DA               	addwfc	fsr2h,f,c
  7273   0047AC  B2DF               	btfsc	indf2,1,c
  7274   0047AE  EFDB  F023         	goto	u10971
  7275   0047B2  EFDD  F023         	goto	u10970
  7276   0047B6                     u10971:
  7277   0047B6  EFE0  F023         	goto	l465
  7278   0047BA                     u10970:
  7279   0047BA                     
  7280                           ;MKAL_layer/ADC/hal_adc.c: 199:         (ADCON2bits.ADFM = 0) ;
  7281   0047BA  9EC0               	bcf	192,7,c	;volatile
  7282                           
  7283                           ;MKAL_layer/ADC/hal_adc.c: 200:     }
  7284   0047BC  EFE1  F023         	goto	l467
  7285   0047C0                     l465:
  7286                           
  7287                           ;MKAL_layer/ADC/hal_adc.c: 202:     {;MKAL_layer/ADC/hal_adc.c: 203:         (ADCON2bits
      +                          .ADFM = 1);
  7288   0047C0  8EC0               	bsf	192,7,c	;volatile
  7289   0047C2                     l467:
  7290   0047C2  0012               	return		;funcret
  7291   0047C4                     __end_of_select_result_format:
  7292                           	callstack 0
  7293                           
  7294 ;; *************** function _configure_voltage_ref *****************
  7295 ;; Defined at:
  7296 ;;		line 207 in file "MKAL_layer/ADC/hal_adc.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  ADC_conf        2    3[COMRAM] PTR const struct .
  7299 ;;		 -> ADC_(6), 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;Total ram usage:        2 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 3
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_ADC_inti
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text45
  7326   0046F0                     __ptext45:
  7327                           	callstack 0
  7328   0046F0                     _configure_voltage_ref:
  7329                           	callstack 25
  7330   0046F0                     
  7331                           ;MKAL_layer/ADC/hal_adc.c: 208:       if(ADC_conf->result_format == 1){
  7332   0046F0  EE20 F005          	lfsr	2,5
  7333   0046F4  5004               	movf	configure_voltage_ref@ADC_conf^0,w,c
  7334   0046F6  26D9               	addwf	fsr2l,f,c
  7335   0046F8  5005               	movf	(configure_voltage_ref@ADC_conf+1)^0,w,c
  7336   0046FA  22DA               	addwfc	fsr2h,f,c
  7337   0046FC  A2DF               	btfss	indf2,1,c
  7338   0046FE  EF83  F023         	goto	u10981
  7339   004702  EF85  F023         	goto	u10980
  7340   004706                     u10981:
  7341   004706  EF89  F023         	goto	l10124
  7342   00470A                     u10980:
  7343   00470A                     
  7344                           ;MKAL_layer/ADC/hal_adc.c: 209:         (ADCON1bits.VCFG0 = 0);
  7345   00470A  98C1               	bcf	193,4,c	;volatile
  7346                           
  7347                           ;MKAL_layer/ADC/hal_adc.c: 210:         (ADCON1bits.VCFG0 = 0);
  7348   00470C  98C1               	bcf	193,4,c	;volatile
  7349                           
  7350                           ;MKAL_layer/ADC/hal_adc.c: 211:     }else if(ADC_conf->result_format == 0){
  7351   00470E  EF9C  F023         	goto	l474
  7352   004712                     l10124:
  7353   004712  EE20 F005          	lfsr	2,5
  7354   004716  5004               	movf	configure_voltage_ref@ADC_conf^0,w,c
  7355   004718  26D9               	addwf	fsr2l,f,c
  7356   00471A  5005               	movf	(configure_voltage_ref@ADC_conf+1)^0,w,c
  7357   00471C  22DA               	addwfc	fsr2h,f,c
  7358   00471E  B2DF               	btfsc	indf2,1,c
  7359   004720  EF94  F023         	goto	u10991
  7360   004724  EF96  F023         	goto	u10990
  7361   004728                     u10991:
  7362   004728  EF9A  F023         	goto	l472
  7363   00472C                     u10990:
  7364   00472C                     
  7365                           ;MKAL_layer/ADC/hal_adc.c: 212:         (ADCON1bits.VCFG0 = 1) ;
  7366   00472C  88C1               	bsf	193,4,c	;volatile
  7367                           
  7368                           ;MKAL_layer/ADC/hal_adc.c: 213:         (ADCON1bits.VCFG1 = 1) ;
  7369   00472E  8AC1               	bsf	193,5,c	;volatile
  7370                           
  7371                           ;MKAL_layer/ADC/hal_adc.c: 214:     }
  7372   004730  EF9C  F023         	goto	l474
  7373   004734                     l472:
  7374                           
  7375                           ;MKAL_layer/ADC/hal_adc.c: 216:     {;MKAL_layer/ADC/hal_adc.c: 217:         (ADCON1bits
      +                          .VCFG0 = 0);
  7376   004734  98C1               	bcf	193,4,c	;volatile
  7377                           
  7378                           ;MKAL_layer/ADC/hal_adc.c: 218:         (ADCON1bits.VCFG0 = 0);
  7379   004736  98C1               	bcf	193,4,c	;volatile
  7380   004738                     l474:
  7381   004738  0012               	return		;funcret
  7382   00473A                     __end_of_configure_voltage_ref:
  7383                           	callstack 0
  7384                           
  7385 ;; *************** function _convert_uint8_to_string *****************
  7386 ;; Defined at:
  7387 ;;		line 397 in file "ECU_layer/chr_lcd/ecu_chr_lcd.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  value           1    wreg     unsigned char 
  7390 ;;  str             2   48[COMRAM] PTR unsigned char 
  7391 ;;		 -> string(6), 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  value           1   50[COMRAM] unsigned char 
  7394 ;;  ret             1    0        unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      unsigned char 
  7397 ;; Registers used:
  7398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7408 ;;Total ram usage:        3 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 8
  7411 ;; This function calls:
  7412 ;;		_memset
  7413 ;;		_sprintf
  7414 ;; This function is called by:
  7415 ;;		_main
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           	psect	text46
  7420   00460E                     __ptext46:
  7421                           	callstack 0
  7422   00460E                     _convert_uint8_to_string:
  7423                           	callstack 22
  7424                           
  7425                           ;incstack = 0
  7426                           ;convert_uint8_to_string@value stored from wreg
  7427   00460E  6E33               	movwf	convert_uint8_to_string@value^0,c
  7428   004610                     
  7429                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 399:     if(((void*)0) == str){
  7430   004610  5031               	movf	convert_uint8_to_string@str^0,w,c
  7431   004612  1032               	iorwf	(convert_uint8_to_string@str+1)^0,w,c
  7432   004614  A4D8               	btfss	status,2,c
  7433   004616  EF0F  F023         	goto	u11961
  7434   00461A  EF11  F023         	goto	u11960
  7435   00461E                     u11961:
  7436   00461E  EF13  F023         	goto	l11008
  7437   004622                     u11960:
  7438   004622                     
  7439                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 401:     }
  7440   004622  EF2C  F023         	goto	l144
  7441   004626                     l11008:
  7442                           
  7443                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 403:         memset((char *)str, '\0', 4);
  7444   004626  C031  F004         	movff	convert_uint8_to_string@str,memset@dest
  7445   00462A  C032  F005         	movff	convert_uint8_to_string@str+1,memset@dest+1
  7446   00462E  0E00               	movlw	0
  7447   004630  6E07               	movwf	(memset@c+1)^0,c
  7448   004632  0E00               	movlw	0
  7449   004634  6E06               	movwf	memset@c^0,c
  7450   004636  0E00               	movlw	0
  7451   004638  6E09               	movwf	(memset@n+1)^0,c
  7452   00463A  0E04               	movlw	4
  7453   00463C  6E08               	movwf	memset@n^0,c
  7454   00463E  ECF4  F024         	call	_memset	;wreg free
  7455   004642                     
  7456                           ;ECU_layer/chr_lcd/ecu_chr_lcd.c: 404:         sprintf(str, "%i", value);
  7457   004642  C031  F01D         	movff	convert_uint8_to_string@str,sprintf@s
  7458   004646  C032  F01E         	movff	convert_uint8_to_string@str+1,sprintf@s+1
  7459   00464A  0E74               	movlw	low STR_1
  7460   00464C  6E1F               	movwf	sprintf@fmt^0,c
  7461   00464E  C033  F020         	movff	convert_uint8_to_string@value,?_sprintf+3
  7462   004652  6A21               	clrf	(?_sprintf+4)^0,c
  7463   004654  EC9D  F024         	call	_sprintf	;wreg free
  7464   004658                     l144:
  7465   004658  0012               	return		;funcret
  7466   00465A                     __end_of_convert_uint8_to_string:
  7467                           	callstack 0
  7468                           
  7469 ;; *************** function _sprintf *****************
  7470 ;; Defined at:
  7471 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  s               2   28[COMRAM] PTR unsigned char 
  7474 ;;		 -> string(6), convert_uint16_to_string@Temp_String(6), 
  7475 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  7476 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  f              12   36[COMRAM] struct _IO_FILE
  7479 ;;  ret             2    0        int 
  7480 ;;  ap              1   35[COMRAM] PTR void [1]
  7481 ;;		 -> ?_sprintf(2), 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  2   28[COMRAM] int 
  7484 ;; Registers used:
  7485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7491 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;Total ram usage:       20 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; Hardware stack levels required when called: 7
  7498 ;; This function calls:
  7499 ;;		_vfprintf
  7500 ;; This function is called by:
  7501 ;;		_convert_uint8_to_string
  7502 ;;		_convert_uint16_to_string
  7503 ;;		_convert_uint32_to_string
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text47
  7508   00493A                     __ptext47:
  7509                           	callstack 0
  7510   00493A                     _sprintf:
  7511                           	callstack 22
  7512   00493A  0E20               	movlw	low (?_sprintf+3)
  7513   00493C  6E24               	movwf	sprintf@ap^0,c
  7514   00493E  C01D  F025         	movff	sprintf@s,sprintf@f
  7515   004942  C01E  F026         	movff	sprintf@s+1,sprintf@f+1
  7516   004946  0E00               	movlw	0
  7517   004948  6E29               	movwf	(sprintf@f+4)^0,c
  7518   00494A  0E00               	movlw	0
  7519   00494C  6E28               	movwf	(sprintf@f+3)^0,c
  7520   00494E  0E00               	movlw	0
  7521   004950  6E30               	movwf	(sprintf@f+11)^0,c
  7522   004952  0E00               	movlw	0
  7523   004954  6E2F               	movwf	(sprintf@f+10)^0,c
  7524   004956  0E25               	movlw	low sprintf@f
  7525   004958  6E19               	movwf	vfprintf@fp^0,c
  7526   00495A  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  7527   00495E  0E24               	movlw	low sprintf@ap
  7528   004960  6E1B               	movwf	vfprintf@ap^0,c
  7529   004962  ECE2  F023         	call	_vfprintf	;wreg free
  7530   004966  5028               	movf	(sprintf@f+3)^0,w,c
  7531   004968  241D               	addwf	sprintf@s^0,w,c
  7532   00496A  6ED9               	movwf	fsr2l,c
  7533   00496C  5029               	movf	(sprintf@f+4)^0,w,c
  7534   00496E  201E               	addwfc	(sprintf@s+1)^0,w,c
  7535   004970  6EDA               	movwf	fsr2h,c
  7536   004972  6ADF               	clrf	indf2,c
  7537   004974  0012               	return		;funcret
  7538   004976                     __end_of_sprintf:
  7539                           	callstack 0
  7540                           
  7541 ;; *************** function _vfprintf *****************
  7542 ;; Defined at:
  7543 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  7546 ;;		 -> sprintf@f(12), 
  7547 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  7548 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7549 ;;  ap              1   26[COMRAM] PTR PTR void 
  7550 ;;		 -> sprintf@ap(1), 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  7553 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  2   24[COMRAM] int 
  7556 ;; Registers used:
  7557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7563 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;Total ram usage:        4 bytes
  7568 ;; Hardware stack levels used: 1
  7569 ;; Hardware stack levels required when called: 6
  7570 ;; This function calls:
  7571 ;;		_vfpfcnvrt
  7572 ;; This function is called by:
  7573 ;;		_sprintf
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text48
  7578   0047C4                     __ptext48:
  7579                           	callstack 0
  7580   0047C4                     _vfprintf:
  7581                           	callstack 22
  7582   0047C4                     
  7583                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7584   0047C4  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  7585                           
  7586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7587   0047C8  EFEE  F023         	goto	l10360
  7588   0047CC                     l10358:
  7589                           
  7590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7591   0047CC  C019  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  7592   0047D0  0E1C               	movlw	low vfprintf@cfmt
  7593   0047D2  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  7594   0047D4  C01B  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  7595   0047D8  EC41  F014         	call	_vfpfcnvrt	;wreg free
  7596   0047DC                     l10360:
  7597                           
  7598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7599   0047DC  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  7600   0047E0                     	if	1	;There is more than 1 active tblptr byte
  7601   0047E0  0E10               	movlw	high __smallconst
  7602   0047E2  6EF7               	movwf	tblptrh,c
  7603   0047E4                     	endif
  7604   0047E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7605   0047E4  6AF8               	clrf	tblptru,c
  7606   0047E6                     	endif
  7607   0047E6                     	if	0	;tblptru may be non-zero
  7608   0047E6                     	endif
  7609   0047E6  0008               	tblrd		*
  7610   0047E8  50F5               	movf	tablat,w,c
  7611   0047EA  0900               	iorlw	0
  7612   0047EC  A4D8               	btfss	status,2,c
  7613   0047EE  EFFB  F023         	goto	u11231
  7614   0047F2  EFFD  F023         	goto	u11230
  7615   0047F6                     u11231:
  7616   0047F6  EFE6  F023         	goto	l10358
  7617   0047FA                     u11230:
  7618   0047FA                     
  7619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7620   0047FA  0E00               	movlw	0
  7621   0047FC  6E1A               	movwf	(?_vfprintf+1)^0,c
  7622   0047FE  0E00               	movlw	0
  7623   004800  6E19               	movwf	?_vfprintf^0,c
  7624   004802  0012               	return		;funcret
  7625   004804                     __end_of_vfprintf:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _vfpfcnvrt *****************
  7629 ;; Defined at:
  7630 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7633 ;;		 -> sprintf@f(12), 
  7634 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  7635 ;;		 -> vfprintf@cfmt(1), 
  7636 ;;  ap              1   15[COMRAM] PTR PTR void 
  7637 ;;		 -> sprintf@ap(1), 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  convarg         4   19[COMRAM] struct .
  7640 ;;  c               1   23[COMRAM] unsigned char 
  7641 ;;  cp              1   18[COMRAM] PTR unsigned char 
  7642 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  7643 ;;  done            1   17[COMRAM] _Bool 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;Total ram usage:       11 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 5
  7660 ;; This function calls:
  7661 ;;		___awdiv
  7662 ;;		___awmod
  7663 ;;		_abs
  7664 ;;		_fputc
  7665 ;; This function is called by:
  7666 ;;		_vfprintf
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text49
  7671   002882                     __ptext49:
  7672                           	callstack 0
  7673   002882                     _vfpfcnvrt:
  7674                           	callstack 22
  7675   002882                     
  7676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7677   002882  500F               	movf	vfpfcnvrt@fmt^0,w,c
  7678   002884  6ED9               	movwf	fsr2l,c
  7679   002886  6ADA               	clrf	fsr2h,c
  7680   002888  CFDF FFF6          	movff	indf2,tblptrl
  7681   00288C                     	if	1	;There is more than 1 active tblptr byte
  7682   00288C  0E10               	movlw	high __smallconst
  7683   00288E  6EF7               	movwf	tblptrh,c
  7684   002890                     	endif
  7685   002890                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7686   002890  6AF8               	clrf	tblptru,c
  7687   002892                     	endif
  7688   002892                     	if	0	;tblptru may be non-zero
  7689   002892                     	endif
  7690   002892  0008               	tblrd		*
  7691   002894  50F5               	movf	tablat,w,c
  7692   002896  0A25               	xorlw	37
  7693   002898  A4D8               	btfss	status,2,c
  7694   00289A  EF51  F014         	goto	u10851
  7695   00289E  EF53  F014         	goto	u10850
  7696   0028A2                     u10851:
  7697   0028A2  EF15  F015         	goto	l10060
  7698   0028A6                     u10850:
  7699   0028A6                     
  7700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7701   0028A6  500F               	movf	vfpfcnvrt@fmt^0,w,c
  7702   0028A8  6ED9               	movwf	fsr2l,c
  7703   0028AA  6ADA               	clrf	fsr2h,c
  7704   0028AC  2ADF               	incf	indf2,f,c
  7705   0028AE                     
  7706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7707   0028AE  0E00               	movlw	0
  7708   0028B0  0100               	movlb	0	; () banked
  7709   0028B2  6F81               	movwf	(_width+1)& (0+255),b
  7710   0028B4  0E00               	movlw	0
  7711   0028B6  6F80               	movwf	_width& (0+255),b
  7712   0028B8  C080  F0BC         	movff	_width,_flags
  7713   0028BC                     
  7714                           ; BSR set to: 0
  7715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7716   0028BC  6982               	setf	_prec& (0+255),b
  7717   0028BE  6983               	setf	(_prec+1)& (0+255),b
  7718   0028C0                     
  7719                           ; BSR set to: 0
  7720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7721   0028C0  500F               	movf	vfpfcnvrt@fmt^0,w,c
  7722   0028C2  6ED9               	movwf	fsr2l,c
  7723   0028C4  6ADA               	clrf	fsr2h,c
  7724   0028C6  50DF               	movf	indf2,w,c
  7725   0028C8  6E13               	movwf	vfpfcnvrt@cp^0,c
  7726   0028CA                     
  7727                           ; BSR set to: 0
  7728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7729   0028CA  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7730   0028CE                     	if	1	;There is more than 1 active tblptr byte
  7731   0028CE  0E10               	movlw	high __smallconst
  7732   0028D0  6EF7               	movwf	tblptrh,c
  7733   0028D2                     	endif
  7734   0028D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7735   0028D2  6AF8               	clrf	tblptru,c
  7736   0028D4                     	endif
  7737   0028D4                     	if	0	;tblptru may be non-zero
  7738   0028D4                     	endif
  7739   0028D4  0008               	tblrd		*
  7740   0028D6  50F5               	movf	tablat,w,c
  7741   0028D8  0A64               	xorlw	100
  7742   0028DA  B4D8               	btfsc	status,2,c
  7743   0028DC  EF72  F014         	goto	u10861
  7744   0028E0  EF74  F014         	goto	u10860
  7745   0028E4                     u10861:
  7746   0028E4  EF83  F014         	goto	l10030
  7747   0028E8                     u10860:
  7748   0028E8                     
  7749                           ; BSR set to: 0
  7750   0028E8  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7751   0028EC                     	if	1	;There is more than 1 active tblptr byte
  7752   0028EC  0E10               	movlw	high __smallconst
  7753   0028EE  6EF7               	movwf	tblptrh,c
  7754   0028F0                     	endif
  7755   0028F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7756   0028F0  6AF8               	clrf	tblptru,c
  7757   0028F2                     	endif
  7758   0028F2                     	if	0	;tblptru may be non-zero
  7759   0028F2                     	endif
  7760   0028F2  0008               	tblrd		*
  7761   0028F4  50F5               	movf	tablat,w,c
  7762   0028F6  0A69               	xorlw	105
  7763   0028F8  A4D8               	btfss	status,2,c
  7764   0028FA  EF81  F014         	goto	u10871
  7765   0028FE  EF83  F014         	goto	u10870
  7766   002902                     u10871:
  7767   002902  EF0F  F015         	goto	l10056
  7768   002906                     u10870:
  7769   002906                     l10030:
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7773   002906  5010               	movf	vfpfcnvrt@ap^0,w,c
  7774   002908  6ED9               	movwf	fsr2l,c
  7775   00290A  6ADA               	clrf	fsr2h,c
  7776   00290C  0E02               	movlw	2
  7777   00290E  26DF               	addwf	indf2,f,c
  7778   002910  5CDF               	subwf	indf2,w,c
  7779   002912  6ED9               	movwf	fsr2l,c
  7780   002914  6ADA               	clrf	fsr2h,c
  7781   002916  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg
  7782   00291A  CFDE F015          	movff	postinc2,vfpfcnvrt@convarg+1
  7783   00291E                     
  7784                           ; BSR set to: 0
  7785                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7786   00291E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  7787   002920  6ED9               	movwf	fsr2l,c
  7788   002922  6ADA               	clrf	fsr2h,c
  7789   002924  2813               	incf	vfpfcnvrt@cp^0,w,c
  7790   002926  6EDF               	movwf	indf2,c
  7791   002928                     
  7792                           ; BSR set to: 0
  7793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  7794   002928  0E20               	movlw	32
  7795   00292A  6E18               	movwf	vfpfcnvrt@c^0,c
  7796                           
  7797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  7798   00292C  BE15               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  7799   00292E  EF9B  F014         	goto	u10881
  7800   002932  EF9E  F014         	goto	u10880
  7801   002936                     u10881:
  7802   002936  0E01               	movlw	1
  7803   002938  EF9F  F014         	goto	u10890
  7804   00293C                     u10880:
  7805   00293C  0E00               	movlw	0
  7806   00293E                     u10890:
  7807   00293E  6E12               	movwf	vfpfcnvrt@done^0,c
  7808   002940                     l10036:
  7809                           
  7810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  7811   002940  0618               	decf	vfpfcnvrt@c^0,f,c
  7812   002942  0E3D               	movlw	low _dbuf
  7813   002944  2418               	addwf	vfpfcnvrt@c^0,w,c
  7814   002946  6ED9               	movwf	fsr2l,c
  7815   002948  6ADA               	clrf	fsr2h,c
  7816   00294A  0E01               	movlw	high _dbuf
  7817   00294C  22DA               	addwfc	fsr2h,f,c
  7818   00294E  C014  F004         	movff	vfpfcnvrt@convarg,___awmod@dividend
  7819   002952  C015  F005         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  7820   002956  0E00               	movlw	0
  7821   002958  6E07               	movwf	(___awmod@divisor+1)^0,c
  7822   00295A  0E0A               	movlw	10
  7823   00295C  6E06               	movwf	___awmod@divisor^0,c
  7824   00295E  EC8C  F01C         	call	___awmod	;wreg free
  7825   002962  C004  F00A         	movff	?___awmod,abs@a
  7826   002966  C005  F00B         	movff	?___awmod+1,abs@a+1
  7827   00296A  EC2B  F025         	call	_abs	;wreg free
  7828   00296E  500A               	movf	?_abs^0,w,c
  7829   002970  0F30               	addlw	48
  7830   002972  6EDF               	movwf	indf2,c
  7831   002974                     
  7832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  7833   002974  C014  F004         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  7834   002978  C015  F005         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  7835   00297C  0E00               	movlw	0
  7836   00297E  6E07               	movwf	(___awdiv@divisor+1)^0,c
  7837   002980  0E0A               	movlw	10
  7838   002982  6E06               	movwf	___awdiv@divisor^0,c
  7839   002984  EC13  F01B         	call	___awdiv	;wreg free
  7840   002988  C004  F014         	movff	?___awdiv,vfpfcnvrt@convarg
  7841   00298C  C005  F015         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  7842   002990                     
  7843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  7844   002990  5014               	movf	vfpfcnvrt@convarg^0,w,c
  7845   002992  1015               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  7846   002994  B4D8               	btfsc	status,2,c
  7847   002996  EFCF  F014         	goto	u10901
  7848   00299A  EFD1  F014         	goto	u10900
  7849   00299E                     u10901:
  7850   00299E  EFD9  F014         	goto	l10044
  7851   0029A2                     u10900:
  7852   0029A2  5018               	movf	vfpfcnvrt@c^0,w,c
  7853   0029A4  A4D8               	btfss	status,2,c
  7854   0029A6  EFD7  F014         	goto	u10911
  7855   0029AA  EFD9  F014         	goto	u10910
  7856   0029AE                     u10911:
  7857   0029AE  EFA0  F014         	goto	l10036
  7858   0029B2                     u10910:
  7859   0029B2                     l10044:
  7860                           
  7861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  7862   0029B2  5018               	movf	vfpfcnvrt@c^0,w,c
  7863   0029B4  B4D8               	btfsc	status,2,c
  7864   0029B6  EFDF  F014         	goto	u10921
  7865   0029BA  EFE1  F014         	goto	u10920
  7866   0029BE                     u10921:
  7867   0029BE  EF04  F015         	goto	l10054
  7868   0029C2                     u10920:
  7869   0029C2  5012               	movf	vfpfcnvrt@done^0,w,c
  7870   0029C4  B4D8               	btfsc	status,2,c
  7871   0029C6  EFE7  F014         	goto	u10931
  7872   0029CA  EFE9  F014         	goto	u10930
  7873   0029CE                     u10931:
  7874   0029CE  EF04  F015         	goto	l10054
  7875   0029D2                     u10930:
  7876   0029D2                     
  7877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  7878   0029D2  0618               	decf	vfpfcnvrt@c^0,f,c
  7879   0029D4  0E3D               	movlw	low _dbuf
  7880   0029D6  2418               	addwf	vfpfcnvrt@c^0,w,c
  7881   0029D8  6ED9               	movwf	fsr2l,c
  7882   0029DA  6ADA               	clrf	fsr2h,c
  7883   0029DC  0E01               	movlw	high _dbuf
  7884   0029DE  22DA               	addwfc	fsr2h,f,c
  7885   0029E0  0E2D               	movlw	45
  7886   0029E2  6EDF               	movwf	indf2,c
  7887   0029E4  EF04  F015         	goto	l10054
  7888   0029E8                     l10050:
  7889                           
  7890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  7891   0029E8  0E3D               	movlw	low _dbuf
  7892   0029EA  2418               	addwf	vfpfcnvrt@c^0,w,c
  7893   0029EC  6ED9               	movwf	fsr2l,c
  7894   0029EE  6ADA               	clrf	fsr2h,c
  7895   0029F0  0E01               	movlw	high _dbuf
  7896   0029F2  22DA               	addwfc	fsr2h,f,c
  7897   0029F4  50DF               	movf	indf2,w,c
  7898   0029F6  6E11               	movwf	??_vfpfcnvrt^0,c
  7899   0029F8  5011               	movf	??_vfpfcnvrt^0,w,c
  7900   0029FA  6E04               	movwf	fputc@c^0,c
  7901   0029FC  6A05               	clrf	(fputc@c+1)^0,c
  7902   0029FE  C00E  F006         	movff	vfpfcnvrt@fp,fputc@fp
  7903   002A02  ECD4  F01B         	call	_fputc	;wreg free
  7904   002A06  2A18               	incf	vfpfcnvrt@c^0,f,c
  7905   002A08                     l10054:
  7906                           
  7907                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  7908   002A08  0E20               	movlw	32
  7909   002A0A  1818               	xorwf	vfpfcnvrt@c^0,w,c
  7910   002A0C  A4D8               	btfss	status,2,c
  7911   002A0E  EF0B  F015         	goto	u10941
  7912   002A12  EF0D  F015         	goto	u10940
  7913   002A16                     u10941:
  7914   002A16  EFF4  F014         	goto	l10050
  7915   002A1A                     u10940:
  7916   002A1A  EF27  F015         	goto	l2542
  7917   002A1E                     l10056:
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7920   002A1E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  7921   002A20  6ED9               	movwf	fsr2l,c
  7922   002A22  6ADA               	clrf	fsr2h,c
  7923   002A24  2ADF               	incf	indf2,f,c
  7924   002A26  EF27  F015         	goto	l2542
  7925   002A2A                     l10060:
  7926                           
  7927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7928   002A2A  500F               	movf	vfpfcnvrt@fmt^0,w,c
  7929   002A2C  6ED9               	movwf	fsr2l,c
  7930   002A2E  6ADA               	clrf	fsr2h,c
  7931   002A30  CFDF FFF6          	movff	indf2,tblptrl
  7932   002A34                     	if	1	;There is more than 1 active tblptr byte
  7933   002A34  0E10               	movlw	high __smallconst
  7934   002A36  6EF7               	movwf	tblptrh,c
  7935   002A38                     	endif
  7936   002A38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7937   002A38  6AF8               	clrf	tblptru,c
  7938   002A3A                     	endif
  7939   002A3A                     	if	0	;tblptru may be non-zero
  7940   002A3A                     	endif
  7941   002A3A  0008               	tblrd		*
  7942   002A3C  50F5               	movf	tablat,w,c
  7943   002A3E  6E04               	movwf	fputc@c^0,c
  7944   002A40  6A05               	clrf	(fputc@c+1)^0,c
  7945   002A42  C00E  F006         	movff	vfpfcnvrt@fp,fputc@fp
  7946   002A46  ECD4  F01B         	call	_fputc	;wreg free
  7947   002A4A  EF0F  F015         	goto	l10056
  7948   002A4E                     l2542:
  7949   002A4E  0012               	return		;funcret
  7950   002A50                     __end_of_vfpfcnvrt:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function _fputc *****************
  7954 ;; Defined at:
  7955 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  c               2    3[COMRAM] int 
  7958 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  7959 ;;		 -> sprintf@f(12), 
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  2    3[COMRAM] int 
  7964 ;; Registers used:
  7965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7971 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;Total ram usage:        8 bytes
  7976 ;; Hardware stack levels used: 1
  7977 ;; Hardware stack levels required when called: 4
  7978 ;; This function calls:
  7979 ;;		_putch
  7980 ;; This function is called by:
  7981 ;;		_vfpfcnvrt
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text50
  7986   0037A8                     __ptext50:
  7987                           	callstack 0
  7988   0037A8                     _fputc:
  7989                           	callstack 22
  7990   0037A8  5006               	movf	fputc@fp^0,w,c
  7991   0037AA  B4D8               	btfsc	status,2,c
  7992   0037AC  EFDA  F01B         	goto	u9961
  7993   0037B0  EFDC  F01B         	goto	u9960
  7994   0037B4                     u9961:
  7995   0037B4  EFE4  F01B         	goto	l9512
  7996   0037B8                     u9960:
  7997   0037B8  5006               	movf	fputc@fp^0,w,c
  7998   0037BA  A4D8               	btfss	status,2,c
  7999   0037BC  EFE2  F01B         	goto	u9971
  8000   0037C0  EFE4  F01B         	goto	u9970
  8001   0037C4                     u9971:
  8002   0037C4  EFE9  F01B         	goto	l9514
  8003   0037C8                     u9970:
  8004   0037C8                     l9512:
  8005   0037C8  5004               	movf	fputc@c^0,w,c
  8006   0037CA  EC8F  F026         	call	_putch
  8007   0037CE  EF30  F01C         	goto	l2567
  8008   0037D2                     l9514:
  8009   0037D2  5006               	movf	fputc@fp^0,w,c
  8010   0037D4  6ED9               	movwf	fsr2l,c
  8011   0037D6  6ADA               	clrf	fsr2h,c
  8012   0037D8  0E0A               	movlw	10
  8013   0037DA  26D9               	addwf	fsr2l,f,c
  8014   0037DC  50DE               	movf	postinc2,w,c
  8015   0037DE  10DE               	iorwf	postinc2,w,c
  8016   0037E0  B4D8               	btfsc	status,2,c
  8017   0037E2  EFF5  F01B         	goto	u9981
  8018   0037E6  EFF7  F01B         	goto	u9980
  8019   0037EA                     u9981:
  8020   0037EA  EF10  F01C         	goto	l9518
  8021   0037EE                     u9980:
  8022   0037EE  5006               	movf	fputc@fp^0,w,c
  8023   0037F0  6ED9               	movwf	fsr2l,c
  8024   0037F2  6ADA               	clrf	fsr2h,c
  8025   0037F4  0E0A               	movlw	10
  8026   0037F6  26D9               	addwf	fsr2l,f,c
  8027   0037F8  5006               	movf	fputc@fp^0,w,c
  8028   0037FA  6EE1               	movwf	fsr1l,c
  8029   0037FC  6AE2               	clrf	fsr1h,c
  8030   0037FE  0E03               	movlw	3
  8031   003800  26E1               	addwf	fsr1l,f,c
  8032   003802  50DE               	movf	postinc2,w,c
  8033   003804  5CE6               	subwf	postinc1,w,c
  8034   003806  50E6               	movf	postinc1,w,c
  8035   003808  0A80               	xorlw	128
  8036   00380A  6E0B               	movwf	(??_fputc+4)^0,c
  8037   00380C  50DE               	movf	postinc2,w,c
  8038   00380E  0A80               	xorlw	128
  8039   003810  580B               	subwfb	(??_fputc+4)^0,w,c
  8040   003812  B0D8               	btfsc	status,0,c
  8041   003814  EF0E  F01C         	goto	u9991
  8042   003818  EF10  F01C         	goto	u9990
  8043   00381C                     u9991:
  8044   00381C  EF30  F01C         	goto	l2567
  8045   003820                     u9990:
  8046   003820                     l9518:
  8047   003820  5006               	movf	fputc@fp^0,w,c
  8048   003822  6ED9               	movwf	fsr2l,c
  8049   003824  6ADA               	clrf	fsr2h,c
  8050   003826  0E03               	movlw	3
  8051   003828  26D9               	addwf	fsr2l,f,c
  8052   00382A  CFDE F007          	movff	postinc2,??_fputc
  8053   00382E  CFDD F008          	movff	postdec2,??_fputc+1
  8054   003832  5006               	movf	fputc@fp^0,w,c
  8055   003834  6ED9               	movwf	fsr2l,c
  8056   003836  6ADA               	clrf	fsr2h,c
  8057   003838  CFDE F009          	movff	postinc2,??_fputc+2
  8058   00383C  CFDD F00A          	movff	postdec2,??_fputc+3
  8059   003840  5007               	movf	??_fputc^0,w,c
  8060   003842  2409               	addwf	(??_fputc+2)^0,w,c
  8061   003844  6ED9               	movwf	fsr2l,c
  8062   003846  5008               	movf	(??_fputc+1)^0,w,c
  8063   003848  200A               	addwfc	(??_fputc+3)^0,w,c
  8064   00384A  6EDA               	movwf	fsr2h,c
  8065   00384C  C004  FFDF         	movff	fputc@c,indf2
  8066   003850  5006               	movf	fputc@fp^0,w,c
  8067   003852  6ED9               	movwf	fsr2l,c
  8068   003854  6ADA               	clrf	fsr2h,c
  8069   003856  0E03               	movlw	3
  8070   003858  26D9               	addwf	fsr2l,f,c
  8071   00385A  2ADE               	incf	postinc2,f,c
  8072   00385C  0E00               	movlw	0
  8073   00385E  22DD               	addwfc	postdec2,f,c
  8074   003860                     l2567:
  8075   003860  0012               	return		;funcret
  8076   003862                     __end_of_fputc:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _putch *****************
  8080 ;; Defined at:
  8081 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  c               1    wreg     unsigned char 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  c               1    0[COMRAM] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 3
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_fputc
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text51
  8110   004D1E                     __ptext51:
  8111                           	callstack 0
  8112   004D1E                     _putch:
  8113                           	callstack 22
  8114   004D1E  0012               	return		;funcret
  8115   004D20                     __end_of_putch:
  8116                           	callstack 0
  8117                           
  8118 ;; *************** function _abs *****************
  8119 ;; Defined at:
  8120 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  a               2    9[COMRAM] int 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  2    9[COMRAM] int 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2, status,0
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;Total ram usage:        4 bytes
  8139 ;; Hardware stack levels used: 1
  8140 ;; Hardware stack levels required when called: 3
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_vfpfcnvrt
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text52
  8149   004A56                     __ptext52:
  8150                           	callstack 0
  8151   004A56                     _abs:
  8152                           	callstack 23
  8153   004A56  BE0B               	btfsc	(abs@a+1)^0,7,c
  8154   004A58  EF30  F025         	goto	u10001
  8155   004A5C  EF32  F025         	goto	u10000
  8156   004A60                     u10001:
  8157   004A60  EF38  F025         	goto	l2552
  8158   004A64                     u10000:
  8159   004A64  C00A  F00A         	movff	abs@a,?_abs
  8160   004A68  C00B  F00B         	movff	abs@a+1,?_abs+1
  8161   004A6C  EF44  F025         	goto	l2555
  8162   004A70                     l2552:
  8163   004A70  C00A  F00C         	movff	abs@a,??_abs
  8164   004A74  C00B  F00D         	movff	abs@a+1,??_abs+1
  8165   004A78  1E0C               	comf	??_abs^0,f,c
  8166   004A7A  1E0D               	comf	(??_abs+1)^0,f,c
  8167   004A7C  4A0C               	infsnz	??_abs^0,f,c
  8168   004A7E  2A0D               	incf	(??_abs+1)^0,f,c
  8169   004A80  C00C  F00A         	movff	??_abs,?_abs
  8170   004A84  C00D  F00B         	movff	??_abs+1,?_abs+1
  8171   004A88                     l2555:
  8172   004A88  0012               	return		;funcret
  8173   004A8A                     __end_of_abs:
  8174                           	callstack 0
  8175                           
  8176 ;; *************** function ___awmod *****************
  8177 ;; Defined at:
  8178 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  dividend        2    3[COMRAM] int 
  8181 ;;  divisor         2    5[COMRAM] int 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  sign            1    8[COMRAM] unsigned char 
  8184 ;;  counter         1    7[COMRAM] unsigned char 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  2    3[COMRAM] int 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;Total ram usage:        6 bytes
  8199 ;; Hardware stack levels used: 1
  8200 ;; Hardware stack levels required when called: 3
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_vfpfcnvrt
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text53
  8209   003918                     __ptext53:
  8210                           	callstack 0
  8211   003918                     ___awmod:
  8212                           	callstack 23
  8213   003918  0E00               	movlw	0
  8214   00391A  6E09               	movwf	___awmod@sign^0,c
  8215   00391C  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  8216   00391E  EF95  F01C         	goto	u9900
  8217   003922  EF93  F01C         	goto	u9901
  8218   003926                     u9901:
  8219   003926  EF9B  F01C         	goto	l9480
  8220   00392A                     u9900:
  8221   00392A  6C04               	negf	___awmod@dividend^0,c
  8222   00392C  1E05               	comf	(___awmod@dividend+1)^0,f,c
  8223   00392E  B0D8               	btfsc	status,0,c
  8224   003930  2A05               	incf	(___awmod@dividend+1)^0,f,c
  8225   003932  0E01               	movlw	1
  8226   003934  6E09               	movwf	___awmod@sign^0,c
  8227   003936                     l9480:
  8228   003936  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  8229   003938  EFA2  F01C         	goto	u9910
  8230   00393C  EFA0  F01C         	goto	u9911
  8231   003940                     u9911:
  8232   003940  EFA6  F01C         	goto	l9484
  8233   003944                     u9910:
  8234   003944  6C06               	negf	___awmod@divisor^0,c
  8235   003946  1E07               	comf	(___awmod@divisor+1)^0,f,c
  8236   003948  B0D8               	btfsc	status,0,c
  8237   00394A  2A07               	incf	(___awmod@divisor+1)^0,f,c
  8238   00394C                     l9484:
  8239   00394C  5006               	movf	___awmod@divisor^0,w,c
  8240   00394E  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  8241   003950  B4D8               	btfsc	status,2,c
  8242   003952  EFAD  F01C         	goto	u9921
  8243   003956  EFAF  F01C         	goto	u9920
  8244   00395A                     u9921:
  8245   00395A  EFD3  F01C         	goto	l9500
  8246   00395E                     u9920:
  8247   00395E  0E01               	movlw	1
  8248   003960  6E08               	movwf	___awmod@counter^0,c
  8249   003962  EFB7  F01C         	goto	l9490
  8250   003966                     l9488:
  8251   003966  90D8               	bcf	status,0,c
  8252   003968  3606               	rlcf	___awmod@divisor^0,f,c
  8253   00396A  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  8254   00396C  2A08               	incf	___awmod@counter^0,f,c
  8255   00396E                     l9490:
  8256   00396E  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  8257   003970  EFBC  F01C         	goto	u9931
  8258   003974  EFBE  F01C         	goto	u9930
  8259   003978                     u9931:
  8260   003978  EFB3  F01C         	goto	l9488
  8261   00397C                     u9930:
  8262   00397C                     l9492:
  8263   00397C  5006               	movf	___awmod@divisor^0,w,c
  8264   00397E  5C04               	subwf	___awmod@dividend^0,w,c
  8265   003980  5007               	movf	(___awmod@divisor+1)^0,w,c
  8266   003982  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  8267   003984  A0D8               	btfss	status,0,c
  8268   003986  EFC7  F01C         	goto	u9941
  8269   00398A  EFC9  F01C         	goto	u9940
  8270   00398E                     u9941:
  8271   00398E  EFCD  F01C         	goto	l9496
  8272   003992                     u9940:
  8273   003992  5006               	movf	___awmod@divisor^0,w,c
  8274   003994  5E04               	subwf	___awmod@dividend^0,f,c
  8275   003996  5007               	movf	(___awmod@divisor+1)^0,w,c
  8276   003998  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  8277   00399A                     l9496:
  8278   00399A  90D8               	bcf	status,0,c
  8279   00399C  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  8280   00399E  3206               	rrcf	___awmod@divisor^0,f,c
  8281   0039A0  2E08               	decfsz	___awmod@counter^0,f,c
  8282   0039A2  EFBE  F01C         	goto	l9492
  8283   0039A6                     l9500:
  8284   0039A6  5009               	movf	___awmod@sign^0,w,c
  8285   0039A8  B4D8               	btfsc	status,2,c
  8286   0039AA  EFD9  F01C         	goto	u9951
  8287   0039AE  EFDB  F01C         	goto	u9950
  8288   0039B2                     u9951:
  8289   0039B2  EFDF  F01C         	goto	l9504
  8290   0039B6                     u9950:
  8291   0039B6  6C04               	negf	___awmod@dividend^0,c
  8292   0039B8  1E05               	comf	(___awmod@dividend+1)^0,f,c
  8293   0039BA  B0D8               	btfsc	status,0,c
  8294   0039BC  2A05               	incf	(___awmod@dividend+1)^0,f,c
  8295   0039BE                     l9504:
  8296   0039BE  C004  F004         	movff	___awmod@dividend,?___awmod
  8297   0039C2  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  8298   0039C6  0012               	return		;funcret
  8299   0039C8                     __end_of___awmod:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function ___awdiv *****************
  8303 ;; Defined at:
  8304 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  dividend        2    3[COMRAM] int 
  8307 ;;  divisor         2    5[COMRAM] int 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;  quotient        2    9[COMRAM] int 
  8310 ;;  sign            1    8[COMRAM] unsigned char 
  8311 ;;  counter         1    7[COMRAM] unsigned char 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  2    3[COMRAM] int 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;Total ram usage:        8 bytes
  8326 ;; Hardware stack levels used: 1
  8327 ;; Hardware stack levels required when called: 3
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_vfpfcnvrt
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text54
  8336   003626                     __ptext54:
  8337                           	callstack 0
  8338   003626                     ___awdiv:
  8339                           	callstack 23
  8340   003626  0E00               	movlw	0
  8341   003628  6E09               	movwf	___awdiv@sign^0,c
  8342   00362A  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  8343   00362C  EF1C  F01B         	goto	u9840
  8344   003630  EF1A  F01B         	goto	u9841
  8345   003634                     u9841:
  8346   003634  EF22  F01B         	goto	l9436
  8347   003638                     u9840:
  8348   003638  6C06               	negf	___awdiv@divisor^0,c
  8349   00363A  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  8350   00363C  B0D8               	btfsc	status,0,c
  8351   00363E  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  8352   003640  0E01               	movlw	1
  8353   003642  6E09               	movwf	___awdiv@sign^0,c
  8354   003644                     l9436:
  8355   003644  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  8356   003646  EF29  F01B         	goto	u9850
  8357   00364A  EF27  F01B         	goto	u9851
  8358   00364E                     u9851:
  8359   00364E  EF2F  F01B         	goto	l9442
  8360   003652                     u9850:
  8361   003652  6C04               	negf	___awdiv@dividend^0,c
  8362   003654  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  8363   003656  B0D8               	btfsc	status,0,c
  8364   003658  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  8365   00365A  0E01               	movlw	1
  8366   00365C  1A09               	xorwf	___awdiv@sign^0,f,c
  8367   00365E                     l9442:
  8368   00365E  0E00               	movlw	0
  8369   003660  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  8370   003662  0E00               	movlw	0
  8371   003664  6E0A               	movwf	___awdiv@quotient^0,c
  8372   003666  5006               	movf	___awdiv@divisor^0,w,c
  8373   003668  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  8374   00366A  B4D8               	btfsc	status,2,c
  8375   00366C  EF3A  F01B         	goto	u9861
  8376   003670  EF3C  F01B         	goto	u9860
  8377   003674                     u9861:
  8378   003674  EF64  F01B         	goto	l9464
  8379   003678                     u9860:
  8380   003678  0E01               	movlw	1
  8381   00367A  6E08               	movwf	___awdiv@counter^0,c
  8382   00367C  EF44  F01B         	goto	l9450
  8383   003680                     l9448:
  8384   003680  90D8               	bcf	status,0,c
  8385   003682  3606               	rlcf	___awdiv@divisor^0,f,c
  8386   003684  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  8387   003686  2A08               	incf	___awdiv@counter^0,f,c
  8388   003688                     l9450:
  8389   003688  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  8390   00368A  EF49  F01B         	goto	u9871
  8391   00368E  EF4B  F01B         	goto	u9870
  8392   003692                     u9871:
  8393   003692  EF40  F01B         	goto	l9448
  8394   003696                     u9870:
  8395   003696                     l9452:
  8396   003696  90D8               	bcf	status,0,c
  8397   003698  360A               	rlcf	___awdiv@quotient^0,f,c
  8398   00369A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  8399   00369C  5006               	movf	___awdiv@divisor^0,w,c
  8400   00369E  5C04               	subwf	___awdiv@dividend^0,w,c
  8401   0036A0  5007               	movf	(___awdiv@divisor+1)^0,w,c
  8402   0036A2  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  8403   0036A4  A0D8               	btfss	status,0,c
  8404   0036A6  EF57  F01B         	goto	u9881
  8405   0036AA  EF59  F01B         	goto	u9880
  8406   0036AE                     u9881:
  8407   0036AE  EF5E  F01B         	goto	l9460
  8408   0036B2                     u9880:
  8409   0036B2  5006               	movf	___awdiv@divisor^0,w,c
  8410   0036B4  5E04               	subwf	___awdiv@dividend^0,f,c
  8411   0036B6  5007               	movf	(___awdiv@divisor+1)^0,w,c
  8412   0036B8  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  8413   0036BA  800A               	bsf	___awdiv@quotient^0,0,c
  8414   0036BC                     l9460:
  8415   0036BC  90D8               	bcf	status,0,c
  8416   0036BE  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  8417   0036C0  3206               	rrcf	___awdiv@divisor^0,f,c
  8418   0036C2  2E08               	decfsz	___awdiv@counter^0,f,c
  8419   0036C4  EF4B  F01B         	goto	l9452
  8420   0036C8                     l9464:
  8421   0036C8  5009               	movf	___awdiv@sign^0,w,c
  8422   0036CA  B4D8               	btfsc	status,2,c
  8423   0036CC  EF6A  F01B         	goto	u9891
  8424   0036D0  EF6C  F01B         	goto	u9890
  8425   0036D4                     u9891:
  8426   0036D4  EF70  F01B         	goto	l9468
  8427   0036D8                     u9890:
  8428   0036D8  6C0A               	negf	___awdiv@quotient^0,c
  8429   0036DA  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  8430   0036DC  B0D8               	btfsc	status,0,c
  8431   0036DE  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  8432   0036E0                     l9468:
  8433   0036E0  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  8434   0036E4  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  8435   0036E8  0012               	return		;funcret
  8436   0036EA                     __end_of___awdiv:
  8437                           	callstack 0
  8438                           
  8439 ;; *************** function _memset *****************
  8440 ;; Defined at:
  8441 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;  dest            2    3[COMRAM] PTR void 
  8444 ;;		 -> string(6), 
  8445 ;;  c               2    5[COMRAM] int 
  8446 ;;  n               2    7[COMRAM] unsigned int 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  p               2    9[COMRAM] PTR unsigned char 
  8449 ;;		 -> string(6), 
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  2    3[COMRAM] PTR void 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8459 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8463 ;;Total ram usage:        8 bytes
  8464 ;; Hardware stack levels used: 1
  8465 ;; Hardware stack levels required when called: 3
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_convert_uint8_to_string
  8470 ;;		_convert_uint16_to_string
  8471 ;;		_convert_uint32_to_string
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text55
  8476   0049E8                     __ptext55:
  8477                           	callstack 0
  8478   0049E8                     _memset:
  8479                           	callstack 26
  8480   0049E8  C004  F00A         	movff	memset@dest,memset@p
  8481   0049EC  C005  F00B         	movff	memset@dest+1,memset@p+1
  8482   0049F0  EF02  F025         	goto	l10482
  8483   0049F4                     l10478:
  8484   0049F4  C00A  FFD9         	movff	memset@p,fsr2l
  8485   0049F8  C00B  FFDA         	movff	memset@p+1,fsr2h
  8486   0049FC  C006  FFDF         	movff	memset@c,indf2
  8487   004A00  4A0A               	infsnz	memset@p^0,f,c
  8488   004A02  2A0B               	incf	(memset@p+1)^0,f,c
  8489   004A04                     l10482:
  8490   004A04  0608               	decf	memset@n^0,f,c
  8491   004A06  A0D8               	btfss	status,0,c
  8492   004A08  0609               	decf	(memset@n+1)^0,f,c
  8493   004A0A  2808               	incf	memset@n^0,w,c
  8494   004A0C  E106               	bnz	u11301
  8495   004A0E  2809               	incf	(memset@n+1)^0,w,c
  8496   004A10  A4D8               	btfss	status,2,c
  8497   004A12  EF0D  F025         	goto	u11301
  8498   004A16  EF0F  F025         	goto	u11300
  8499   004A1A                     u11301:
  8500   004A1A  EFFA  F024         	goto	l10478
  8501   004A1E                     u11300:
  8502   004A1E  0012               	return		;funcret
  8503   004A20                     __end_of_memset:
  8504                           	callstack 0
  8505                           
  8506 ;; *************** function _ccp1_pwm_start *****************
  8507 ;; Defined at:
  8508 ;;		line 129 in file "MKAL_layer/CCP1/hal_ccp1.c"
  8509 ;; Parameters:    Size  Location     Type
  8510 ;;		None
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  ret             1    3[COMRAM] unsigned char 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      unsigned char 
  8515 ;; Registers used:
  8516 ;;		wreg, status,2
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8526 ;;Total ram usage:        1 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 3
  8529 ;; This function calls:
  8530 ;;		Nothing
  8531 ;; This function is called by:
  8532 ;;		_main
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text56
  8537   004CAA                     __ptext56:
  8538                           	callstack 0
  8539   004CAA                     _ccp1_pwm_start:
  8540                           	callstack 27
  8541   004CAA                     
  8542                           ;MKAL_layer/CCP1/hal_ccp1.c: 130:     Std_ReturnType ret = (Std_ReturnType)0x00;
  8543   004CAA  0E00               	movlw	0
  8544   004CAC  6E04               	movwf	ccp1_pwm_start@ret^0,c
  8545                           
  8546                           ;MKAL_layer/CCP1/hal_ccp1.c: 132:     (CCP1CONbits.CCP1M =0x0E);
  8547   004CAE  50BD               	movf	189,w,c	;volatile
  8548   004CB0  0BF0               	andlw	-16
  8549   004CB2  090E               	iorlw	14
  8550   004CB4  6EBD               	movwf	189,c	;volatile
  8551                           
  8552                           ;MKAL_layer/CCP1/hal_ccp1.c: 133:     ret =(Std_ReturnType)0x01;
  8553   004CB6  0E01               	movlw	1
  8554   004CB8  6E04               	movwf	ccp1_pwm_start@ret^0,c
  8555   004CBA  0012               	return		;funcret
  8556   004CBC                     __end_of_ccp1_pwm_start:
  8557                           	callstack 0
  8558                           
  8559 ;; *************** function _ccp1_pwm_set_stop *****************
  8560 ;; Defined at:
  8561 ;;		line 137 in file "MKAL_layer/CCP1/hal_ccp1.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  ret             1    3[COMRAM] unsigned char 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      unsigned char 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;Total ram usage:        1 bytes
  8580 ;; Hardware stack levels used: 1
  8581 ;; Hardware stack levels required when called: 3
  8582 ;; This function calls:
  8583 ;;		Nothing
  8584 ;; This function is called by:
  8585 ;;		_main
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text57
  8590   004CBC                     __ptext57:
  8591                           	callstack 0
  8592   004CBC                     _ccp1_pwm_set_stop:
  8593                           	callstack 27
  8594   004CBC                     
  8595                           ;MKAL_layer/CCP1/hal_ccp1.c: 138:     Std_ReturnType ret = (Std_ReturnType)0x00;
  8596   004CBC  0E00               	movlw	0
  8597   004CBE  6E04               	movwf	ccp1_pwm_set_stop@ret^0,c
  8598                           
  8599                           ;MKAL_layer/CCP1/hal_ccp1.c: 140:     (CCP1CONbits.CCP1M =0);
  8600   004CC0  0EF0               	movlw	-16
  8601   004CC2  16BD               	andwf	189,f,c	;volatile
  8602                           
  8603                           ;MKAL_layer/CCP1/hal_ccp1.c: 141:     ret =(Std_ReturnType)0x01;
  8604   004CC4  0E01               	movlw	1
  8605   004CC6  6E04               	movwf	ccp1_pwm_set_stop@ret^0,c
  8606   004CC8  0012               	return		;funcret
  8607   004CCA                     __end_of_ccp1_pwm_set_stop:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _ccp1_pwm_set_duty *****************
  8611 ;; Defined at:
  8612 ;;		line 118 in file "MKAL_layer/CCP1/hal_ccp1.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  duty            4   93[COMRAM] const float 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  duty_           4   99[COMRAM] float 
  8617 ;;  l_duty_temp     2  107[COMRAM] unsigned short 
  8618 ;;  ret             1    0        unsigned char 
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1    wreg      unsigned char 
  8621 ;; Registers used:
  8622 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8623 ;; Tracked objects:
  8624 ;;		On entry : 0/0
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8629 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;Total ram usage:       16 bytes
  8633 ;; Hardware stack levels used: 1
  8634 ;; Hardware stack levels required when called: 5
  8635 ;; This function calls:
  8636 ;;		___fladd
  8637 ;;		___fldiv
  8638 ;;		___flmul
  8639 ;;		___flsub
  8640 ;;		___fltol
  8641 ;;		___xxtofl
  8642 ;; This function is called by:
  8643 ;;		_main
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text58
  8648   002FDC                     __ptext58:
  8649                           	callstack 0
  8650   002FDC                     _ccp1_pwm_set_duty:
  8651                           	callstack 25
  8652   002FDC                     
  8653                           ;MKAL_layer/CCP1/hal_ccp1.c: 120:     float duty_ =100 - duty;
  8654   002FDC  0E00               	movlw	0
  8655   002FDE  6E3B               	movwf	___flsub@b^0,c
  8656   002FE0  0E00               	movlw	0
  8657   002FE2  6E3C               	movwf	(___flsub@b+1)^0,c
  8658   002FE4  0EC8               	movlw	200
  8659   002FE6  6E3D               	movwf	(___flsub@b+2)^0,c
  8660   002FE8  0E42               	movlw	66
  8661   002FEA  6E3E               	movwf	(___flsub@b+3)^0,c
  8662   002FEC  C05E  F03F         	movff	ccp1_pwm_set_duty@duty,___flsub@a
  8663   002FF0  C05F  F040         	movff	ccp1_pwm_set_duty@duty+1,___flsub@a+1
  8664   002FF4  C060  F041         	movff	ccp1_pwm_set_duty@duty+2,___flsub@a+2
  8665   002FF8  C061  F042         	movff	ccp1_pwm_set_duty@duty+3,___flsub@a+3
  8666   002FFC  EC9D  F023         	call	___flsub	;wreg free
  8667   003000  C03B  F064         	movff	?___flsub,ccp1_pwm_set_duty@duty_
  8668   003004  C03C  F065         	movff	?___flsub+1,ccp1_pwm_set_duty@duty_+1
  8669   003008  C03D  F066         	movff	?___flsub+2,ccp1_pwm_set_duty@duty_+2
  8670   00300C  C03E  F067         	movff	?___flsub+3,ccp1_pwm_set_duty@duty_+3
  8671   003010                     
  8672                           ;MKAL_layer/CCP1/hal_ccp1.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
  8673   003010  0E00               	movlw	0
  8674   003012  6E3F               	movwf	___flmul@a^0,c
  8675   003014  0E00               	movlw	0
  8676   003016  6E40               	movwf	(___flmul@a+1)^0,c
  8677   003018  0E80               	movlw	128
  8678   00301A  6E41               	movwf	(___flmul@a+2)^0,c
  8679   00301C  0E40               	movlw	64
  8680   00301E  6E42               	movwf	(___flmul@a+3)^0,c
  8681   003020  0E00               	movlw	0
  8682   003022  6E2F               	movwf	___fladd@a^0,c
  8683   003024  0E00               	movlw	0
  8684   003026  6E30               	movwf	(___fladd@a+1)^0,c
  8685   003028  0E80               	movlw	128
  8686   00302A  6E31               	movwf	(___fladd@a+2)^0,c
  8687   00302C  0E3F               	movlw	63
  8688   00302E  6E32               	movwf	(___fladd@a+3)^0,c
  8689   003030  50CB               	movf	203,w,c	;volatile
  8690   003032  6E04               	movwf	___xxtofl@val^0,c
  8691   003034  6A05               	clrf	(___xxtofl@val+1)^0,c
  8692   003036  6A06               	clrf	(___xxtofl@val+2)^0,c
  8693   003038  6A07               	clrf	(___xxtofl@val+3)^0,c
  8694   00303A  0E00               	movlw	0
  8695   00303C  EC28  F015         	call	___xxtofl
  8696   003040  C004  F02B         	movff	?___xxtofl,___fladd@b
  8697   003044  C005  F02C         	movff	?___xxtofl+1,___fladd@b+1
  8698   003048  C006  F02D         	movff	?___xxtofl+2,___fladd@b+2
  8699   00304C  C007  F02E         	movff	?___xxtofl+3,___fladd@b+3
  8700   003050  ECF9  F00A         	call	___fladd	;wreg free
  8701   003054  C02B  F03B         	movff	?___fladd,___flmul@b
  8702   003058  C02C  F03C         	movff	?___fladd+1,___flmul@b+1
  8703   00305C  C02D  F03D         	movff	?___fladd+2,___flmul@b+2
  8704   003060  C02E  F03E         	movff	?___fladd+3,___flmul@b+3
  8705   003064  EC59  F00D         	call	___flmul	;wreg free
  8706   003068  C03B  F068         	movff	?___flmul,_ccp1_pwm_set_duty$5568
  8707   00306C  C03C  F069         	movff	?___flmul+1,_ccp1_pwm_set_duty$5568+1
  8708   003070  C03D  F06A         	movff	?___flmul+2,_ccp1_pwm_set_duty$5568+2
  8709   003074  C03E  F06B         	movff	?___flmul+3,_ccp1_pwm_set_duty$5568+3
  8710   003078                     
  8711                           ;MKAL_layer/CCP1/hal_ccp1.c: 122:     l_duty_temp = (uint16)((float)4 * ((float)PR2 + 1.
      +                          0) * (float)((float)duty_ / 100.0));
  8712   003078  0E00               	movlw	0
  8713   00307A  6E16               	movwf	___fldiv@a^0,c
  8714   00307C  0E00               	movlw	0
  8715   00307E  6E17               	movwf	(___fldiv@a+1)^0,c
  8716   003080  0EC8               	movlw	200
  8717   003082  6E18               	movwf	(___fldiv@a+2)^0,c
  8718   003084  0E42               	movlw	66
  8719   003086  6E19               	movwf	(___fldiv@a+3)^0,c
  8720   003088  C064  F012         	movff	ccp1_pwm_set_duty@duty_,___fldiv@b
  8721   00308C  C065  F013         	movff	ccp1_pwm_set_duty@duty_+1,___fldiv@b+1
  8722   003090  C066  F014         	movff	ccp1_pwm_set_duty@duty_+2,___fldiv@b+2
  8723   003094  C067  F015         	movff	ccp1_pwm_set_duty@duty_+3,___fldiv@b+3
  8724   003098  EC69  F011         	call	___fldiv	;wreg free
  8725   00309C  C012  F03F         	movff	?___fldiv,___flmul@a
  8726   0030A0  C013  F040         	movff	?___fldiv+1,___flmul@a+1
  8727   0030A4  C014  F041         	movff	?___fldiv+2,___flmul@a+2
  8728   0030A8  C015  F042         	movff	?___fldiv+3,___flmul@a+3
  8729   0030AC  C068  F03B         	movff	_ccp1_pwm_set_duty$5568,___flmul@b
  8730   0030B0  C069  F03C         	movff	_ccp1_pwm_set_duty$5568+1,___flmul@b+1
  8731   0030B4  C06A  F03D         	movff	_ccp1_pwm_set_duty$5568+2,___flmul@b+2
  8732   0030B8  C06B  F03E         	movff	_ccp1_pwm_set_duty$5568+3,___flmul@b+3
  8733   0030BC  EC59  F00D         	call	___flmul	;wreg free
  8734   0030C0  C03B  F054         	movff	?___flmul,___fltol@f1
  8735   0030C4  C03C  F055         	movff	?___flmul+1,___fltol@f1+1
  8736   0030C8  C03D  F056         	movff	?___flmul+2,___fltol@f1+2
  8737   0030CC  C03E  F057         	movff	?___flmul+3,___fltol@f1+3
  8738   0030D0  ECA9  F019         	call	___fltol	;wreg free
  8739   0030D4  C054  F06C         	movff	?___fltol,ccp1_pwm_set_duty@l_duty_temp
  8740   0030D8  C055  F06D         	movff	?___fltol+1,ccp1_pwm_set_duty@l_duty_temp+1
  8741   0030DC                     
  8742                           ;MKAL_layer/CCP1/hal_ccp1.c: 123:     CCP1CONbits.DC1B = (uint8)(l_duty_temp & 0x0003);
  8743   0030DC  C06C  F062         	movff	ccp1_pwm_set_duty@l_duty_temp,??_ccp1_pwm_set_duty
  8744   0030E0  0E03               	movlw	3
  8745   0030E2  1662               	andwf	??_ccp1_pwm_set_duty^0,f,c
  8746   0030E4  3A62               	swapf	??_ccp1_pwm_set_duty^0,f,c
  8747   0030E6  50BD               	movf	189,w,c	;volatile
  8748   0030E8  1862               	xorwf	??_ccp1_pwm_set_duty^0,w,c
  8749   0030EA  0BCF               	andlw	-49
  8750   0030EC  1862               	xorwf	??_ccp1_pwm_set_duty^0,w,c
  8751   0030EE  6EBD               	movwf	189,c	;volatile
  8752   0030F0                     
  8753                           ;MKAL_layer/CCP1/hal_ccp1.c: 124:     CCPR1L = (uint8)(l_duty_temp >> 2);
  8754   0030F0  C06C  F062         	movff	ccp1_pwm_set_duty@l_duty_temp,??_ccp1_pwm_set_duty
  8755   0030F4  C06D  F063         	movff	ccp1_pwm_set_duty@l_duty_temp+1,??_ccp1_pwm_set_duty+1
  8756   0030F8  90D8               	bcf	status,0,c
  8757   0030FA  3263               	rrcf	(??_ccp1_pwm_set_duty+1)^0,f,c
  8758   0030FC  3262               	rrcf	??_ccp1_pwm_set_duty^0,f,c
  8759   0030FE  90D8               	bcf	status,0,c
  8760   003100  3263               	rrcf	(??_ccp1_pwm_set_duty+1)^0,f,c
  8761   003102  3262               	rrcf	??_ccp1_pwm_set_duty^0,f,c
  8762   003104  5062               	movf	??_ccp1_pwm_set_duty^0,w,c
  8763   003106  6EBE               	movwf	190,c	;volatile
  8764   003108  0012               	return		;funcret
  8765   00310A                     __end_of_ccp1_pwm_set_duty:
  8766                           	callstack 0
  8767                           
  8768 ;; *************** function ___xxtofl *****************
  8769 ;; Defined at:
  8770 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  sign            1    wreg     unsigned char 
  8773 ;;  val             4    3[COMRAM] long 
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  sign            1   11[COMRAM] unsigned char 
  8776 ;;  arg             4   13[COMRAM] unsigned long 
  8777 ;;  exp             1   12[COMRAM] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  4    3[COMRAM] unsigned char 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;Total ram usage:       14 bytes
  8792 ;; Hardware stack levels used: 1
  8793 ;; Hardware stack levels required when called: 3
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_ccp1_pwm_set_duty
  8798 ;;		_I2C_Master_Mode_Clock_Configurations
  8799 ;;		_main
  8800 ;;		_ccp2_pwm_set_duty
  8801 ;;		_baudrate_calculate
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text59
  8806   002A50                     __ptext59:
  8807                           	callstack 0
  8808   002A50                     ___xxtofl:
  8809                           	callstack 24
  8810                           
  8811                           ;incstack = 0
  8812                           ;___xxtofl@sign stored from wreg
  8813   002A50  6E0C               	movwf	___xxtofl@sign^0,c
  8814   002A52  500C               	movf	___xxtofl@sign^0,w,c
  8815   002A54  B4D8               	btfsc	status,2,c
  8816   002A56  EF2F  F015         	goto	u10751
  8817   002A5A  EF31  F015         	goto	u10750
  8818   002A5E                     u10751:
  8819   002A5E  EF53  F015         	goto	l2475
  8820   002A62                     u10750:
  8821   002A62  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8822   002A64  EF38  F015         	goto	u10760
  8823   002A68  EF36  F015         	goto	u10761
  8824   002A6C                     u10761:
  8825   002A6C  EF53  F015         	goto	l2475
  8826   002A70                     u10760:
  8827   002A70  C004  F008         	movff	___xxtofl@val,??___xxtofl
  8828   002A74  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  8829   002A78  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  8830   002A7C  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  8831   002A80  1E08               	comf	??___xxtofl^0,f,c
  8832   002A82  1E09               	comf	(??___xxtofl+1)^0,f,c
  8833   002A84  1E0A               	comf	(??___xxtofl+2)^0,f,c
  8834   002A86  1E0B               	comf	(??___xxtofl+3)^0,f,c
  8835   002A88  2A08               	incf	??___xxtofl^0,f,c
  8836   002A8A  0E00               	movlw	0
  8837   002A8C  2209               	addwfc	(??___xxtofl+1)^0,f,c
  8838   002A8E  220A               	addwfc	(??___xxtofl+2)^0,f,c
  8839   002A90  220B               	addwfc	(??___xxtofl+3)^0,f,c
  8840   002A92  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  8841   002A96  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  8842   002A9A  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  8843   002A9E  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  8844   002AA2  EF5B  F015         	goto	l9976
  8845   002AA6                     l2475:
  8846   002AA6  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  8847   002AAA  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8848   002AAE  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8849   002AB2  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8850   002AB6                     l9976:
  8851   002AB6  5004               	movf	___xxtofl@val^0,w,c
  8852   002AB8  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  8853   002ABA  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  8854   002ABC  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  8855   002ABE  A4D8               	btfss	status,2,c
  8856   002AC0  EF64  F015         	goto	u10771
  8857   002AC4  EF66  F015         	goto	u10770
  8858   002AC8                     u10771:
  8859   002AC8  EF70  F015         	goto	l9982
  8860   002ACC                     u10770:
  8861   002ACC  0E00               	movlw	0
  8862   002ACE  6E04               	movwf	?___xxtofl^0,c
  8863   002AD0  0E00               	movlw	0
  8864   002AD2  6E05               	movwf	(?___xxtofl+1)^0,c
  8865   002AD4  0E00               	movlw	0
  8866   002AD6  6E06               	movwf	(?___xxtofl+2)^0,c
  8867   002AD8  0E00               	movlw	0
  8868   002ADA  6E07               	movwf	(?___xxtofl+3)^0,c
  8869   002ADC  EF01  F016         	goto	l2478
  8870   002AE0                     l9982:
  8871   002AE0  0E96               	movlw	150
  8872   002AE2  6E0D               	movwf	___xxtofl@exp^0,c
  8873   002AE4  EF7A  F015         	goto	l9986
  8874   002AE8                     l9984:
  8875   002AE8  2A0D               	incf	___xxtofl@exp^0,f,c
  8876   002AEA  90D8               	bcf	status,0,c
  8877   002AEC  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8878   002AEE  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8879   002AF0  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8880   002AF2  320E               	rrcf	___xxtofl@arg^0,f,c
  8881   002AF4                     l9986:
  8882   002AF4  0E00               	movlw	0
  8883   002AF6  140E               	andwf	___xxtofl@arg^0,w,c
  8884   002AF8  6E08               	movwf	??___xxtofl^0,c
  8885   002AFA  0E00               	movlw	0
  8886   002AFC  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8887   002AFE  6E09               	movwf	(??___xxtofl+1)^0,c
  8888   002B00  0E00               	movlw	0
  8889   002B02  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8890   002B04  6E0A               	movwf	(??___xxtofl+2)^0,c
  8891   002B06  0EFE               	movlw	254
  8892   002B08  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8893   002B0A  6E0B               	movwf	(??___xxtofl+3)^0,c
  8894   002B0C  5008               	movf	??___xxtofl^0,w,c
  8895   002B0E  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8896   002B10  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8897   002B12  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8898   002B14  A4D8               	btfss	status,2,c
  8899   002B16  EF8F  F015         	goto	u10781
  8900   002B1A  EF91  F015         	goto	u10780
  8901   002B1E                     u10781:
  8902   002B1E  EF74  F015         	goto	l9984
  8903   002B22                     u10780:
  8904   002B22  EF9F  F015         	goto	l2482
  8905   002B26                     l9988:
  8906   002B26  2A0D               	incf	___xxtofl@exp^0,f,c
  8907   002B28  0E01               	movlw	1
  8908   002B2A  260E               	addwf	___xxtofl@arg^0,f,c
  8909   002B2C  0E00               	movlw	0
  8910   002B2E  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  8911   002B30  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  8912   002B32  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  8913   002B34  90D8               	bcf	status,0,c
  8914   002B36  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8915   002B38  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8916   002B3A  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8917   002B3C  320E               	rrcf	___xxtofl@arg^0,f,c
  8918   002B3E                     l2482:
  8919   002B3E  0E00               	movlw	0
  8920   002B40  140E               	andwf	___xxtofl@arg^0,w,c
  8921   002B42  6E08               	movwf	??___xxtofl^0,c
  8922   002B44  0E00               	movlw	0
  8923   002B46  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8924   002B48  6E09               	movwf	(??___xxtofl+1)^0,c
  8925   002B4A  0E00               	movlw	0
  8926   002B4C  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8927   002B4E  6E0A               	movwf	(??___xxtofl+2)^0,c
  8928   002B50  0EFF               	movlw	255
  8929   002B52  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8930   002B54  6E0B               	movwf	(??___xxtofl+3)^0,c
  8931   002B56  5008               	movf	??___xxtofl^0,w,c
  8932   002B58  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8933   002B5A  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8934   002B5C  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8935   002B5E  A4D8               	btfss	status,2,c
  8936   002B60  EFB4  F015         	goto	u10791
  8937   002B64  EFB6  F015         	goto	u10790
  8938   002B68                     u10791:
  8939   002B68  EF93  F015         	goto	l9988
  8940   002B6C                     u10790:
  8941   002B6C  EFBE  F015         	goto	l9996
  8942   002B70                     l9994:
  8943   002B70  060D               	decf	___xxtofl@exp^0,f,c
  8944   002B72  90D8               	bcf	status,0,c
  8945   002B74  360E               	rlcf	___xxtofl@arg^0,f,c
  8946   002B76  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  8947   002B78  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  8948   002B7A  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  8949   002B7C                     l9996:
  8950   002B7C  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  8951   002B7E  EFC3  F015         	goto	u10801
  8952   002B82  EFC5  F015         	goto	u10800
  8953   002B86                     u10801:
  8954   002B86  EFCD  F015         	goto	l2489
  8955   002B8A                     u10800:
  8956   002B8A  0E02               	movlw	2
  8957   002B8C  600D               	cpfslt	___xxtofl@exp^0,c
  8958   002B8E  EFCB  F015         	goto	u10811
  8959   002B92  EFCD  F015         	goto	u10810
  8960   002B96                     u10811:
  8961   002B96  EFB8  F015         	goto	l9994
  8962   002B9A                     u10810:
  8963   002B9A                     l2489:
  8964   002B9A  B00D               	btfsc	___xxtofl@exp^0,0,c
  8965   002B9C  EFD2  F015         	goto	u10821
  8966   002BA0  EFD4  F015         	goto	u10820
  8967   002BA4                     u10821:
  8968   002BA4  EFD5  F015         	goto	l10002
  8969   002BA8                     u10820:
  8970   002BA8  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  8971   002BAA                     l10002:
  8972   002BAA  90D8               	bcf	status,0,c
  8973   002BAC  320D               	rrcf	___xxtofl@exp^0,f,c
  8974   002BAE  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  8975   002BB2  6A09               	clrf	(??___xxtofl+1)^0,c
  8976   002BB4  6A0A               	clrf	(??___xxtofl+2)^0,c
  8977   002BB6  6A0B               	clrf	(??___xxtofl+3)^0,c
  8978   002BB8  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  8979   002BBC  6A0A               	clrf	(??___xxtofl+2)^0,c
  8980   002BBE  6A09               	clrf	(??___xxtofl+1)^0,c
  8981   002BC0  6A08               	clrf	??___xxtofl^0,c
  8982   002BC2  5008               	movf	??___xxtofl^0,w,c
  8983   002BC4  120E               	iorwf	___xxtofl@arg^0,f,c
  8984   002BC6  5009               	movf	(??___xxtofl+1)^0,w,c
  8985   002BC8  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  8986   002BCA  500A               	movf	(??___xxtofl+2)^0,w,c
  8987   002BCC  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  8988   002BCE  500B               	movf	(??___xxtofl+3)^0,w,c
  8989   002BD0  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  8990   002BD2  500C               	movf	___xxtofl@sign^0,w,c
  8991   002BD4  B4D8               	btfsc	status,2,c
  8992   002BD6  EFEF  F015         	goto	u10831
  8993   002BDA  EFF1  F015         	goto	u10830
  8994   002BDE                     u10831:
  8995   002BDE  EFF9  F015         	goto	l10012
  8996   002BE2                     u10830:
  8997   002BE2  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8998   002BE4  EFF8  F015         	goto	u10840
  8999   002BE8  EFF6  F015         	goto	u10841
  9000   002BEC                     u10841:
  9001   002BEC  EFF9  F015         	goto	l10012
  9002   002BF0                     u10840:
  9003   002BF0  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  9004   002BF2                     l10012:
  9005   002BF2  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  9006   002BF6  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  9007   002BFA  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  9008   002BFE  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  9009   002C02                     l2478:
  9010   002C02  0012               	return		;funcret
  9011   002C04                     __end_of___xxtofl:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function ___fltol *****************
  9015 ;; Defined at:
  9016 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  f1              4   83[COMRAM] unsigned char 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  exp1            1   92[COMRAM] unsigned char 
  9021 ;;  sign1           1   91[COMRAM] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  4   83[COMRAM] long 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9035 ;;Total ram usage:       10 bytes
  9036 ;; Hardware stack levels used: 1
  9037 ;; Hardware stack levels required when called: 3
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_ccp1_pwm_set_duty
  9042 ;;		_I2C_Master_Mode_Clock_Configurations
  9043 ;;		_ccp2_pwm_set_duty
  9044 ;;		_baudrate_calculate
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text60
  9049   003352                     __ptext60:
  9050                           	callstack 0
  9051   003352                     ___fltol:
  9052                           	callstack 24
  9053   003352  3456               	rlcf	(___fltol@f1+2)^0,w,c
  9054   003354  3457               	rlcf	(___fltol@f1+3)^0,w,c
  9055   003356  6E5D               	movwf	___fltol@exp1^0,c
  9056   003358  505D               	movf	___fltol@exp1^0,w,c
  9057   00335A  A4D8               	btfss	status,2,c
  9058   00335C  EFB2  F019         	goto	u10681
  9059   003360  EFB4  F019         	goto	u10680
  9060   003364                     u10681:
  9061   003364  EFBE  F019         	goto	l9932
  9062   003368                     u10680:
  9063   003368                     l9928:
  9064   003368  0E00               	movlw	0
  9065   00336A  6E54               	movwf	?___fltol^0,c
  9066   00336C  0E00               	movlw	0
  9067   00336E  6E55               	movwf	(?___fltol+1)^0,c
  9068   003370  0E00               	movlw	0
  9069   003372  6E56               	movwf	(?___fltol+2)^0,c
  9070   003374  0E00               	movlw	0
  9071   003376  6E57               	movwf	(?___fltol+3)^0,c
  9072   003378  EF2B  F01A         	goto	l2117
  9073   00337C                     l9932:
  9074   00337C  C054  F058         	movff	___fltol@f1,??___fltol
  9075   003380  C055  F059         	movff	___fltol@f1+1,??___fltol+1
  9076   003384  C056  F05A         	movff	___fltol@f1+2,??___fltol+2
  9077   003388  C057  F05B         	movff	___fltol@f1+3,??___fltol+3
  9078   00338C  0E20               	movlw	32
  9079   00338E  EFCE  F019         	goto	u10690
  9080   003392                     u10695:
  9081   003392  90D8               	bcf	status,0,c
  9082   003394  325B               	rrcf	(??___fltol+3)^0,f,c
  9083   003396  325A               	rrcf	(??___fltol+2)^0,f,c
  9084   003398  3259               	rrcf	(??___fltol+1)^0,f,c
  9085   00339A  3258               	rrcf	??___fltol^0,f,c
  9086   00339C                     u10690:
  9087   00339C  2EE8               	decfsz	wreg,f,c
  9088   00339E  EFC9  F019         	goto	u10695
  9089   0033A2  5058               	movf	??___fltol^0,w,c
  9090   0033A4  6E5C               	movwf	___fltol@sign1^0,c
  9091   0033A6  8E56               	bsf	(___fltol@f1+2)^0,7,c
  9092   0033A8  0EFF               	movlw	255
  9093   0033AA  1654               	andwf	___fltol@f1^0,f,c
  9094   0033AC  0EFF               	movlw	255
  9095   0033AE  1655               	andwf	(___fltol@f1+1)^0,f,c
  9096   0033B0  0EFF               	movlw	255
  9097   0033B2  1656               	andwf	(___fltol@f1+2)^0,f,c
  9098   0033B4  0E00               	movlw	0
  9099   0033B6  1657               	andwf	(___fltol@f1+3)^0,f,c
  9100   0033B8  0E96               	movlw	150
  9101   0033BA  5E5D               	subwf	___fltol@exp1^0,f,c
  9102   0033BC  BE5D               	btfsc	___fltol@exp1^0,7,c
  9103   0033BE  EFE5  F019         	goto	u10700
  9104   0033C2  EFE3  F019         	goto	u10701
  9105   0033C6                     u10701:
  9106   0033C6  EFFB  F019         	goto	l9952
  9107   0033CA                     u10700:
  9108   0033CA  505D               	movf	___fltol@exp1^0,w,c
  9109   0033CC  0A80               	xorlw	128
  9110   0033CE  0F97               	addlw	151
  9111   0033D0  B0D8               	btfsc	status,0,c
  9112   0033D2  EFED  F019         	goto	u10711
  9113   0033D6  EFEF  F019         	goto	u10710
  9114   0033DA                     u10711:
  9115   0033DA  EFF1  F019         	goto	l9948
  9116   0033DE                     u10710:
  9117   0033DE  EFB4  F019         	goto	l9928
  9118   0033E2                     l9948:
  9119   0033E2  90D8               	bcf	status,0,c
  9120   0033E4  3257               	rrcf	(___fltol@f1+3)^0,f,c
  9121   0033E6  3256               	rrcf	(___fltol@f1+2)^0,f,c
  9122   0033E8  3255               	rrcf	(___fltol@f1+1)^0,f,c
  9123   0033EA  3254               	rrcf	___fltol@f1^0,f,c
  9124   0033EC  3E5D               	incfsz	___fltol@exp1^0,f,c
  9125   0033EE  EFF1  F019         	goto	l9948
  9126   0033F2  EF13  F01A         	goto	l9962
  9127   0033F6                     l9952:
  9128   0033F6  0E1F               	movlw	31
  9129   0033F8  645D               	cpfsgt	___fltol@exp1^0,c
  9130   0033FA  EF01  F01A         	goto	u10721
  9131   0033FE  EF03  F01A         	goto	u10720
  9132   003402                     u10721:
  9133   003402  EF0B  F01A         	goto	l9960
  9134   003406                     u10720:
  9135   003406  EFB4  F019         	goto	l9928
  9136   00340A                     l9958:
  9137   00340A  90D8               	bcf	status,0,c
  9138   00340C  3654               	rlcf	___fltol@f1^0,f,c
  9139   00340E  3655               	rlcf	(___fltol@f1+1)^0,f,c
  9140   003410  3656               	rlcf	(___fltol@f1+2)^0,f,c
  9141   003412  3657               	rlcf	(___fltol@f1+3)^0,f,c
  9142   003414  065D               	decf	___fltol@exp1^0,f,c
  9143   003416                     l9960:
  9144   003416  505D               	movf	___fltol@exp1^0,w,c
  9145   003418  A4D8               	btfss	status,2,c
  9146   00341A  EF11  F01A         	goto	u10731
  9147   00341E  EF13  F01A         	goto	u10730
  9148   003422                     u10731:
  9149   003422  EF05  F01A         	goto	l9958
  9150   003426                     u10730:
  9151   003426                     l9962:
  9152   003426  505C               	movf	___fltol@sign1^0,w,c
  9153   003428  B4D8               	btfsc	status,2,c
  9154   00342A  EF19  F01A         	goto	u10741
  9155   00342E  EF1B  F01A         	goto	u10740
  9156   003432                     u10741:
  9157   003432  EF23  F01A         	goto	l9966
  9158   003436                     u10740:
  9159   003436  1E57               	comf	(___fltol@f1+3)^0,f,c
  9160   003438  1E56               	comf	(___fltol@f1+2)^0,f,c
  9161   00343A  1E55               	comf	(___fltol@f1+1)^0,f,c
  9162   00343C  6C54               	negf	___fltol@f1^0,c
  9163   00343E  0E00               	movlw	0
  9164   003440  2255               	addwfc	(___fltol@f1+1)^0,f,c
  9165   003442  2256               	addwfc	(___fltol@f1+2)^0,f,c
  9166   003444  2257               	addwfc	(___fltol@f1+3)^0,f,c
  9167   003446                     l9966:
  9168   003446  C054  F054         	movff	___fltol@f1,?___fltol
  9169   00344A  C055  F055         	movff	___fltol@f1+1,?___fltol+1
  9170   00344E  C056  F056         	movff	___fltol@f1+2,?___fltol+2
  9171   003452  C057  F057         	movff	___fltol@f1+3,?___fltol+3
  9172   003456                     l2117:
  9173   003456  0012               	return		;funcret
  9174   003458                     __end_of___fltol:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function ___flsub *****************
  9178 ;; Defined at:
  9179 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  b               4   58[COMRAM] long 
  9182 ;;  a               4   62[COMRAM] long 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  4   58[COMRAM] long 
  9187 ;; Registers used:
  9188 ;;		wreg, status,2, status,0, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9194 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9198 ;;Total ram usage:        8 bytes
  9199 ;; Hardware stack levels used: 1
  9200 ;; Hardware stack levels required when called: 4
  9201 ;; This function calls:
  9202 ;;		___fladd
  9203 ;; This function is called by:
  9204 ;;		_ccp1_pwm_set_duty
  9205 ;;		_ccp2_pwm_set_duty
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text61
  9210   00473A                     __ptext61:
  9211                           	callstack 0
  9212   00473A                     ___flsub:
  9213                           	callstack 25
  9214   00473A  0E00               	movlw	0
  9215   00473C  1A3F               	xorwf	___flsub@a^0,f,c
  9216   00473E  0E00               	movlw	0
  9217   004740  1A40               	xorwf	(___flsub@a+1)^0,f,c
  9218   004742  0E00               	movlw	0
  9219   004744  1A41               	xorwf	(___flsub@a+2)^0,f,c
  9220   004746  0E80               	movlw	128
  9221   004748  1A42               	xorwf	(___flsub@a+3)^0,f,c
  9222   00474A  C03B  F02B         	movff	___flsub@b,___fladd@b
  9223   00474E  C03C  F02C         	movff	___flsub@b+1,___fladd@b+1
  9224   004752  C03D  F02D         	movff	___flsub@b+2,___fladd@b+2
  9225   004756  C03E  F02E         	movff	___flsub@b+3,___fladd@b+3
  9226   00475A  C03F  F02F         	movff	___flsub@a,___fladd@a
  9227   00475E  C040  F030         	movff	___flsub@a+1,___fladd@a+1
  9228   004762  C041  F031         	movff	___flsub@a+2,___fladd@a+2
  9229   004766  C042  F032         	movff	___flsub@a+3,___fladd@a+3
  9230   00476A  ECF9  F00A         	call	___fladd	;wreg free
  9231   00476E  C02B  F03B         	movff	?___fladd,?___flsub
  9232   004772  C02C  F03C         	movff	?___fladd+1,?___flsub+1
  9233   004776  C02D  F03D         	movff	?___fladd+2,?___flsub+2
  9234   00477A  C02E  F03E         	movff	?___fladd+3,?___flsub+3
  9235   00477E  0012               	return		;funcret
  9236   004780                     __end_of___flsub:
  9237                           	callstack 0
  9238                           
  9239 ;; *************** function ___fladd *****************
  9240 ;; Defined at:
  9241 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  b               4   42[COMRAM] long 
  9244 ;;  a               4   46[COMRAM] long 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  grs             1   57[COMRAM] unsigned char 
  9247 ;;  bexp            1   56[COMRAM] unsigned char 
  9248 ;;  aexp            1   55[COMRAM] unsigned char 
  9249 ;;  signs           1   54[COMRAM] unsigned char 
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  4   42[COMRAM] unsigned char 
  9252 ;; Registers used:
  9253 ;;		wreg, status,2, status,0
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9259 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;Total ram usage:       16 bytes
  9264 ;; Hardware stack levels used: 1
  9265 ;; Hardware stack levels required when called: 3
  9266 ;; This function calls:
  9267 ;;		Nothing
  9268 ;; This function is called by:
  9269 ;;		_ccp1_pwm_set_duty
  9270 ;;		_I2C_Master_Mode_Clock_Configurations
  9271 ;;		___flsub
  9272 ;;		_ccp2_pwm_set_duty
  9273 ;;		_baudrate_calculate
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text62
  9278   0015F2                     __ptext62:
  9279                           	callstack 0
  9280   0015F2                     ___fladd:
  9281                           	callstack 24
  9282   0015F2  502E               	movf	(___fladd@b+3)^0,w,c
  9283   0015F4  0B80               	andlw	128
  9284   0015F6  6E37               	movwf	___fladd@signs^0,c
  9285   0015F8  502E               	movf	(___fladd@b+3)^0,w,c
  9286   0015FA  242E               	addwf	(___fladd@b+3)^0,w,c
  9287   0015FC  6E39               	movwf	___fladd@bexp^0,c
  9288   0015FE  AE2D               	btfss	(___fladd@b+2)^0,7,c
  9289   001600  EF04  F00B         	goto	u10061
  9290   001604  EF06  F00B         	goto	u10060
  9291   001608                     u10061:
  9292   001608  EF07  F00B         	goto	l9592
  9293   00160C                     u10060:
  9294   00160C  8039               	bsf	___fladd@bexp^0,0,c
  9295   00160E                     l9592:
  9296   00160E  5039               	movf	___fladd@bexp^0,w,c
  9297   001610  B4D8               	btfsc	status,2,c
  9298   001612  EF0D  F00B         	goto	u10071
  9299   001616  EF0F  F00B         	goto	u10070
  9300   00161A                     u10071:
  9301   00161A  EF24  F00B         	goto	l9602
  9302   00161E                     u10070:
  9303   00161E  2839               	incf	___fladd@bexp^0,w,c
  9304   001620  A4D8               	btfss	status,2,c
  9305   001622  EF15  F00B         	goto	u10081
  9306   001626  EF17  F00B         	goto	u10080
  9307   00162A                     u10081:
  9308   00162A  EF1F  F00B         	goto	l9598
  9309   00162E                     u10080:
  9310   00162E  0E00               	movlw	0
  9311   001630  6E2B               	movwf	___fladd@b^0,c
  9312   001632  0E00               	movlw	0
  9313   001634  6E2C               	movwf	(___fladd@b+1)^0,c
  9314   001636  0E00               	movlw	0
  9315   001638  6E2D               	movwf	(___fladd@b+2)^0,c
  9316   00163A  0E00               	movlw	0
  9317   00163C  6E2E               	movwf	(___fladd@b+3)^0,c
  9318   00163E                     l9598:
  9319   00163E  8E2D               	bsf	(___fladd@b+2)^0,7,c
  9320   001640  0E00               	movlw	0
  9321   001642  6E2E               	movwf	(___fladd@b+3)^0,c
  9322   001644  EF2C  F00B         	goto	l9604
  9323   001648                     l9602:
  9324   001648  0E00               	movlw	0
  9325   00164A  6E2B               	movwf	___fladd@b^0,c
  9326   00164C  0E00               	movlw	0
  9327   00164E  6E2C               	movwf	(___fladd@b+1)^0,c
  9328   001650  0E00               	movlw	0
  9329   001652  6E2D               	movwf	(___fladd@b+2)^0,c
  9330   001654  0E00               	movlw	0
  9331   001656  6E2E               	movwf	(___fladd@b+3)^0,c
  9332   001658                     l9604:
  9333   001658  5032               	movf	(___fladd@a+3)^0,w,c
  9334   00165A  0B80               	andlw	128
  9335   00165C  6E38               	movwf	___fladd@aexp^0,c
  9336   00165E  5037               	movf	___fladd@signs^0,w,c
  9337   001660  1838               	xorwf	___fladd@aexp^0,w,c
  9338   001662  B4D8               	btfsc	status,2,c
  9339   001664  EF36  F00B         	goto	u10091
  9340   001668  EF38  F00B         	goto	u10090
  9341   00166C                     u10091:
  9342   00166C  EF39  F00B         	goto	l9610
  9343   001670                     u10090:
  9344   001670  8C37               	bsf	___fladd@signs^0,6,c
  9345   001672                     l9610:
  9346   001672  5032               	movf	(___fladd@a+3)^0,w,c
  9347   001674  2432               	addwf	(___fladd@a+3)^0,w,c
  9348   001676  6E38               	movwf	___fladd@aexp^0,c
  9349   001678  AE31               	btfss	(___fladd@a+2)^0,7,c
  9350   00167A  EF41  F00B         	goto	u10101
  9351   00167E  EF43  F00B         	goto	u10100
  9352   001682                     u10101:
  9353   001682  EF44  F00B         	goto	l9616
  9354   001686                     u10100:
  9355   001686  8038               	bsf	___fladd@aexp^0,0,c
  9356   001688                     l9616:
  9357   001688  5038               	movf	___fladd@aexp^0,w,c
  9358   00168A  B4D8               	btfsc	status,2,c
  9359   00168C  EF4A  F00B         	goto	u10111
  9360   001690  EF4C  F00B         	goto	u10110
  9361   001694                     u10111:
  9362   001694  EF61  F00B         	goto	l9626
  9363   001698                     u10110:
  9364   001698  2838               	incf	___fladd@aexp^0,w,c
  9365   00169A  A4D8               	btfss	status,2,c
  9366   00169C  EF52  F00B         	goto	u10121
  9367   0016A0  EF54  F00B         	goto	u10120
  9368   0016A4                     u10121:
  9369   0016A4  EF5C  F00B         	goto	l9622
  9370   0016A8                     u10120:
  9371   0016A8  0E00               	movlw	0
  9372   0016AA  6E2F               	movwf	___fladd@a^0,c
  9373   0016AC  0E00               	movlw	0
  9374   0016AE  6E30               	movwf	(___fladd@a+1)^0,c
  9375   0016B0  0E00               	movlw	0
  9376   0016B2  6E31               	movwf	(___fladd@a+2)^0,c
  9377   0016B4  0E00               	movlw	0
  9378   0016B6  6E32               	movwf	(___fladd@a+3)^0,c
  9379   0016B8                     l9622:
  9380   0016B8  8E31               	bsf	(___fladd@a+2)^0,7,c
  9381   0016BA  0E00               	movlw	0
  9382   0016BC  6E32               	movwf	(___fladd@a+3)^0,c
  9383   0016BE  EF69  F00B         	goto	l9628
  9384   0016C2                     l9626:
  9385   0016C2  0E00               	movlw	0
  9386   0016C4  6E2F               	movwf	___fladd@a^0,c
  9387   0016C6  0E00               	movlw	0
  9388   0016C8  6E30               	movwf	(___fladd@a+1)^0,c
  9389   0016CA  0E00               	movlw	0
  9390   0016CC  6E31               	movwf	(___fladd@a+2)^0,c
  9391   0016CE  0E00               	movlw	0
  9392   0016D0  6E32               	movwf	(___fladd@a+3)^0,c
  9393   0016D2                     l9628:
  9394   0016D2  5039               	movf	___fladd@bexp^0,w,c
  9395   0016D4  5C38               	subwf	___fladd@aexp^0,w,c
  9396   0016D6  B0D8               	btfsc	status,0,c
  9397   0016D8  EF70  F00B         	goto	u10131
  9398   0016DC  EF72  F00B         	goto	u10130
  9399   0016E0                     u10131:
  9400   0016E0  EF99  F00B         	goto	l9664
  9401   0016E4                     u10130:
  9402   0016E4  AC37               	btfss	___fladd@signs^0,6,c
  9403   0016E6  EF77  F00B         	goto	u10141
  9404   0016EA  EF79  F00B         	goto	u10140
  9405   0016EE                     u10141:
  9406   0016EE  EF7B  F00B         	goto	l9634
  9407   0016F2                     u10140:
  9408   0016F2  0E80               	movlw	128
  9409   0016F4  1A37               	xorwf	___fladd@signs^0,f,c
  9410   0016F6                     l9634:
  9411   0016F6  C039  F03A         	movff	___fladd@bexp,___fladd@grs
  9412   0016FA  C038  F039         	movff	___fladd@aexp,___fladd@bexp
  9413   0016FE  C03A  F038         	movff	___fladd@grs,___fladd@aexp
  9414   001702  C02B  F03A         	movff	___fladd@b,___fladd@grs
  9415   001706  C02F  F02B         	movff	___fladd@a,___fladd@b
  9416   00170A  C03A  F02F         	movff	___fladd@grs,___fladd@a
  9417   00170E  C02C  F03A         	movff	___fladd@b+1,___fladd@grs
  9418   001712  C030  F02C         	movff	___fladd@a+1,___fladd@b+1
  9419   001716  C03A  F030         	movff	___fladd@grs,___fladd@a+1
  9420   00171A  C02D  F03A         	movff	___fladd@b+2,___fladd@grs
  9421   00171E  C031  F02D         	movff	___fladd@a+2,___fladd@b+2
  9422   001722  C03A  F031         	movff	___fladd@grs,___fladd@a+2
  9423   001726  C02E  F03A         	movff	___fladd@b+3,___fladd@grs
  9424   00172A  C032  F02E         	movff	___fladd@a+3,___fladd@b+3
  9425   00172E  C03A  F032         	movff	___fladd@grs,___fladd@a+3
  9426   001732                     l9664:
  9427   001732  0E00               	movlw	0
  9428   001734  6E3A               	movwf	___fladd@grs^0,c
  9429   001736  5039               	movf	___fladd@bexp^0,w,c
  9430   001738  C038  F033         	movff	___fladd@aexp,??___fladd
  9431   00173C  6A34               	clrf	(??___fladd+1)^0,c
  9432   00173E  5E33               	subwf	??___fladd^0,f,c
  9433   001740  0E00               	movlw	0
  9434   001742  5A34               	subwfb	(??___fladd+1)^0,f,c
  9435   001744  BE34               	btfsc	(??___fladd+1)^0,7,c
  9436   001746  EFAE  F00B         	goto	u10151
  9437   00174A  5034               	movf	(??___fladd+1)^0,w,c
  9438   00174C  E109               	bnz	u10150
  9439   00174E  0E1A               	movlw	26
  9440   001750  5C33               	subwf	??___fladd^0,w,c
  9441   001752  A0D8               	btfss	status,0,c
  9442   001754  EFAE  F00B         	goto	u10151
  9443   001758  EFB0  F00B         	goto	u10150
  9444   00175C                     u10151:
  9445   00175C  EFE7  F00B         	goto	l2349
  9446   001760                     u10150:
  9447   001760  502B               	movf	___fladd@b^0,w,c
  9448   001762  102C               	iorwf	(___fladd@b+1)^0,w,c
  9449   001764  102D               	iorwf	(___fladd@b+2)^0,w,c
  9450   001766  102E               	iorwf	(___fladd@b+3)^0,w,c
  9451   001768  A4D8               	btfss	status,2,c
  9452   00176A  EFB9  F00B         	goto	u10161
  9453   00176E  EFBC  F00B         	goto	u10160
  9454   001772                     u10161:
  9455   001772  0E01               	movlw	1
  9456   001774  EFBD  F00B         	goto	u10170
  9457   001778                     u10160:
  9458   001778  0E00               	movlw	0
  9459   00177A                     u10170:
  9460   00177A  6E3A               	movwf	___fladd@grs^0,c
  9461   00177C  0E00               	movlw	0
  9462   00177E  6E2B               	movwf	___fladd@b^0,c
  9463   001780  0E00               	movlw	0
  9464   001782  6E2C               	movwf	(___fladd@b+1)^0,c
  9465   001784  0E00               	movlw	0
  9466   001786  6E2D               	movwf	(___fladd@b+2)^0,c
  9467   001788  0E00               	movlw	0
  9468   00178A  6E2E               	movwf	(___fladd@b+3)^0,c
  9469   00178C  C038  F039         	movff	___fladd@aexp,___fladd@bexp
  9470   001790  EFF0  F00B         	goto	l2348
  9471   001794                     l2350:
  9472   001794  A03A               	btfss	___fladd@grs^0,0,c
  9473   001796  EFCF  F00B         	goto	u10181
  9474   00179A  EFD1  F00B         	goto	u10180
  9475   00179E                     u10181:
  9476   00179E  EFD7  F00B         	goto	l9676
  9477   0017A2                     u10180:
  9478   0017A2  90D8               	bcf	status,0,c
  9479   0017A4  303A               	rrcf	___fladd@grs^0,w,c
  9480   0017A6  0901               	iorlw	1
  9481   0017A8  6E3A               	movwf	___fladd@grs^0,c
  9482   0017AA  EFD9  F00B         	goto	l9678
  9483   0017AE                     l9676:
  9484   0017AE  90D8               	bcf	status,0,c
  9485   0017B0  323A               	rrcf	___fladd@grs^0,f,c
  9486   0017B2                     l9678:
  9487   0017B2  A02B               	btfss	___fladd@b^0,0,c
  9488   0017B4  EFDE  F00B         	goto	u10191
  9489   0017B8  EFE0  F00B         	goto	u10190
  9490   0017BC                     u10191:
  9491   0017BC  EFE1  F00B         	goto	l9682
  9492   0017C0                     u10190:
  9493   0017C0  8E3A               	bsf	___fladd@grs^0,7,c
  9494   0017C2                     l9682:
  9495   0017C2  342E               	rlcf	(___fladd@b+3)^0,w,c
  9496   0017C4  322E               	rrcf	(___fladd@b+3)^0,f,c
  9497   0017C6  322D               	rrcf	(___fladd@b+2)^0,f,c
  9498   0017C8  322C               	rrcf	(___fladd@b+1)^0,f,c
  9499   0017CA  322B               	rrcf	___fladd@b^0,f,c
  9500   0017CC  2A39               	incf	___fladd@bexp^0,f,c
  9501   0017CE                     l2349:
  9502   0017CE  5038               	movf	___fladd@aexp^0,w,c
  9503   0017D0  5C39               	subwf	___fladd@bexp^0,w,c
  9504   0017D2  A0D8               	btfss	status,0,c
  9505   0017D4  EFEE  F00B         	goto	u10201
  9506   0017D8  EFF0  F00B         	goto	u10200
  9507   0017DC                     u10201:
  9508   0017DC  EFCA  F00B         	goto	l2350
  9509   0017E0                     u10200:
  9510   0017E0                     l2348:
  9511   0017E0  BC37               	btfsc	___fladd@signs^0,6,c
  9512   0017E2  EFF5  F00B         	goto	u10211
  9513   0017E6  EFF7  F00B         	goto	u10210
  9514   0017EA                     u10211:
  9515   0017EA  EF37  F00C         	goto	l9710
  9516   0017EE                     u10210:
  9517   0017EE  5039               	movf	___fladd@bexp^0,w,c
  9518   0017F0  A4D8               	btfss	status,2,c
  9519   0017F2  EFFD  F00B         	goto	u10221
  9520   0017F6  EFFF  F00B         	goto	u10220
  9521   0017FA                     u10221:
  9522   0017FA  EF09  F00C         	goto	l9692
  9523   0017FE                     u10220:
  9524   0017FE  0E00               	movlw	0
  9525   001800  6E2B               	movwf	?___fladd^0,c
  9526   001802  0E00               	movlw	0
  9527   001804  6E2C               	movwf	(?___fladd+1)^0,c
  9528   001806  0E00               	movlw	0
  9529   001808  6E2D               	movwf	(?___fladd+2)^0,c
  9530   00180A  0E00               	movlw	0
  9531   00180C  6E2E               	movwf	(?___fladd+3)^0,c
  9532   00180E  EF58  F00D         	goto	l2357
  9533   001812                     l9692:
  9534   001812  502F               	movf	___fladd@a^0,w,c
  9535   001814  262B               	addwf	___fladd@b^0,f,c
  9536   001816  5030               	movf	(___fladd@a+1)^0,w,c
  9537   001818  222C               	addwfc	(___fladd@b+1)^0,f,c
  9538   00181A  5031               	movf	(___fladd@a+2)^0,w,c
  9539   00181C  222D               	addwfc	(___fladd@b+2)^0,f,c
  9540   00181E  5032               	movf	(___fladd@a+3)^0,w,c
  9541   001820  222E               	addwfc	(___fladd@b+3)^0,f,c
  9542   001822  A02E               	btfss	(___fladd@b+3)^0,0,c
  9543   001824  EF16  F00C         	goto	u10231
  9544   001828  EF18  F00C         	goto	u10230
  9545   00182C                     u10231:
  9546   00182C  EFC4  F00C         	goto	l9746
  9547   001830                     u10230:
  9548   001830  A03A               	btfss	___fladd@grs^0,0,c
  9549   001832  EF1D  F00C         	goto	u10241
  9550   001836  EF1F  F00C         	goto	u10240
  9551   00183A                     u10241:
  9552   00183A  EF25  F00C         	goto	l9700
  9553   00183E                     u10240:
  9554   00183E  90D8               	bcf	status,0,c
  9555   001840  303A               	rrcf	___fladd@grs^0,w,c
  9556   001842  0901               	iorlw	1
  9557   001844  6E3A               	movwf	___fladd@grs^0,c
  9558   001846  EF27  F00C         	goto	l9702
  9559   00184A                     l9700:
  9560   00184A  90D8               	bcf	status,0,c
  9561   00184C  323A               	rrcf	___fladd@grs^0,f,c
  9562   00184E                     l9702:
  9563   00184E  A02B               	btfss	___fladd@b^0,0,c
  9564   001850  EF2C  F00C         	goto	u10251
  9565   001854  EF2E  F00C         	goto	u10250
  9566   001858                     u10251:
  9567   001858  EF2F  F00C         	goto	l9706
  9568   00185C                     u10250:
  9569   00185C  8E3A               	bsf	___fladd@grs^0,7,c
  9570   00185E                     l9706:
  9571   00185E  342E               	rlcf	(___fladd@b+3)^0,w,c
  9572   001860  322E               	rrcf	(___fladd@b+3)^0,f,c
  9573   001862  322D               	rrcf	(___fladd@b+2)^0,f,c
  9574   001864  322C               	rrcf	(___fladd@b+1)^0,f,c
  9575   001866  322B               	rrcf	___fladd@b^0,f,c
  9576   001868  2A39               	incf	___fladd@bexp^0,f,c
  9577   00186A  EFC4  F00C         	goto	l9746
  9578   00186E                     l9710:
  9579   00186E  502F               	movf	___fladd@a^0,w,c
  9580   001870  5C2B               	subwf	___fladd@b^0,w,c
  9581   001872  5030               	movf	(___fladd@a+1)^0,w,c
  9582   001874  582C               	subwfb	(___fladd@b+1)^0,w,c
  9583   001876  5031               	movf	(___fladd@a+2)^0,w,c
  9584   001878  582D               	subwfb	(___fladd@b+2)^0,w,c
  9585   00187A  502E               	movf	(___fladd@b+3)^0,w,c
  9586   00187C  0A80               	xorlw	128
  9587   00187E  6E33               	movwf	??___fladd^0,c
  9588   001880  5032               	movf	(___fladd@a+3)^0,w,c
  9589   001882  0A80               	xorlw	128
  9590   001884  5833               	subwfb	??___fladd^0,w,c
  9591   001886  B0D8               	btfsc	status,0,c
  9592   001888  EF48  F00C         	goto	u10261
  9593   00188C  EF4A  F00C         	goto	u10260
  9594   001890                     u10261:
  9595   001890  EF75  F00C         	goto	l9720
  9596   001894                     u10260:
  9597   001894  502B               	movf	___fladd@b^0,w,c
  9598   001896  5C2F               	subwf	___fladd@a^0,w,c
  9599   001898  6E33               	movwf	??___fladd^0,c
  9600   00189A  502C               	movf	(___fladd@b+1)^0,w,c
  9601   00189C  5830               	subwfb	(___fladd@a+1)^0,w,c
  9602   00189E  6E34               	movwf	(??___fladd+1)^0,c
  9603   0018A0  502D               	movf	(___fladd@b+2)^0,w,c
  9604   0018A2  5831               	subwfb	(___fladd@a+2)^0,w,c
  9605   0018A4  6E35               	movwf	(??___fladd+2)^0,c
  9606   0018A6  502E               	movf	(___fladd@b+3)^0,w,c
  9607   0018A8  5832               	subwfb	(___fladd@a+3)^0,w,c
  9608   0018AA  6E36               	movwf	(??___fladd+3)^0,c
  9609   0018AC  0EFF               	movlw	255
  9610   0018AE  2433               	addwf	??___fladd^0,w,c
  9611   0018B0  6E2B               	movwf	___fladd@b^0,c
  9612   0018B2  0EFF               	movlw	255
  9613   0018B4  2034               	addwfc	(??___fladd+1)^0,w,c
  9614   0018B6  6E2C               	movwf	(___fladd@b+1)^0,c
  9615   0018B8  0EFF               	movlw	255
  9616   0018BA  2035               	addwfc	(??___fladd+2)^0,w,c
  9617   0018BC  6E2D               	movwf	(___fladd@b+2)^0,c
  9618   0018BE  0EFF               	movlw	255
  9619   0018C0  2036               	addwfc	(??___fladd+3)^0,w,c
  9620   0018C2  6E2E               	movwf	(___fladd@b+3)^0,c
  9621   0018C4  0E80               	movlw	128
  9622   0018C6  1A37               	xorwf	___fladd@signs^0,f,c
  9623   0018C8  6C3A               	negf	___fladd@grs^0,c
  9624   0018CA  503A               	movf	___fladd@grs^0,w,c
  9625   0018CC  A4D8               	btfss	status,2,c
  9626   0018CE  EF6B  F00C         	goto	u10271
  9627   0018D2  EF6D  F00C         	goto	u10270
  9628   0018D6                     u10271:
  9629   0018D6  EF7D  F00C         	goto	l2365
  9630   0018DA                     u10270:
  9631   0018DA  0E01               	movlw	1
  9632   0018DC  262B               	addwf	___fladd@b^0,f,c
  9633   0018DE  0E00               	movlw	0
  9634   0018E0  222C               	addwfc	(___fladd@b+1)^0,f,c
  9635   0018E2  222D               	addwfc	(___fladd@b+2)^0,f,c
  9636   0018E4  222E               	addwfc	(___fladd@b+3)^0,f,c
  9637   0018E6  EF7D  F00C         	goto	l2365
  9638   0018EA                     l9720:
  9639   0018EA  502F               	movf	___fladd@a^0,w,c
  9640   0018EC  5E2B               	subwf	___fladd@b^0,f,c
  9641   0018EE  5030               	movf	(___fladd@a+1)^0,w,c
  9642   0018F0  5A2C               	subwfb	(___fladd@b+1)^0,f,c
  9643   0018F2  5031               	movf	(___fladd@a+2)^0,w,c
  9644   0018F4  5A2D               	subwfb	(___fladd@b+2)^0,f,c
  9645   0018F6  5032               	movf	(___fladd@a+3)^0,w,c
  9646   0018F8  5A2E               	subwfb	(___fladd@b+3)^0,f,c
  9647   0018FA                     l2365:
  9648   0018FA  502B               	movf	___fladd@b^0,w,c
  9649   0018FC  102C               	iorwf	(___fladd@b+1)^0,w,c
  9650   0018FE  102D               	iorwf	(___fladd@b+2)^0,w,c
  9651   001900  102E               	iorwf	(___fladd@b+3)^0,w,c
  9652   001902  A4D8               	btfss	status,2,c
  9653   001904  EF86  F00C         	goto	u10281
  9654   001908  EF88  F00C         	goto	u10280
  9655   00190C                     u10281:
  9656   00190C  EFBD  F00C         	goto	l9744
  9657   001910                     u10280:
  9658   001910  503A               	movf	___fladd@grs^0,w,c
  9659   001912  A4D8               	btfss	status,2,c
  9660   001914  EF8E  F00C         	goto	u10291
  9661   001918  EF90  F00C         	goto	u10290
  9662   00191C                     u10291:
  9663   00191C  EFBD  F00C         	goto	l9744
  9664   001920                     u10290:
  9665   001920  0E00               	movlw	0
  9666   001922  6E2B               	movwf	?___fladd^0,c
  9667   001924  0E00               	movlw	0
  9668   001926  6E2C               	movwf	(?___fladd+1)^0,c
  9669   001928  0E00               	movlw	0
  9670   00192A  6E2D               	movwf	(?___fladd+2)^0,c
  9671   00192C  0E00               	movlw	0
  9672   00192E  6E2E               	movwf	(?___fladd+3)^0,c
  9673   001930  EF58  F00D         	goto	l2357
  9674   001934                     l9728:
  9675   001934  90D8               	bcf	status,0,c
  9676   001936  362B               	rlcf	___fladd@b^0,f,c
  9677   001938  362C               	rlcf	(___fladd@b+1)^0,f,c
  9678   00193A  362D               	rlcf	(___fladd@b+2)^0,f,c
  9679   00193C  362E               	rlcf	(___fladd@b+3)^0,f,c
  9680   00193E  AE3A               	btfss	___fladd@grs^0,7,c
  9681   001940  EFA4  F00C         	goto	u10301
  9682   001944  EFA6  F00C         	goto	u10300
  9683   001948                     u10301:
  9684   001948  EFA7  F00C         	goto	l9734
  9685   00194C                     u10300:
  9686   00194C  802B               	bsf	___fladd@b^0,0,c
  9687   00194E                     l9734:
  9688   00194E  A03A               	btfss	___fladd@grs^0,0,c
  9689   001950  EFAC  F00C         	goto	u10311
  9690   001954  EFAE  F00C         	goto	u10310
  9691   001958                     u10311:
  9692   001958  EFB2  F00C         	goto	l9738
  9693   00195C                     u10310:
  9694   00195C  80D8               	bsf	status,0,c
  9695   00195E  363A               	rlcf	___fladd@grs^0,f,c
  9696   001960  EFB4  F00C         	goto	l9740
  9697   001964                     l9738:
  9698   001964  90D8               	bcf	status,0,c
  9699   001966  363A               	rlcf	___fladd@grs^0,f,c
  9700   001968                     l9740:
  9701   001968  5039               	movf	___fladd@bexp^0,w,c
  9702   00196A  B4D8               	btfsc	status,2,c
  9703   00196C  EFBA  F00C         	goto	u10321
  9704   001970  EFBC  F00C         	goto	u10320
  9705   001974                     u10321:
  9706   001974  EFBD  F00C         	goto	l9744
  9707   001978                     u10320:
  9708   001978  0639               	decf	___fladd@bexp^0,f,c
  9709   00197A                     l9744:
  9710   00197A  AE2D               	btfss	(___fladd@b+2)^0,7,c
  9711   00197C  EFC2  F00C         	goto	u10331
  9712   001980  EFC4  F00C         	goto	u10330
  9713   001984                     u10331:
  9714   001984  EF9A  F00C         	goto	l9728
  9715   001988                     u10330:
  9716   001988                     l9746:
  9717   001988  0E00               	movlw	0
  9718   00198A  6E38               	movwf	___fladd@aexp^0,c
  9719   00198C  AE3A               	btfss	___fladd@grs^0,7,c
  9720   00198E  EFCB  F00C         	goto	u10341
  9721   001992  EFCD  F00C         	goto	u10340
  9722   001996                     u10341:
  9723   001996  EFE5  F00C         	goto	l2374
  9724   00199A                     u10340:
  9725   00199A  C03A  F033         	movff	___fladd@grs,??___fladd
  9726   00199E  0E7F               	movlw	127
  9727   0019A0  1633               	andwf	??___fladd^0,f,c
  9728   0019A2  B4D8               	btfsc	status,2,c
  9729   0019A4  EFD6  F00C         	goto	u10351
  9730   0019A8  EFD8  F00C         	goto	u10350
  9731   0019AC                     u10351:
  9732   0019AC  EFDC  F00C         	goto	l2375
  9733   0019B0                     u10350:
  9734   0019B0                     l9752:
  9735   0019B0  0E01               	movlw	1
  9736   0019B2  6E38               	movwf	___fladd@aexp^0,c
  9737   0019B4  EFE5  F00C         	goto	l2374
  9738   0019B8                     l2375:
  9739   0019B8  A02B               	btfss	___fladd@b^0,0,c
  9740   0019BA  EFE1  F00C         	goto	u10361
  9741   0019BE  EFE3  F00C         	goto	u10360
  9742   0019C2                     u10361:
  9743   0019C2  EFE5  F00C         	goto	l2374
  9744   0019C6                     u10360:
  9745   0019C6  EFD8  F00C         	goto	l9752
  9746   0019CA                     l2374:
  9747   0019CA  5038               	movf	___fladd@aexp^0,w,c
  9748   0019CC  B4D8               	btfsc	status,2,c
  9749   0019CE  EFEB  F00C         	goto	u10371
  9750   0019D2  EFED  F00C         	goto	u10370
  9751   0019D6                     u10371:
  9752   0019D6  EF18  F00D         	goto	l9764
  9753   0019DA                     u10370:
  9754   0019DA  0E01               	movlw	1
  9755   0019DC  262B               	addwf	___fladd@b^0,f,c
  9756   0019DE  0E00               	movlw	0
  9757   0019E0  222C               	addwfc	(___fladd@b+1)^0,f,c
  9758   0019E2  222D               	addwfc	(___fladd@b+2)^0,f,c
  9759   0019E4  222E               	addwfc	(___fladd@b+3)^0,f,c
  9760   0019E6  A02E               	btfss	(___fladd@b+3)^0,0,c
  9761   0019E8  EFF8  F00C         	goto	u10381
  9762   0019EC  EFFA  F00C         	goto	u10380
  9763   0019F0                     u10381:
  9764   0019F0  EF18  F00D         	goto	l9764
  9765   0019F4                     u10380:
  9766   0019F4  C02B  F033         	movff	___fladd@b,??___fladd
  9767   0019F8  C02C  F034         	movff	___fladd@b+1,??___fladd+1
  9768   0019FC  C02D  F035         	movff	___fladd@b+2,??___fladd+2
  9769   001A00  C02E  F036         	movff	___fladd@b+3,??___fladd+3
  9770   001A04  3436               	rlcf	(??___fladd+3)^0,w,c
  9771   001A06  3236               	rrcf	(??___fladd+3)^0,f,c
  9772   001A08  3235               	rrcf	(??___fladd+2)^0,f,c
  9773   001A0A  3234               	rrcf	(??___fladd+1)^0,f,c
  9774   001A0C  3233               	rrcf	??___fladd^0,f,c
  9775   001A0E  C033  F02B         	movff	??___fladd,___fladd@b
  9776   001A12  C034  F02C         	movff	??___fladd+1,___fladd@b+1
  9777   001A16  C035  F02D         	movff	??___fladd+2,___fladd@b+2
  9778   001A1A  C036  F02E         	movff	??___fladd+3,___fladd@b+3
  9779   001A1E  2839               	incf	___fladd@bexp^0,w,c
  9780   001A20  B4D8               	btfsc	status,2,c
  9781   001A22  EF15  F00D         	goto	u10391
  9782   001A26  EF17  F00D         	goto	u10390
  9783   001A2A                     u10391:
  9784   001A2A  EF18  F00D         	goto	l9764
  9785   001A2E                     u10390:
  9786   001A2E  2A39               	incf	___fladd@bexp^0,f,c
  9787   001A30                     l9764:
  9788   001A30  2839               	incf	___fladd@bexp^0,w,c
  9789   001A32  B4D8               	btfsc	status,2,c
  9790   001A34  EF1E  F00D         	goto	u10401
  9791   001A38  EF20  F00D         	goto	u10400
  9792   001A3C                     u10401:
  9793   001A3C  EF28  F00D         	goto	l9768
  9794   001A40                     u10400:
  9795   001A40  5039               	movf	___fladd@bexp^0,w,c
  9796   001A42  A4D8               	btfss	status,2,c
  9797   001A44  EF26  F00D         	goto	u10411
  9798   001A48  EF28  F00D         	goto	u10410
  9799   001A4C                     u10411:
  9800   001A4C  EF3A  F00D         	goto	l9772
  9801   001A50                     u10410:
  9802   001A50                     l9768:
  9803   001A50  0E00               	movlw	0
  9804   001A52  6E2B               	movwf	___fladd@b^0,c
  9805   001A54  0E00               	movlw	0
  9806   001A56  6E2C               	movwf	(___fladd@b+1)^0,c
  9807   001A58  0E00               	movlw	0
  9808   001A5A  6E2D               	movwf	(___fladd@b+2)^0,c
  9809   001A5C  0E00               	movlw	0
  9810   001A5E  6E2E               	movwf	(___fladd@b+3)^0,c
  9811   001A60  5039               	movf	___fladd@bexp^0,w,c
  9812   001A62  A4D8               	btfss	status,2,c
  9813   001A64  EF36  F00D         	goto	u10421
  9814   001A68  EF38  F00D         	goto	u10420
  9815   001A6C                     u10421:
  9816   001A6C  EF3A  F00D         	goto	l9772
  9817   001A70                     u10420:
  9818   001A70  0E00               	movlw	0
  9819   001A72  6E37               	movwf	___fladd@signs^0,c
  9820   001A74                     l9772:
  9821   001A74  A039               	btfss	___fladd@bexp^0,0,c
  9822   001A76  EF3F  F00D         	goto	u10431
  9823   001A7A  EF41  F00D         	goto	u10430
  9824   001A7E                     u10431:
  9825   001A7E  EF44  F00D         	goto	l9776
  9826   001A82                     u10430:
  9827   001A82  8E2D               	bsf	(___fladd@b+2)^0,7,c
  9828   001A84  EF45  F00D         	goto	l9778
  9829   001A88                     l9776:
  9830   001A88  9E2D               	bcf	(___fladd@b+2)^0,7,c
  9831   001A8A                     l9778:
  9832   001A8A  90D8               	bcf	status,0,c
  9833   001A8C  3039               	rrcf	___fladd@bexp^0,w,c
  9834   001A8E  6E2E               	movwf	(___fladd@b+3)^0,c
  9835   001A90  AE37               	btfss	___fladd@signs^0,7,c
  9836   001A92  EF4D  F00D         	goto	u10441
  9837   001A96  EF4F  F00D         	goto	u10440
  9838   001A9A                     u10441:
  9839   001A9A  EF50  F00D         	goto	l9784
  9840   001A9E                     u10440:
  9841   001A9E  8E2E               	bsf	(___fladd@b+3)^0,7,c
  9842   001AA0                     l9784:
  9843   001AA0  C02B  F02B         	movff	___fladd@b,?___fladd
  9844   001AA4  C02C  F02C         	movff	___fladd@b+1,?___fladd+1
  9845   001AA8  C02D  F02D         	movff	___fladd@b+2,?___fladd+2
  9846   001AAC  C02E  F02E         	movff	___fladd@b+3,?___fladd+3
  9847   001AB0                     l2357:
  9848   001AB0  0012               	return		;funcret
  9849   001AB2                     __end_of___fladd:
  9850                           	callstack 0
  9851                           
  9852 ;; *************** function ___flmul *****************
  9853 ;; Defined at:
  9854 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  b               4   58[COMRAM] unsigned char 
  9857 ;;  a               4   62[COMRAM] unsigned char 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;  prod            4   77[COMRAM] struct .
  9860 ;;  grs             4   72[COMRAM] unsigned long 
  9861 ;;  temp            2   81[COMRAM] struct .
  9862 ;;  bexp            1   76[COMRAM] unsigned char 
  9863 ;;  aexp            1   71[COMRAM] unsigned char 
  9864 ;;  sign            1   70[COMRAM] unsigned char 
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  4   58[COMRAM] unsigned char 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2, status,0, prodl, prodh
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:       25 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 3
  9881 ;; This function calls:
  9882 ;;		Nothing
  9883 ;; This function is called by:
  9884 ;;		_ccp1_pwm_set_duty
  9885 ;;		_ccp2_pwm_set_duty
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text63
  9890   001AB2                     __ptext63:
  9891                           	callstack 0
  9892   001AB2                     ___flmul:
  9893                           	callstack 26
  9894   001AB2  503E               	movf	(___flmul@b+3)^0,w,c
  9895   001AB4  0B80               	andlw	128
  9896   001AB6  6E47               	movwf	___flmul@sign^0,c
  9897   001AB8  503E               	movf	(___flmul@b+3)^0,w,c
  9898   001ABA  243E               	addwf	(___flmul@b+3)^0,w,c
  9899   001ABC  6E4D               	movwf	___flmul@bexp^0,c
  9900   001ABE  AE3D               	btfss	(___flmul@b+2)^0,7,c
  9901   001AC0  EF64  F00D         	goto	u11661
  9902   001AC4  EF66  F00D         	goto	u11660
  9903   001AC8                     u11661:
  9904   001AC8  EF67  F00D         	goto	l10794
  9905   001ACC                     u11660:
  9906   001ACC  804D               	bsf	___flmul@bexp^0,0,c
  9907   001ACE                     l10794:
  9908   001ACE  504D               	movf	___flmul@bexp^0,w,c
  9909   001AD0  B4D8               	btfsc	status,2,c
  9910   001AD2  EF6D  F00D         	goto	u11671
  9911   001AD6  EF6F  F00D         	goto	u11670
  9912   001ADA                     u11671:
  9913   001ADA  EF82  F00D         	goto	l10802
  9914   001ADE                     u11670:
  9915   001ADE  284D               	incf	___flmul@bexp^0,w,c
  9916   001AE0  A4D8               	btfss	status,2,c
  9917   001AE2  EF75  F00D         	goto	u11681
  9918   001AE6  EF77  F00D         	goto	u11680
  9919   001AEA                     u11681:
  9920   001AEA  EF7F  F00D         	goto	l10800
  9921   001AEE                     u11680:
  9922   001AEE  0E00               	movlw	0
  9923   001AF0  6E3B               	movwf	___flmul@b^0,c
  9924   001AF2  0E00               	movlw	0
  9925   001AF4  6E3C               	movwf	(___flmul@b+1)^0,c
  9926   001AF6  0E00               	movlw	0
  9927   001AF8  6E3D               	movwf	(___flmul@b+2)^0,c
  9928   001AFA  0E00               	movlw	0
  9929   001AFC  6E3E               	movwf	(___flmul@b+3)^0,c
  9930   001AFE                     l10800:
  9931   001AFE  8E3D               	bsf	(___flmul@b+2)^0,7,c
  9932   001B00  EF8A  F00D         	goto	l10804
  9933   001B04                     l10802:
  9934   001B04  0E00               	movlw	0
  9935   001B06  6E3B               	movwf	___flmul@b^0,c
  9936   001B08  0E00               	movlw	0
  9937   001B0A  6E3C               	movwf	(___flmul@b+1)^0,c
  9938   001B0C  0E00               	movlw	0
  9939   001B0E  6E3D               	movwf	(___flmul@b+2)^0,c
  9940   001B10  0E00               	movlw	0
  9941   001B12  6E3E               	movwf	(___flmul@b+3)^0,c
  9942   001B14                     l10804:
  9943   001B14  5042               	movf	(___flmul@a+3)^0,w,c
  9944   001B16  0B80               	andlw	128
  9945   001B18  1A47               	xorwf	___flmul@sign^0,f,c
  9946   001B1A  5042               	movf	(___flmul@a+3)^0,w,c
  9947   001B1C  2442               	addwf	(___flmul@a+3)^0,w,c
  9948   001B1E  6E48               	movwf	___flmul@aexp^0,c
  9949   001B20  AE41               	btfss	(___flmul@a+2)^0,7,c
  9950   001B22  EF95  F00D         	goto	u11691
  9951   001B26  EF97  F00D         	goto	u11690
  9952   001B2A                     u11691:
  9953   001B2A  EF98  F00D         	goto	l10812
  9954   001B2E                     u11690:
  9955   001B2E  8048               	bsf	___flmul@aexp^0,0,c
  9956   001B30                     l10812:
  9957   001B30  5048               	movf	___flmul@aexp^0,w,c
  9958   001B32  B4D8               	btfsc	status,2,c
  9959   001B34  EF9E  F00D         	goto	u11701
  9960   001B38  EFA0  F00D         	goto	u11700
  9961   001B3C                     u11701:
  9962   001B3C  EFB3  F00D         	goto	l10820
  9963   001B40                     u11700:
  9964   001B40  2848               	incf	___flmul@aexp^0,w,c
  9965   001B42  A4D8               	btfss	status,2,c
  9966   001B44  EFA6  F00D         	goto	u11711
  9967   001B48  EFA8  F00D         	goto	u11710
  9968   001B4C                     u11711:
  9969   001B4C  EFB0  F00D         	goto	l10818
  9970   001B50                     u11710:
  9971   001B50  0E00               	movlw	0
  9972   001B52  6E3F               	movwf	___flmul@a^0,c
  9973   001B54  0E00               	movlw	0
  9974   001B56  6E40               	movwf	(___flmul@a+1)^0,c
  9975   001B58  0E00               	movlw	0
  9976   001B5A  6E41               	movwf	(___flmul@a+2)^0,c
  9977   001B5C  0E00               	movlw	0
  9978   001B5E  6E42               	movwf	(___flmul@a+3)^0,c
  9979   001B60                     l10818:
  9980   001B60  8E41               	bsf	(___flmul@a+2)^0,7,c
  9981   001B62  EFBB  F00D         	goto	l2434
  9982   001B66                     l10820:
  9983   001B66  0E00               	movlw	0
  9984   001B68  6E3F               	movwf	___flmul@a^0,c
  9985   001B6A  0E00               	movlw	0
  9986   001B6C  6E40               	movwf	(___flmul@a+1)^0,c
  9987   001B6E  0E00               	movlw	0
  9988   001B70  6E41               	movwf	(___flmul@a+2)^0,c
  9989   001B72  0E00               	movlw	0
  9990   001B74  6E42               	movwf	(___flmul@a+3)^0,c
  9991   001B76                     l2434:
  9992   001B76  5048               	movf	___flmul@aexp^0,w,c
  9993   001B78  B4D8               	btfsc	status,2,c
  9994   001B7A  EFC1  F00D         	goto	u11721
  9995   001B7E  EFC3  F00D         	goto	u11720
  9996   001B82                     u11721:
  9997   001B82  EFCB  F00D         	goto	l10824
  9998   001B86                     u11720:
  9999   001B86  504D               	movf	___flmul@bexp^0,w,c
 10000   001B88  A4D8               	btfss	status,2,c
 10001   001B8A  EFC9  F00D         	goto	u11731
 10002   001B8E  EFCB  F00D         	goto	u11730
 10003   001B92                     u11731:
 10004   001B92  EFD5  F00D         	goto	l10828
 10005   001B96                     u11730:
 10006   001B96                     l10824:
 10007   001B96  0E00               	movlw	0
 10008   001B98  6E3B               	movwf	?___flmul^0,c
 10009   001B9A  0E00               	movlw	0
 10010   001B9C  6E3C               	movwf	(?___flmul+1)^0,c
 10011   001B9E  0E00               	movlw	0
 10012   001BA0  6E3D               	movwf	(?___flmul+2)^0,c
 10013   001BA2  0E00               	movlw	0
 10014   001BA4  6E3E               	movwf	(?___flmul+3)^0,c
 10015   001BA6  EF6D  F00F         	goto	l2438
 10016   001BAA                     l10828:
 10017   001BAA  5041               	movf	(___flmul@a+2)^0,w,c
 10018   001BAC  023B               	mulwf	___flmul@b^0,c
 10019   001BAE  CFF3 F052          	movff	prodl,___flmul@temp
 10020   001BB2  CFF4 F053          	movff	prodh,___flmul@temp+1
 10021   001BB6  5052               	movf	___flmul@temp^0,w,c
 10022   001BB8  6E49               	movwf	___flmul@grs^0,c
 10023   001BBA  6A4A               	clrf	(___flmul@grs+1)^0,c
 10024   001BBC  6A4B               	clrf	(___flmul@grs+2)^0,c
 10025   001BBE  6A4C               	clrf	(___flmul@grs+3)^0,c
 10026   001BC0  5053               	movf	(___flmul@temp+1)^0,w,c
 10027   001BC2  6E4E               	movwf	___flmul@prod^0,c
 10028   001BC4  6A4F               	clrf	(___flmul@prod+1)^0,c
 10029   001BC6  6A50               	clrf	(___flmul@prod+2)^0,c
 10030   001BC8  6A51               	clrf	(___flmul@prod+3)^0,c
 10031   001BCA  5040               	movf	(___flmul@a+1)^0,w,c
 10032   001BCC  023C               	mulwf	(___flmul@b+1)^0,c
 10033   001BCE  CFF3 F052          	movff	prodl,___flmul@temp
 10034   001BD2  CFF4 F053          	movff	prodh,___flmul@temp+1
 10035   001BD6  5052               	movf	___flmul@temp^0,w,c
 10036   001BD8  2649               	addwf	___flmul@grs^0,f,c
 10037   001BDA  0E00               	movlw	0
 10038   001BDC  224A               	addwfc	(___flmul@grs+1)^0,f,c
 10039   001BDE  224B               	addwfc	(___flmul@grs+2)^0,f,c
 10040   001BE0  224C               	addwfc	(___flmul@grs+3)^0,f,c
 10041   001BE2  5053               	movf	(___flmul@temp+1)^0,w,c
 10042   001BE4  264E               	addwf	___flmul@prod^0,f,c
 10043   001BE6  0E00               	movlw	0
 10044   001BE8  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10045   001BEA  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10046   001BEC  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10047   001BEE  503F               	movf	___flmul@a^0,w,c
 10048   001BF0  023D               	mulwf	(___flmul@b+2)^0,c
 10049   001BF2  CFF3 F052          	movff	prodl,___flmul@temp
 10050   001BF6  CFF4 F053          	movff	prodh,___flmul@temp+1
 10051   001BFA  5052               	movf	___flmul@temp^0,w,c
 10052   001BFC  2649               	addwf	___flmul@grs^0,f,c
 10053   001BFE  0E00               	movlw	0
 10054   001C00  224A               	addwfc	(___flmul@grs+1)^0,f,c
 10055   001C02  224B               	addwfc	(___flmul@grs+2)^0,f,c
 10056   001C04  224C               	addwfc	(___flmul@grs+3)^0,f,c
 10057   001C06  5053               	movf	(___flmul@temp+1)^0,w,c
 10058   001C08  264E               	addwf	___flmul@prod^0,f,c
 10059   001C0A  0E00               	movlw	0
 10060   001C0C  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10061   001C0E  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10062   001C10  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10063   001C12  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
 10064   001C16  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
 10065   001C1A  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
 10066   001C1E  6A49               	clrf	___flmul@grs^0,c
 10067   001C20  503F               	movf	___flmul@a^0,w,c
 10068   001C22  023C               	mulwf	(___flmul@b+1)^0,c
 10069   001C24  CFF3 F052          	movff	prodl,___flmul@temp
 10070   001C28  CFF4 F053          	movff	prodh,___flmul@temp+1
 10071   001C2C  5052               	movf	___flmul@temp^0,w,c
 10072   001C2E  2649               	addwf	___flmul@grs^0,f,c
 10073   001C30  5053               	movf	(___flmul@temp+1)^0,w,c
 10074   001C32  224A               	addwfc	(___flmul@grs+1)^0,f,c
 10075   001C34  0E00               	movlw	0
 10076   001C36  224B               	addwfc	(___flmul@grs+2)^0,f,c
 10077   001C38  0E00               	movlw	0
 10078   001C3A  224C               	addwfc	(___flmul@grs+3)^0,f,c
 10079   001C3C  5040               	movf	(___flmul@a+1)^0,w,c
 10080   001C3E  023B               	mulwf	___flmul@b^0,c
 10081   001C40  CFF3 F052          	movff	prodl,___flmul@temp
 10082   001C44  CFF4 F053          	movff	prodh,___flmul@temp+1
 10083   001C48  5052               	movf	___flmul@temp^0,w,c
 10084   001C4A  2649               	addwf	___flmul@grs^0,f,c
 10085   001C4C  5053               	movf	(___flmul@temp+1)^0,w,c
 10086   001C4E  224A               	addwfc	(___flmul@grs+1)^0,f,c
 10087   001C50  0E00               	movlw	0
 10088   001C52  224B               	addwfc	(___flmul@grs+2)^0,f,c
 10089   001C54  0E00               	movlw	0
 10090   001C56  224C               	addwfc	(___flmul@grs+3)^0,f,c
 10091   001C58  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
 10092   001C5C  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
 10093   001C60  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
 10094   001C64  6A49               	clrf	___flmul@grs^0,c
 10095   001C66  503F               	movf	___flmul@a^0,w,c
 10096   001C68  023B               	mulwf	___flmul@b^0,c
 10097   001C6A  CFF3 F052          	movff	prodl,___flmul@temp
 10098   001C6E  CFF4 F053          	movff	prodh,___flmul@temp+1
 10099   001C72  5052               	movf	___flmul@temp^0,w,c
 10100   001C74  2649               	addwf	___flmul@grs^0,f,c
 10101   001C76  5053               	movf	(___flmul@temp+1)^0,w,c
 10102   001C78  224A               	addwfc	(___flmul@grs+1)^0,f,c
 10103   001C7A  0E00               	movlw	0
 10104   001C7C  224B               	addwfc	(___flmul@grs+2)^0,f,c
 10105   001C7E  0E00               	movlw	0
 10106   001C80  224C               	addwfc	(___flmul@grs+3)^0,f,c
 10107   001C82  5041               	movf	(___flmul@a+2)^0,w,c
 10108   001C84  023C               	mulwf	(___flmul@b+1)^0,c
 10109   001C86  CFF3 F052          	movff	prodl,___flmul@temp
 10110   001C8A  CFF4 F053          	movff	prodh,___flmul@temp+1
 10111   001C8E  5052               	movf	___flmul@temp^0,w,c
 10112   001C90  264E               	addwf	___flmul@prod^0,f,c
 10113   001C92  5053               	movf	(___flmul@temp+1)^0,w,c
 10114   001C94  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10115   001C96  0E00               	movlw	0
 10116   001C98  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10117   001C9A  0E00               	movlw	0
 10118   001C9C  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10119   001C9E  5040               	movf	(___flmul@a+1)^0,w,c
 10120   001CA0  023D               	mulwf	(___flmul@b+2)^0,c
 10121   001CA2  CFF3 F052          	movff	prodl,___flmul@temp
 10122   001CA6  CFF4 F053          	movff	prodh,___flmul@temp+1
 10123   001CAA  5052               	movf	___flmul@temp^0,w,c
 10124   001CAC  264E               	addwf	___flmul@prod^0,f,c
 10125   001CAE  5053               	movf	(___flmul@temp+1)^0,w,c
 10126   001CB0  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10127   001CB2  0E00               	movlw	0
 10128   001CB4  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10129   001CB6  0E00               	movlw	0
 10130   001CB8  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10131   001CBA  5041               	movf	(___flmul@a+2)^0,w,c
 10132   001CBC  023D               	mulwf	(___flmul@b+2)^0,c
 10133   001CBE  CFF3 F052          	movff	prodl,___flmul@temp
 10134   001CC2  CFF4 F053          	movff	prodh,___flmul@temp+1
 10135   001CC6  5052               	movf	___flmul@temp^0,w,c
 10136   001CC8  6E43               	movwf	??___flmul^0,c
 10137   001CCA  5053               	movf	(___flmul@temp+1)^0,w,c
 10138   001CCC  6E44               	movwf	(??___flmul+1)^0,c
 10139   001CCE  6A45               	clrf	(??___flmul+2)^0,c
 10140   001CD0  6A46               	clrf	(??___flmul+3)^0,c
 10141   001CD2  C045  F046         	movff	??___flmul+2,??___flmul+3
 10142   001CD6  C044  F045         	movff	??___flmul+1,??___flmul+2
 10143   001CDA  C043  F044         	movff	??___flmul,??___flmul+1
 10144   001CDE  6A43               	clrf	??___flmul^0,c
 10145   001CE0  5043               	movf	??___flmul^0,w,c
 10146   001CE2  264E               	addwf	___flmul@prod^0,f,c
 10147   001CE4  5044               	movf	(??___flmul+1)^0,w,c
 10148   001CE6  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10149   001CE8  5045               	movf	(??___flmul+2)^0,w,c
 10150   001CEA  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10151   001CEC  5046               	movf	(??___flmul+3)^0,w,c
 10152   001CEE  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10153   001CF0  C049  F043         	movff	___flmul@grs,??___flmul
 10154   001CF4  C04A  F044         	movff	___flmul@grs+1,??___flmul+1
 10155   001CF8  C04B  F045         	movff	___flmul@grs+2,??___flmul+2
 10156   001CFC  C04C  F046         	movff	___flmul@grs+3,??___flmul+3
 10157   001D00  0E19               	movlw	25
 10158   001D02  EF88  F00E         	goto	u11740
 10159   001D06                     u11745:
 10160   001D06  90D8               	bcf	status,0,c
 10161   001D08  3246               	rrcf	(??___flmul+3)^0,f,c
 10162   001D0A  3245               	rrcf	(??___flmul+2)^0,f,c
 10163   001D0C  3244               	rrcf	(??___flmul+1)^0,f,c
 10164   001D0E  3243               	rrcf	??___flmul^0,f,c
 10165   001D10                     u11740:
 10166   001D10  2EE8               	decfsz	wreg,f,c
 10167   001D12  EF83  F00E         	goto	u11745
 10168   001D16  5043               	movf	??___flmul^0,w,c
 10169   001D18  264E               	addwf	___flmul@prod^0,f,c
 10170   001D1A  5044               	movf	(??___flmul+1)^0,w,c
 10171   001D1C  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10172   001D1E  5045               	movf	(??___flmul+2)^0,w,c
 10173   001D20  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10174   001D22  5046               	movf	(??___flmul+3)^0,w,c
 10175   001D24  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10176   001D26  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
 10177   001D2A  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
 10178   001D2E  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
 10179   001D32  6A49               	clrf	___flmul@grs^0,c
 10180   001D34  5048               	movf	___flmul@aexp^0,w,c
 10181   001D36  C04D  F043         	movff	___flmul@bexp,??___flmul
 10182   001D3A  6A44               	clrf	(??___flmul+1)^0,c
 10183   001D3C  2643               	addwf	??___flmul^0,f,c
 10184   001D3E  0E00               	movlw	0
 10185   001D40  2244               	addwfc	(??___flmul+1)^0,f,c
 10186   001D42  0E82               	movlw	130
 10187   001D44  2443               	addwf	??___flmul^0,w,c
 10188   001D46  6E52               	movwf	___flmul@temp^0,c
 10189   001D48  0EFF               	movlw	255
 10190   001D4A  2044               	addwfc	(??___flmul+1)^0,w,c
 10191   001D4C  6E53               	movwf	(___flmul@temp+1)^0,c
 10192   001D4E  EFBE  F00E         	goto	l10876
 10193   001D52                     l10870:
 10194   001D52  90D8               	bcf	status,0,c
 10195   001D54  364E               	rlcf	___flmul@prod^0,f,c
 10196   001D56  364F               	rlcf	(___flmul@prod+1)^0,f,c
 10197   001D58  3650               	rlcf	(___flmul@prod+2)^0,f,c
 10198   001D5A  3651               	rlcf	(___flmul@prod+3)^0,f,c
 10199   001D5C  AE4C               	btfss	(___flmul@grs+3)^0,7,c
 10200   001D5E  EFB3  F00E         	goto	u11751
 10201   001D62  EFB5  F00E         	goto	u11750
 10202   001D66                     u11751:
 10203   001D66  EFB6  F00E         	goto	l2441
 10204   001D6A                     u11750:
 10205   001D6A  804E               	bsf	___flmul@prod^0,0,c
 10206   001D6C                     l2441:
 10207   001D6C  90D8               	bcf	status,0,c
 10208   001D6E  3649               	rlcf	___flmul@grs^0,f,c
 10209   001D70  364A               	rlcf	(___flmul@grs+1)^0,f,c
 10210   001D72  364B               	rlcf	(___flmul@grs+2)^0,f,c
 10211   001D74  364C               	rlcf	(___flmul@grs+3)^0,f,c
 10212   001D76  0652               	decf	___flmul@temp^0,f,c
 10213   001D78  A0D8               	btfss	status,0,c
 10214   001D7A  0653               	decf	(___flmul@temp+1)^0,f,c
 10215   001D7C                     l10876:
 10216   001D7C  AE50               	btfss	(___flmul@prod+2)^0,7,c
 10217   001D7E  EFC3  F00E         	goto	u11761
 10218   001D82  EFC5  F00E         	goto	u11760
 10219   001D86                     u11761:
 10220   001D86  EFA9  F00E         	goto	l10870
 10221   001D8A                     u11760:
 10222   001D8A  0E00               	movlw	0
 10223   001D8C  6E48               	movwf	___flmul@aexp^0,c
 10224   001D8E  AE4C               	btfss	(___flmul@grs+3)^0,7,c
 10225   001D90  EFCC  F00E         	goto	u11771
 10226   001D94  EFCE  F00E         	goto	u11770
 10227   001D98                     u11771:
 10228   001D98  EFF2  F00E         	goto	l2443
 10229   001D9C                     u11770:
 10230   001D9C  0EFF               	movlw	255
 10231   001D9E  1449               	andwf	___flmul@grs^0,w,c
 10232   001DA0  6E43               	movwf	??___flmul^0,c
 10233   001DA2  0EFF               	movlw	255
 10234   001DA4  144A               	andwf	(___flmul@grs+1)^0,w,c
 10235   001DA6  6E44               	movwf	(??___flmul+1)^0,c
 10236   001DA8  0EFF               	movlw	255
 10237   001DAA  144B               	andwf	(___flmul@grs+2)^0,w,c
 10238   001DAC  6E45               	movwf	(??___flmul+2)^0,c
 10239   001DAE  0E7F               	movlw	127
 10240   001DB0  144C               	andwf	(___flmul@grs+3)^0,w,c
 10241   001DB2  6E46               	movwf	(??___flmul+3)^0,c
 10242   001DB4  5043               	movf	??___flmul^0,w,c
 10243   001DB6  1044               	iorwf	(??___flmul+1)^0,w,c
 10244   001DB8  1045               	iorwf	(??___flmul+2)^0,w,c
 10245   001DBA  1046               	iorwf	(??___flmul+3)^0,w,c
 10246   001DBC  B4D8               	btfsc	status,2,c
 10247   001DBE  EFE3  F00E         	goto	u11781
 10248   001DC2  EFE5  F00E         	goto	u11780
 10249   001DC6                     u11781:
 10250   001DC6  EFE9  F00E         	goto	l2444
 10251   001DCA                     u11780:
 10252   001DCA                     l10884:
 10253   001DCA  0E01               	movlw	1
 10254   001DCC  6E48               	movwf	___flmul@aexp^0,c
 10255   001DCE  EFF2  F00E         	goto	l2443
 10256   001DD2                     l2444:
 10257   001DD2  A04E               	btfss	___flmul@prod^0,0,c
 10258   001DD4  EFEE  F00E         	goto	u11791
 10259   001DD8  EFF0  F00E         	goto	u11790
 10260   001DDC                     u11791:
 10261   001DDC  EFF2  F00E         	goto	l2443
 10262   001DE0                     u11790:
 10263   001DE0  EFE5  F00E         	goto	l10884
 10264   001DE4                     l2443:
 10265   001DE4  5048               	movf	___flmul@aexp^0,w,c
 10266   001DE6  B4D8               	btfsc	status,2,c
 10267   001DE8  EFF8  F00E         	goto	u11801
 10268   001DEC  EFFA  F00E         	goto	u11800
 10269   001DF0                     u11801:
 10270   001DF0  EF1E  F00F         	goto	l10896
 10271   001DF4                     u11800:
 10272   001DF4  0E01               	movlw	1
 10273   001DF6  264E               	addwf	___flmul@prod^0,f,c
 10274   001DF8  0E00               	movlw	0
 10275   001DFA  224F               	addwfc	(___flmul@prod+1)^0,f,c
 10276   001DFC  2250               	addwfc	(___flmul@prod+2)^0,f,c
 10277   001DFE  2251               	addwfc	(___flmul@prod+3)^0,f,c
 10278   001E00  A051               	btfss	(___flmul@prod+3)^0,0,c
 10279   001E02  EF05  F00F         	goto	u11811
 10280   001E06  EF07  F00F         	goto	u11810
 10281   001E0A                     u11811:
 10282   001E0A  EF1E  F00F         	goto	l10896
 10283   001E0E                     u11810:
 10284   001E0E  C04E  F043         	movff	___flmul@prod,??___flmul
 10285   001E12  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
 10286   001E16  C050  F045         	movff	___flmul@prod+2,??___flmul+2
 10287   001E1A  C051  F046         	movff	___flmul@prod+3,??___flmul+3
 10288   001E1E  3446               	rlcf	(??___flmul+3)^0,w,c
 10289   001E20  3246               	rrcf	(??___flmul+3)^0,f,c
 10290   001E22  3245               	rrcf	(??___flmul+2)^0,f,c
 10291   001E24  3244               	rrcf	(??___flmul+1)^0,f,c
 10292   001E26  3243               	rrcf	??___flmul^0,f,c
 10293   001E28  C043  F04E         	movff	??___flmul,___flmul@prod
 10294   001E2C  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
 10295   001E30  C045  F050         	movff	??___flmul+2,___flmul@prod+2
 10296   001E34  C046  F051         	movff	??___flmul+3,___flmul@prod+3
 10297   001E38  4A52               	infsnz	___flmul@temp^0,f,c
 10298   001E3A  2A53               	incf	(___flmul@temp+1)^0,f,c
 10299   001E3C                     l10896:
 10300   001E3C  BE53               	btfsc	(___flmul@temp+1)^0,7,c
 10301   001E3E  EF29  F00F         	goto	u11821
 10302   001E42  5053               	movf	(___flmul@temp+1)^0,w,c
 10303   001E44  E108               	bnz	u11820
 10304   001E46  2852               	incf	___flmul@temp^0,w,c
 10305   001E48  A0D8               	btfss	status,0,c
 10306   001E4A  EF29  F00F         	goto	u11821
 10307   001E4E  EF2B  F00F         	goto	u11820
 10308   001E52                     u11821:
 10309   001E52  EF35  F00F         	goto	l10900
 10310   001E56                     u11820:
 10311   001E56  0E00               	movlw	0
 10312   001E58  6E4E               	movwf	___flmul@prod^0,c
 10313   001E5A  0E00               	movlw	0
 10314   001E5C  6E4F               	movwf	(___flmul@prod+1)^0,c
 10315   001E5E  0E80               	movlw	128
 10316   001E60  6E50               	movwf	(___flmul@prod+2)^0,c
 10317   001E62  0E7F               	movlw	127
 10318   001E64  6E51               	movwf	(___flmul@prod+3)^0,c
 10319   001E66  EF63  F00F         	goto	l10912
 10320   001E6A                     l10900:
 10321   001E6A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
 10322   001E6C  EF42  F00F         	goto	u11830
 10323   001E70  5053               	movf	(___flmul@temp+1)^0,w,c
 10324   001E72  E106               	bnz	u11831
 10325   001E74  0452               	decf	___flmul@temp^0,w,c
 10326   001E76  B0D8               	btfsc	status,0,c
 10327   001E78  EF40  F00F         	goto	u11831
 10328   001E7C  EF42  F00F         	goto	u11830
 10329   001E80                     u11831:
 10330   001E80  EF4E  F00F         	goto	l2451
 10331   001E84                     u11830:
 10332   001E84  0E00               	movlw	0
 10333   001E86  6E4E               	movwf	___flmul@prod^0,c
 10334   001E88  0E00               	movlw	0
 10335   001E8A  6E4F               	movwf	(___flmul@prod+1)^0,c
 10336   001E8C  0E00               	movlw	0
 10337   001E8E  6E50               	movwf	(___flmul@prod+2)^0,c
 10338   001E90  0E00               	movlw	0
 10339   001E92  6E51               	movwf	(___flmul@prod+3)^0,c
 10340   001E94  0E00               	movlw	0
 10341   001E96  6E47               	movwf	___flmul@sign^0,c
 10342   001E98  EF63  F00F         	goto	l10912
 10343   001E9C                     l2451:
 10344   001E9C  C052  F04D         	movff	___flmul@temp,___flmul@bexp
 10345   001EA0  0EFF               	movlw	255
 10346   001EA2  164E               	andwf	___flmul@prod^0,f,c
 10347   001EA4  0EFF               	movlw	255
 10348   001EA6  164F               	andwf	(___flmul@prod+1)^0,f,c
 10349   001EA8  0E7F               	movlw	127
 10350   001EAA  1650               	andwf	(___flmul@prod+2)^0,f,c
 10351   001EAC  0E00               	movlw	0
 10352   001EAE  1651               	andwf	(___flmul@prod+3)^0,f,c
 10353   001EB0  A04D               	btfss	___flmul@bexp^0,0,c
 10354   001EB2  EF5D  F00F         	goto	u11841
 10355   001EB6  EF5F  F00F         	goto	u11840
 10356   001EBA                     u11841:
 10357   001EBA  EF60  F00F         	goto	l10910
 10358   001EBE                     u11840:
 10359   001EBE  8E50               	bsf	(___flmul@prod+2)^0,7,c
 10360   001EC0                     l10910:
 10361   001EC0  90D8               	bcf	status,0,c
 10362   001EC2  304D               	rrcf	___flmul@bexp^0,w,c
 10363   001EC4  6E51               	movwf	(___flmul@prod+3)^0,c
 10364   001EC6                     l10912:
 10365   001EC6  5047               	movf	___flmul@sign^0,w,c
 10366   001EC8  1251               	iorwf	(___flmul@prod+3)^0,f,c
 10367   001ECA  C04E  F03B         	movff	___flmul@prod,?___flmul
 10368   001ECE  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
 10369   001ED2  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
 10370   001ED6  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
 10371   001EDA                     l2438:
 10372   001EDA  0012               	return		;funcret
 10373   001EDC                     __end_of___flmul:
 10374                           	callstack 0
 10375                           
 10376 ;; *************** function ___fldiv *****************
 10377 ;; Defined at:
 10378 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  b               4   17[COMRAM] unsigned char 
 10381 ;;  a               4   21[COMRAM] unsigned char 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;  grs             4   36[COMRAM] unsigned long 
 10384 ;;  rem             4   29[COMRAM] unsigned long 
 10385 ;;  new_exp         2   34[COMRAM] short 
 10386 ;;  aexp            1   41[COMRAM] unsigned char 
 10387 ;;  bexp            1   40[COMRAM] unsigned char 
 10388 ;;  sign            1   33[COMRAM] unsigned char 
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  4   17[COMRAM] unsigned char 
 10391 ;; Registers used:
 10392 ;;		wreg, status,2, status,0
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10398 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10402 ;;Total ram usage:       25 bytes
 10403 ;; Hardware stack levels used: 1
 10404 ;; Hardware stack levels required when called: 3
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_ccp1_pwm_set_duty
 10409 ;;		_I2C_Master_Mode_Clock_Configurations
 10410 ;;		_ccp2_pwm_set_duty
 10411 ;;		_baudrate_calculate
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text64
 10416   0022D2                     __ptext64:
 10417                           	callstack 0
 10418   0022D2                     ___fldiv:
 10419                           	callstack 24
 10420   0022D2  5015               	movf	(___fldiv@b+3)^0,w,c
 10421   0022D4  0B80               	andlw	128
 10422   0022D6  6E22               	movwf	___fldiv@sign^0,c
 10423   0022D8  5015               	movf	(___fldiv@b+3)^0,w,c
 10424   0022DA  2415               	addwf	(___fldiv@b+3)^0,w,c
 10425   0022DC  6E29               	movwf	___fldiv@bexp^0,c
 10426   0022DE  AE14               	btfss	(___fldiv@b+2)^0,7,c
 10427   0022E0  EF74  F011         	goto	u10451
 10428   0022E4  EF76  F011         	goto	u10450
 10429   0022E8                     u10451:
 10430   0022E8  EF77  F011         	goto	l9794
 10431   0022EC                     u10450:
 10432   0022EC  8029               	bsf	___fldiv@bexp^0,0,c
 10433   0022EE                     l9794:
 10434   0022EE  5029               	movf	___fldiv@bexp^0,w,c
 10435   0022F0  B4D8               	btfsc	status,2,c
 10436   0022F2  EF7D  F011         	goto	u10461
 10437   0022F6  EF7F  F011         	goto	u10460
 10438   0022FA                     u10461:
 10439   0022FA  EF94  F011         	goto	l9804
 10440   0022FE                     u10460:
 10441   0022FE  2829               	incf	___fldiv@bexp^0,w,c
 10442   002300  A4D8               	btfss	status,2,c
 10443   002302  EF85  F011         	goto	u10471
 10444   002306  EF87  F011         	goto	u10470
 10445   00230A                     u10471:
 10446   00230A  EF8F  F011         	goto	l9800
 10447   00230E                     u10470:
 10448   00230E  0E00               	movlw	0
 10449   002310  6E12               	movwf	___fldiv@b^0,c
 10450   002312  0E00               	movlw	0
 10451   002314  6E13               	movwf	(___fldiv@b+1)^0,c
 10452   002316  0E00               	movlw	0
 10453   002318  6E14               	movwf	(___fldiv@b+2)^0,c
 10454   00231A  0E00               	movlw	0
 10455   00231C  6E15               	movwf	(___fldiv@b+3)^0,c
 10456   00231E                     l9800:
 10457   00231E  8E14               	bsf	(___fldiv@b+2)^0,7,c
 10458   002320  0E00               	movlw	0
 10459   002322  6E15               	movwf	(___fldiv@b+3)^0,c
 10460   002324  EF9C  F011         	goto	l9806
 10461   002328                     l9804:
 10462   002328  0E00               	movlw	0
 10463   00232A  6E12               	movwf	___fldiv@b^0,c
 10464   00232C  0E00               	movlw	0
 10465   00232E  6E13               	movwf	(___fldiv@b+1)^0,c
 10466   002330  0E00               	movlw	0
 10467   002332  6E14               	movwf	(___fldiv@b+2)^0,c
 10468   002334  0E00               	movlw	0
 10469   002336  6E15               	movwf	(___fldiv@b+3)^0,c
 10470   002338                     l9806:
 10471   002338  5019               	movf	(___fldiv@a+3)^0,w,c
 10472   00233A  0B80               	andlw	128
 10473   00233C  1A22               	xorwf	___fldiv@sign^0,f,c
 10474   00233E  5019               	movf	(___fldiv@a+3)^0,w,c
 10475   002340  2419               	addwf	(___fldiv@a+3)^0,w,c
 10476   002342  6E2A               	movwf	___fldiv@aexp^0,c
 10477   002344  AE18               	btfss	(___fldiv@a+2)^0,7,c
 10478   002346  EFA7  F011         	goto	u10481
 10479   00234A  EFA9  F011         	goto	u10480
 10480   00234E                     u10481:
 10481   00234E  EFAA  F011         	goto	l9814
 10482   002352                     u10480:
 10483   002352  802A               	bsf	___fldiv@aexp^0,0,c
 10484   002354                     l9814:
 10485   002354  502A               	movf	___fldiv@aexp^0,w,c
 10486   002356  B4D8               	btfsc	status,2,c
 10487   002358  EFB0  F011         	goto	u10491
 10488   00235C  EFB2  F011         	goto	u10490
 10489   002360                     u10491:
 10490   002360  EFC7  F011         	goto	l9824
 10491   002364                     u10490:
 10492   002364  282A               	incf	___fldiv@aexp^0,w,c
 10493   002366  A4D8               	btfss	status,2,c
 10494   002368  EFB8  F011         	goto	u10501
 10495   00236C  EFBA  F011         	goto	u10500
 10496   002370                     u10501:
 10497   002370  EFC2  F011         	goto	l9820
 10498   002374                     u10500:
 10499   002374  0E00               	movlw	0
 10500   002376  6E16               	movwf	___fldiv@a^0,c
 10501   002378  0E00               	movlw	0
 10502   00237A  6E17               	movwf	(___fldiv@a+1)^0,c
 10503   00237C  0E00               	movlw	0
 10504   00237E  6E18               	movwf	(___fldiv@a+2)^0,c
 10505   002380  0E00               	movlw	0
 10506   002382  6E19               	movwf	(___fldiv@a+3)^0,c
 10507   002384                     l9820:
 10508   002384  8E18               	bsf	(___fldiv@a+2)^0,7,c
 10509   002386  0E00               	movlw	0
 10510   002388  6E19               	movwf	(___fldiv@a+3)^0,c
 10511   00238A  EFCF  F011         	goto	l9826
 10512   00238E                     l9824:
 10513   00238E  0E00               	movlw	0
 10514   002390  6E16               	movwf	___fldiv@a^0,c
 10515   002392  0E00               	movlw	0
 10516   002394  6E17               	movwf	(___fldiv@a+1)^0,c
 10517   002396  0E00               	movlw	0
 10518   002398  6E18               	movwf	(___fldiv@a+2)^0,c
 10519   00239A  0E00               	movlw	0
 10520   00239C  6E19               	movwf	(___fldiv@a+3)^0,c
 10521   00239E                     l9826:
 10522   00239E  5016               	movf	___fldiv@a^0,w,c
 10523   0023A0  1017               	iorwf	(___fldiv@a+1)^0,w,c
 10524   0023A2  1018               	iorwf	(___fldiv@a+2)^0,w,c
 10525   0023A4  1019               	iorwf	(___fldiv@a+3)^0,w,c
 10526   0023A6  A4D8               	btfss	status,2,c
 10527   0023A8  EFD8  F011         	goto	u10511
 10528   0023AC  EFDA  F011         	goto	u10510
 10529   0023B0                     u10511:
 10530   0023B0  EFF2  F011         	goto	l9838
 10531   0023B4                     u10510:
 10532   0023B4  0E00               	movlw	0
 10533   0023B6  6E12               	movwf	___fldiv@b^0,c
 10534   0023B8  0E00               	movlw	0
 10535   0023BA  6E13               	movwf	(___fldiv@b+1)^0,c
 10536   0023BC  0E00               	movlw	0
 10537   0023BE  6E14               	movwf	(___fldiv@b+2)^0,c
 10538   0023C0  0E00               	movlw	0
 10539   0023C2  6E15               	movwf	(___fldiv@b+3)^0,c
 10540   0023C4  0E80               	movlw	128
 10541   0023C6  1214               	iorwf	(___fldiv@b+2)^0,f,c
 10542   0023C8  0E7F               	movlw	127
 10543   0023CA  1215               	iorwf	(___fldiv@b+3)^0,f,c
 10544   0023CC                     l9832:
 10545   0023CC  5022               	movf	___fldiv@sign^0,w,c
 10546   0023CE  1215               	iorwf	(___fldiv@b+3)^0,f,c
 10547   0023D0  C012  F012         	movff	___fldiv@b,?___fldiv
 10548   0023D4  C013  F013         	movff	___fldiv@b+1,?___fldiv+1
 10549   0023D8  C014  F014         	movff	___fldiv@b+2,?___fldiv+2
 10550   0023DC  C015  F015         	movff	___fldiv@b+3,?___fldiv+3
 10551   0023E0  EF35  F013         	goto	l2402
 10552   0023E4                     l9838:
 10553   0023E4  5029               	movf	___fldiv@bexp^0,w,c
 10554   0023E6  A4D8               	btfss	status,2,c
 10555   0023E8  EFF8  F011         	goto	u10521
 10556   0023EC  EFFA  F011         	goto	u10520
 10557   0023F0                     u10521:
 10558   0023F0  EF04  F012         	goto	l9846
 10559   0023F4                     u10520:
 10560   0023F4  0E00               	movlw	0
 10561   0023F6  6E12               	movwf	?___fldiv^0,c
 10562   0023F8  0E00               	movlw	0
 10563   0023FA  6E13               	movwf	(?___fldiv+1)^0,c
 10564   0023FC  0E00               	movlw	0
 10565   0023FE  6E14               	movwf	(?___fldiv+2)^0,c
 10566   002400  0E00               	movlw	0
 10567   002402  6E15               	movwf	(?___fldiv+3)^0,c
 10568   002404  EF35  F013         	goto	l2402
 10569   002408                     l9846:
 10570   002408  502A               	movf	___fldiv@aexp^0,w,c
 10571   00240A  C029  F01A         	movff	___fldiv@bexp,??___fldiv
 10572   00240E  6A1B               	clrf	(??___fldiv+1)^0,c
 10573   002410  5E1A               	subwf	??___fldiv^0,f,c
 10574   002412  0E00               	movlw	0
 10575   002414  5A1B               	subwfb	(??___fldiv+1)^0,f,c
 10576   002416  0E7F               	movlw	127
 10577   002418  241A               	addwf	??___fldiv^0,w,c
 10578   00241A  6E23               	movwf	___fldiv@new_exp^0,c
 10579   00241C  0E00               	movlw	0
 10580   00241E  201B               	addwfc	(??___fldiv+1)^0,w,c
 10581   002420  6E24               	movwf	(___fldiv@new_exp+1)^0,c
 10582   002422  C012  F01E         	movff	___fldiv@b,___fldiv@rem
 10583   002426  C013  F01F         	movff	___fldiv@b+1,___fldiv@rem+1
 10584   00242A  C014  F020         	movff	___fldiv@b+2,___fldiv@rem+2
 10585   00242E  C015  F021         	movff	___fldiv@b+3,___fldiv@rem+3
 10586   002432  0E00               	movlw	0
 10587   002434  6E12               	movwf	___fldiv@b^0,c
 10588   002436  0E00               	movlw	0
 10589   002438  6E13               	movwf	(___fldiv@b+1)^0,c
 10590   00243A  0E00               	movlw	0
 10591   00243C  6E14               	movwf	(___fldiv@b+2)^0,c
 10592   00243E  0E00               	movlw	0
 10593   002440  6E15               	movwf	(___fldiv@b+3)^0,c
 10594   002442  0E00               	movlw	0
 10595   002444  6E25               	movwf	___fldiv@grs^0,c
 10596   002446  0E00               	movlw	0
 10597   002448  6E26               	movwf	(___fldiv@grs+1)^0,c
 10598   00244A  0E00               	movlw	0
 10599   00244C  6E27               	movwf	(___fldiv@grs+2)^0,c
 10600   00244E  0E00               	movlw	0
 10601   002450  6E28               	movwf	(___fldiv@grs+3)^0,c
 10602   002452  0E00               	movlw	0
 10603   002454  6E2A               	movwf	___fldiv@aexp^0,c
 10604   002456  EF65  F012         	goto	l2404
 10605   00245A                     l9856:
 10606   00245A  502A               	movf	___fldiv@aexp^0,w,c
 10607   00245C  B4D8               	btfsc	status,2,c
 10608   00245E  EF33  F012         	goto	u10531
 10609   002462  EF35  F012         	goto	u10530
 10610   002466                     u10531:
 10611   002466  EF4C  F012         	goto	l9864
 10612   00246A                     u10530:
 10613   00246A  90D8               	bcf	status,0,c
 10614   00246C  361E               	rlcf	___fldiv@rem^0,f,c
 10615   00246E  361F               	rlcf	(___fldiv@rem+1)^0,f,c
 10616   002470  3620               	rlcf	(___fldiv@rem+2)^0,f,c
 10617   002472  3621               	rlcf	(___fldiv@rem+3)^0,f,c
 10618   002474  90D8               	bcf	status,0,c
 10619   002476  3612               	rlcf	___fldiv@b^0,f,c
 10620   002478  3613               	rlcf	(___fldiv@b+1)^0,f,c
 10621   00247A  3614               	rlcf	(___fldiv@b+2)^0,f,c
 10622   00247C  3615               	rlcf	(___fldiv@b+3)^0,f,c
 10623   00247E  AE28               	btfss	(___fldiv@grs+3)^0,7,c
 10624   002480  EF44  F012         	goto	u10541
 10625   002484  EF46  F012         	goto	u10540
 10626   002488                     u10541:
 10627   002488  EF47  F012         	goto	l2407
 10628   00248C                     u10540:
 10629   00248C  8012               	bsf	___fldiv@b^0,0,c
 10630   00248E                     l2407:
 10631   00248E  90D8               	bcf	status,0,c
 10632   002490  3625               	rlcf	___fldiv@grs^0,f,c
 10633   002492  3626               	rlcf	(___fldiv@grs+1)^0,f,c
 10634   002494  3627               	rlcf	(___fldiv@grs+2)^0,f,c
 10635   002496  3628               	rlcf	(___fldiv@grs+3)^0,f,c
 10636   002498                     l9864:
 10637   002498  5016               	movf	___fldiv@a^0,w,c
 10638   00249A  5C1E               	subwf	___fldiv@rem^0,w,c
 10639   00249C  5017               	movf	(___fldiv@a+1)^0,w,c
 10640   00249E  581F               	subwfb	(___fldiv@rem+1)^0,w,c
 10641   0024A0  5018               	movf	(___fldiv@a+2)^0,w,c
 10642   0024A2  5820               	subwfb	(___fldiv@rem+2)^0,w,c
 10643   0024A4  5019               	movf	(___fldiv@a+3)^0,w,c
 10644   0024A6  5821               	subwfb	(___fldiv@rem+3)^0,w,c
 10645   0024A8  A0D8               	btfss	status,0,c
 10646   0024AA  EF59  F012         	goto	u10551
 10647   0024AE  EF5B  F012         	goto	u10550
 10648   0024B2                     u10551:
 10649   0024B2  EF64  F012         	goto	l9870
 10650   0024B6                     u10550:
 10651   0024B6  8C28               	bsf	(___fldiv@grs+3)^0,6,c
 10652   0024B8  5016               	movf	___fldiv@a^0,w,c
 10653   0024BA  5E1E               	subwf	___fldiv@rem^0,f,c
 10654   0024BC  5017               	movf	(___fldiv@a+1)^0,w,c
 10655   0024BE  5A1F               	subwfb	(___fldiv@rem+1)^0,f,c
 10656   0024C0  5018               	movf	(___fldiv@a+2)^0,w,c
 10657   0024C2  5A20               	subwfb	(___fldiv@rem+2)^0,f,c
 10658   0024C4  5019               	movf	(___fldiv@a+3)^0,w,c
 10659   0024C6  5A21               	subwfb	(___fldiv@rem+3)^0,f,c
 10660   0024C8                     l9870:
 10661   0024C8  2A2A               	incf	___fldiv@aexp^0,f,c
 10662   0024CA                     l2404:
 10663   0024CA  0E19               	movlw	25
 10664   0024CC  642A               	cpfsgt	___fldiv@aexp^0,c
 10665   0024CE  EF6B  F012         	goto	u10561
 10666   0024D2  EF6D  F012         	goto	u10560
 10667   0024D6                     u10561:
 10668   0024D6  EF2D  F012         	goto	l9856
 10669   0024DA                     u10560:
 10670   0024DA  501E               	movf	___fldiv@rem^0,w,c
 10671   0024DC  101F               	iorwf	(___fldiv@rem+1)^0,w,c
 10672   0024DE  1020               	iorwf	(___fldiv@rem+2)^0,w,c
 10673   0024E0  1021               	iorwf	(___fldiv@rem+3)^0,w,c
 10674   0024E2  B4D8               	btfsc	status,2,c
 10675   0024E4  EF76  F012         	goto	u10571
 10676   0024E8  EF78  F012         	goto	u10570
 10677   0024EC                     u10571:
 10678   0024EC  EF90  F012         	goto	l9882
 10679   0024F0                     u10570:
 10680   0024F0  8025               	bsf	___fldiv@grs^0,0,c
 10681   0024F2  EF90  F012         	goto	l9882
 10682   0024F6                     l9876:
 10683   0024F6  90D8               	bcf	status,0,c
 10684   0024F8  3612               	rlcf	___fldiv@b^0,f,c
 10685   0024FA  3613               	rlcf	(___fldiv@b+1)^0,f,c
 10686   0024FC  3614               	rlcf	(___fldiv@b+2)^0,f,c
 10687   0024FE  3615               	rlcf	(___fldiv@b+3)^0,f,c
 10688   002500  AE28               	btfss	(___fldiv@grs+3)^0,7,c
 10689   002502  EF85  F012         	goto	u10581
 10690   002506  EF87  F012         	goto	u10580
 10691   00250A                     u10581:
 10692   00250A  EF88  F012         	goto	l2413
 10693   00250E                     u10580:
 10694   00250E  8012               	bsf	___fldiv@b^0,0,c
 10695   002510                     l2413:
 10696   002510  90D8               	bcf	status,0,c
 10697   002512  3625               	rlcf	___fldiv@grs^0,f,c
 10698   002514  3626               	rlcf	(___fldiv@grs+1)^0,f,c
 10699   002516  3627               	rlcf	(___fldiv@grs+2)^0,f,c
 10700   002518  3628               	rlcf	(___fldiv@grs+3)^0,f,c
 10701   00251A  0623               	decf	___fldiv@new_exp^0,f,c
 10702   00251C  A0D8               	btfss	status,0,c
 10703   00251E  0624               	decf	(___fldiv@new_exp+1)^0,f,c
 10704   002520                     l9882:
 10705   002520  AE14               	btfss	(___fldiv@b+2)^0,7,c
 10706   002522  EF95  F012         	goto	u10591
 10707   002526  EF97  F012         	goto	u10590
 10708   00252A                     u10591:
 10709   00252A  EF7B  F012         	goto	l9876
 10710   00252E                     u10590:
 10711   00252E  0E00               	movlw	0
 10712   002530  6E2A               	movwf	___fldiv@aexp^0,c
 10713   002532  AE28               	btfss	(___fldiv@grs+3)^0,7,c
 10714   002534  EF9E  F012         	goto	u10601
 10715   002538  EFA0  F012         	goto	u10600
 10716   00253C                     u10601:
 10717   00253C  EFC4  F012         	goto	l2415
 10718   002540                     u10600:
 10719   002540  0EFF               	movlw	255
 10720   002542  1425               	andwf	___fldiv@grs^0,w,c
 10721   002544  6E1A               	movwf	??___fldiv^0,c
 10722   002546  0EFF               	movlw	255
 10723   002548  1426               	andwf	(___fldiv@grs+1)^0,w,c
 10724   00254A  6E1B               	movwf	(??___fldiv+1)^0,c
 10725   00254C  0EFF               	movlw	255
 10726   00254E  1427               	andwf	(___fldiv@grs+2)^0,w,c
 10727   002550  6E1C               	movwf	(??___fldiv+2)^0,c
 10728   002552  0E7F               	movlw	127
 10729   002554  1428               	andwf	(___fldiv@grs+3)^0,w,c
 10730   002556  6E1D               	movwf	(??___fldiv+3)^0,c
 10731   002558  501A               	movf	??___fldiv^0,w,c
 10732   00255A  101B               	iorwf	(??___fldiv+1)^0,w,c
 10733   00255C  101C               	iorwf	(??___fldiv+2)^0,w,c
 10734   00255E  101D               	iorwf	(??___fldiv+3)^0,w,c
 10735   002560  B4D8               	btfsc	status,2,c
 10736   002562  EFB5  F012         	goto	u10611
 10737   002566  EFB7  F012         	goto	u10610
 10738   00256A                     u10611:
 10739   00256A  EFBB  F012         	goto	l2416
 10740   00256E                     u10610:
 10741   00256E                     l9890:
 10742   00256E  0E01               	movlw	1
 10743   002570  6E2A               	movwf	___fldiv@aexp^0,c
 10744   002572  EFC4  F012         	goto	l2415
 10745   002576                     l2416:
 10746   002576  A012               	btfss	___fldiv@b^0,0,c
 10747   002578  EFC0  F012         	goto	u10621
 10748   00257C  EFC2  F012         	goto	u10620
 10749   002580                     u10621:
 10750   002580  EFC4  F012         	goto	l2415
 10751   002584                     u10620:
 10752   002584  EFB7  F012         	goto	l9890
 10753   002588                     l2415:
 10754   002588  502A               	movf	___fldiv@aexp^0,w,c
 10755   00258A  B4D8               	btfsc	status,2,c
 10756   00258C  EFCA  F012         	goto	u10631
 10757   002590  EFCC  F012         	goto	u10630
 10758   002594                     u10631:
 10759   002594  EFF0  F012         	goto	l9902
 10760   002598                     u10630:
 10761   002598  0E01               	movlw	1
 10762   00259A  2612               	addwf	___fldiv@b^0,f,c
 10763   00259C  0E00               	movlw	0
 10764   00259E  2213               	addwfc	(___fldiv@b+1)^0,f,c
 10765   0025A0  2214               	addwfc	(___fldiv@b+2)^0,f,c
 10766   0025A2  2215               	addwfc	(___fldiv@b+3)^0,f,c
 10767   0025A4  A015               	btfss	(___fldiv@b+3)^0,0,c
 10768   0025A6  EFD7  F012         	goto	u10641
 10769   0025AA  EFD9  F012         	goto	u10640
 10770   0025AE                     u10641:
 10771   0025AE  EFF0  F012         	goto	l9902
 10772   0025B2                     u10640:
 10773   0025B2  C012  F01A         	movff	___fldiv@b,??___fldiv
 10774   0025B6  C013  F01B         	movff	___fldiv@b+1,??___fldiv+1
 10775   0025BA  C014  F01C         	movff	___fldiv@b+2,??___fldiv+2
 10776   0025BE  C015  F01D         	movff	___fldiv@b+3,??___fldiv+3
 10777   0025C2  341D               	rlcf	(??___fldiv+3)^0,w,c
 10778   0025C4  321D               	rrcf	(??___fldiv+3)^0,f,c
 10779   0025C6  321C               	rrcf	(??___fldiv+2)^0,f,c
 10780   0025C8  321B               	rrcf	(??___fldiv+1)^0,f,c
 10781   0025CA  321A               	rrcf	??___fldiv^0,f,c
 10782   0025CC  C01A  F012         	movff	??___fldiv,___fldiv@b
 10783   0025D0  C01B  F013         	movff	??___fldiv+1,___fldiv@b+1
 10784   0025D4  C01C  F014         	movff	??___fldiv+2,___fldiv@b+2
 10785   0025D8  C01D  F015         	movff	??___fldiv+3,___fldiv@b+3
 10786   0025DC  4A23               	infsnz	___fldiv@new_exp^0,f,c
 10787   0025DE  2A24               	incf	(___fldiv@new_exp+1)^0,f,c
 10788   0025E0                     l9902:
 10789   0025E0  BE24               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10790   0025E2  EFFB  F012         	goto	u10651
 10791   0025E6  5024               	movf	(___fldiv@new_exp+1)^0,w,c
 10792   0025E8  E108               	bnz	u10650
 10793   0025EA  2823               	incf	___fldiv@new_exp^0,w,c
 10794   0025EC  A0D8               	btfss	status,0,c
 10795   0025EE  EFFB  F012         	goto	u10651
 10796   0025F2  EFFD  F012         	goto	u10650
 10797   0025F6                     u10651:
 10798   0025F6  EF08  F013         	goto	l9906
 10799   0025FA                     u10650:
 10800   0025FA  0E00               	movlw	0
 10801   0025FC  6E24               	movwf	(___fldiv@new_exp+1)^0,c
 10802   0025FE  6823               	setf	___fldiv@new_exp^0,c
 10803   002600  0E00               	movlw	0
 10804   002602  6E12               	movwf	___fldiv@b^0,c
 10805   002604  0E00               	movlw	0
 10806   002606  6E13               	movwf	(___fldiv@b+1)^0,c
 10807   002608  0E00               	movlw	0
 10808   00260A  6E14               	movwf	(___fldiv@b+2)^0,c
 10809   00260C  0E00               	movlw	0
 10810   00260E  6E15               	movwf	(___fldiv@b+3)^0,c
 10811   002610                     l9906:
 10812   002610  BE24               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10813   002612  EF15  F013         	goto	u10660
 10814   002616  5024               	movf	(___fldiv@new_exp+1)^0,w,c
 10815   002618  E106               	bnz	u10661
 10816   00261A  0423               	decf	___fldiv@new_exp^0,w,c
 10817   00261C  B0D8               	btfsc	status,0,c
 10818   00261E  EF13  F013         	goto	u10661
 10819   002622  EF15  F013         	goto	u10660
 10820   002626                     u10661:
 10821   002626  EF23  F013         	goto	l9910
 10822   00262A                     u10660:
 10823   00262A  0E00               	movlw	0
 10824   00262C  6E24               	movwf	(___fldiv@new_exp+1)^0,c
 10825   00262E  0E00               	movlw	0
 10826   002630  6E23               	movwf	___fldiv@new_exp^0,c
 10827   002632  0E00               	movlw	0
 10828   002634  6E12               	movwf	___fldiv@b^0,c
 10829   002636  0E00               	movlw	0
 10830   002638  6E13               	movwf	(___fldiv@b+1)^0,c
 10831   00263A  0E00               	movlw	0
 10832   00263C  6E14               	movwf	(___fldiv@b+2)^0,c
 10833   00263E  0E00               	movlw	0
 10834   002640  6E15               	movwf	(___fldiv@b+3)^0,c
 10835   002642  0E00               	movlw	0
 10836   002644  6E22               	movwf	___fldiv@sign^0,c
 10837   002646                     l9910:
 10838   002646  C023  F029         	movff	___fldiv@new_exp,___fldiv@bexp
 10839   00264A  A029               	btfss	___fldiv@bexp^0,0,c
 10840   00264C  EF2A  F013         	goto	u10671
 10841   002650  EF2C  F013         	goto	u10670
 10842   002654                     u10671:
 10843   002654  EF2F  F013         	goto	l9916
 10844   002658                     u10670:
 10845   002658  8E14               	bsf	(___fldiv@b+2)^0,7,c
 10846   00265A  EF30  F013         	goto	l9918
 10847   00265E                     l9916:
 10848   00265E  9E14               	bcf	(___fldiv@b+2)^0,7,c
 10849   002660                     l9918:
 10850   002660  90D8               	bcf	status,0,c
 10851   002662  3029               	rrcf	___fldiv@bexp^0,w,c
 10852   002664  6E15               	movwf	(___fldiv@b+3)^0,c
 10853   002666  EFE6  F011         	goto	l9832
 10854   00266A                     l2402:
 10855   00266A  0012               	return		;funcret
 10856   00266C                     __end_of___fldiv:
 10857                           	callstack 0
 10858                           
 10859 ;; *************** function _ADC_get_conversion_blocking *****************
 10860 ;; Defined at:
 10861 ;;		line 143 in file "MKAL_layer/ADC/hal_adc.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  ADC_conf        2   11[COMRAM] PTR const struct .
 10864 ;;		 -> ADC_(6), 
 10865 ;;  ADC_CHANNAL_    1   13[COMRAM] enum E3044
 10866 ;;  conversion_s    1   14[COMRAM] PTR unsigned short 
 10867 ;;		 -> value_1(2), 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  ret             1   16[COMRAM] unsigned char 
 10870 ;;  l_conversion    1   15[COMRAM] unsigned char 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  1    wreg      unsigned char 
 10873 ;; Registers used:
 10874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10883 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10884 ;;Total ram usage:        6 bytes
 10885 ;; Hardware stack levels used: 1
 10886 ;; Hardware stack levels required when called: 5
 10887 ;; This function calls:
 10888 ;;		_ADC_ISconversion_done
 10889 ;;		_ADC_ISconversion_result
 10890 ;;		_ADC_select_channal
 10891 ;;		_ADC_start_conversion
 10892 ;; This function is called by:
 10893 ;;		_main
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text65
 10898   0040A2                     __ptext65:
 10899                           	callstack 0
 10900   0040A2                     _ADC_get_conversion_blocking:
 10901                           	callstack 25
 10902   0040A2                     
 10903                           ;MKAL_layer/ADC/hal_adc.c: 146:      uint8 l_conversion_status = 0;
 10904   0040A2  0E00               	movlw	0
 10905   0040A4  6E10               	movwf	ADC_get_conversion_blocking@l_conversion_status^0,c
 10906   0040A6                     
 10907                           ;MKAL_layer/ADC/hal_adc.c: 147:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_status)){
 10908   0040A6  500C               	movf	ADC_get_conversion_blocking@ADC_conf^0,w,c
 10909   0040A8  100D               	iorwf	(ADC_get_conversion_blocking@ADC_conf+1)^0,w,c
 10910   0040AA  B4D8               	btfsc	status,2,c
 10911   0040AC  EF5A  F020         	goto	u12061
 10912   0040B0  EF5C  F020         	goto	u12060
 10913   0040B4                     u12061:
 10914   0040B4  EF64  F020         	goto	l11104
 10915   0040B8                     u12060:
 10916   0040B8  500F               	movf	ADC_get_conversion_blocking@conversion_status^0,w,c
 10917   0040BA  A4D8               	btfss	status,2,c
 10918   0040BC  EF62  F020         	goto	u12071
 10919   0040C0  EF64  F020         	goto	u12070
 10920   0040C4                     u12071:
 10921   0040C4  EF66  F020         	goto	l11106
 10922   0040C8                     u12070:
 10923   0040C8                     l11104:
 10924                           
 10925                           ;MKAL_layer/ADC/hal_adc.c: 149:     }
 10926   0040C8  EF8D  F020         	goto	l437
 10927   0040CC                     l11106:
 10928                           
 10929                           ;MKAL_layer/ADC/hal_adc.c: 152:         ret = ADC_select_channal(ADC_conf,ADC_CHANNAL_SE
      +                          LECT);
 10930   0040CC  C00C  F007         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_select_channal@ADC_conf
 10931   0040D0  C00D  F008         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_select_channal@ADC_conf+1
 10932   0040D4  C00E  F009         	movff	ADC_get_conversion_blocking@ADC_CHANNAL_SELECT,ADC_select_channal@ADC_CHANNAL_SEL
      +                          ECT
 10933   0040D8  ECBB  F024         	call	_ADC_select_channal	;wreg free
 10934   0040DC  6E11               	movwf	ADC_get_conversion_blocking@ret^0,c
 10935                           
 10936                           ;MKAL_layer/ADC/hal_adc.c: 154:         ret = ADC_start_conversion(ADC_conf);
 10937   0040DE  C00C  F004         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_start_conversion@ADC_conf
 10938   0040E2  C00D  F005         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_start_conversion@ADC_conf+1
 10939   0040E6  ECD1  F025         	call	_ADC_start_conversion	;wreg free
 10940   0040EA  6E11               	movwf	ADC_get_conversion_blocking@ret^0,c
 10941   0040EC  C00C  F004         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_ISconversion_done@ADC_conf
 10942   0040F0  C00D  F005         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_ISconversion_done@ADC_conf+1
 10943   0040F4  0E10               	movlw	low ADC_get_conversion_blocking@l_conversion_status
 10944   0040F6  6E06               	movwf	ADC_ISconversion_done@conversion_status^0,c
 10945   0040F8  EC2D  F023         	call	_ADC_ISconversion_done	;wreg free
 10946   0040FC                     l434:
 10947   0040FC  B2C2               	btfsc	194,1,c	;volatile
 10948   0040FE  EF83  F020         	goto	u12081
 10949   004102  EF85  F020         	goto	u12080
 10950   004106                     u12081:
 10951   004106  EF7E  F020         	goto	l434
 10952   00410A                     u12080:
 10953   00410A  C00C  F004         	movff	ADC_get_conversion_blocking@ADC_conf,ADC_ISconversion_result@ADC_conf
 10954   00410E  C00D  F005         	movff	ADC_get_conversion_blocking@ADC_conf+1,ADC_ISconversion_result@ADC_conf+1
 10955   004112  C00F  F006         	movff	ADC_get_conversion_blocking@conversion_status,ADC_ISconversion_result@conversion_
      +                          result
 10956   004116  EC75  F01B         	call	_ADC_ISconversion_result	;wreg free
 10957   00411A                     l437:
 10958   00411A  0012               	return		;funcret
 10959   00411C                     __end_of_ADC_get_conversion_blocking:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _ADC_start_conversion *****************
 10963 ;; Defined at:
 10964 ;;		line 99 in file "MKAL_layer/ADC/hal_adc.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;  ADC_conf        2    3[COMRAM] PTR const struct .
 10967 ;;		 -> ADC_(6), 
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  ret             1    5[COMRAM] unsigned char 
 10970 ;; Return value:  Size  Location     Type
 10971 ;;                  1    wreg      unsigned char 
 10972 ;; Registers used:
 10973 ;;		wreg, status,2, status,0
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;Total ram usage:        3 bytes
 10984 ;; Hardware stack levels used: 1
 10985 ;; Hardware stack levels required when called: 3
 10986 ;; This function calls:
 10987 ;;		Nothing
 10988 ;; This function is called by:
 10989 ;;		_ADC_get_conversion_blocking
 10990 ;;		_ADC_start_conversion_interrupt
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text66
 10995   004BA2                     __ptext66:
 10996                           	callstack 0
 10997   004BA2                     _ADC_start_conversion:
 10998                           	callstack 26
 10999   004BA2                     
 11000                           ;MKAL_layer/ADC/hal_adc.c: 101:     if (((void*)0) == ADC_conf){
 11001   004BA2  5004               	movf	ADC_start_conversion@ADC_conf^0,w,c
 11002   004BA4  1005               	iorwf	(ADC_start_conversion@ADC_conf+1)^0,w,c
 11003   004BA6  A4D8               	btfss	status,2,c
 11004   004BA8  EFD8  F025         	goto	u11391
 11005   004BAC  EFDA  F025         	goto	u11390
 11006   004BB0                     u11391:
 11007   004BB0  EFDE  F025         	goto	l407
 11008   004BB4                     u11390:
 11009   004BB4                     
 11010                           ;MKAL_layer/ADC/hal_adc.c: 102:         ret =(Std_ReturnType)0x00;
 11011   004BB4  0E00               	movlw	0
 11012   004BB6  6E06               	movwf	ADC_start_conversion@ret^0,c
 11013                           
 11014                           ;MKAL_layer/ADC/hal_adc.c: 103:     }
 11015   004BB8  EFE1  F025         	goto	l408
 11016   004BBC                     l407:
 11017                           
 11018                           ;MKAL_layer/ADC/hal_adc.c: 105:         (ADCON0bits.GODONE =1);
 11019   004BBC  82C2               	bsf	194,1,c	;volatile
 11020   004BBE                     
 11021                           ;MKAL_layer/ADC/hal_adc.c: 106:         ret = (Std_ReturnType)0x01;
 11022   004BBE  0E01               	movlw	1
 11023   004BC0  6E06               	movwf	ADC_start_conversion@ret^0,c
 11024   004BC2                     l408:
 11025                           
 11026                           ;MKAL_layer/ADC/hal_adc.c: 108:     return ret;
 11027   004BC2  5006               	movf	ADC_start_conversion@ret^0,w,c
 11028   004BC4  0012               	return		;funcret
 11029   004BC6                     __end_of_ADC_start_conversion:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function _ADC_select_channal *****************
 11033 ;; Defined at:
 11034 ;;		line 86 in file "MKAL_layer/ADC/hal_adc.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  ADC_conf        2    6[COMRAM] PTR const struct .
 11037 ;;		 -> ADC_(6), 
 11038 ;;  ADC_CHANNAL_    1    8[COMRAM] const enum E3044
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;  ret             1   10[COMRAM] unsigned char 
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      unsigned char 
 11043 ;; Registers used:
 11044 ;;		wreg, status,2, status,0, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11050 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11053 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11054 ;;Total ram usage:        5 bytes
 11055 ;; Hardware stack levels used: 1
 11056 ;; Hardware stack levels required when called: 4
 11057 ;; This function calls:
 11058 ;;		_adc_channel_port_confige
 11059 ;; This function is called by:
 11060 ;;		_ADC_get_conversion_blocking
 11061 ;;		_ADC_start_conversion_interrupt
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text67
 11066   004976                     __ptext67:
 11067                           	callstack 0
 11068   004976                     _ADC_select_channal:
 11069                           	callstack 25
 11070   004976                     
 11071                           ;MKAL_layer/ADC/hal_adc.c: 88:     if (((void*)0) == ADC_conf){
 11072   004976  5007               	movf	ADC_select_channal@ADC_conf^0,w,c
 11073   004978  1008               	iorwf	(ADC_select_channal@ADC_conf+1)^0,w,c
 11074   00497A  A4D8               	btfss	status,2,c
 11075   00497C  EFC2  F024         	goto	u11381
 11076   004980  EFC4  F024         	goto	u11380
 11077   004984                     u11381:
 11078   004984  EFC8  F024         	goto	l10572
 11079   004988                     u11380:
 11080   004988                     
 11081                           ;MKAL_layer/ADC/hal_adc.c: 89:         ret =(Std_ReturnType)0x00;
 11082   004988  0E00               	movlw	0
 11083   00498A  6E0B               	movwf	ADC_select_channal@ret^0,c
 11084                           
 11085                           ;MKAL_layer/ADC/hal_adc.c: 90:     }
 11086   00498C  EFD6  F024         	goto	l10578
 11087   004990                     l10572:
 11088                           
 11089                           ;MKAL_layer/ADC/hal_adc.c: 92:         ADCON0bits.CHS = ADC_CHANNAL_SELECT;
 11090   004990  C009  F00A         	movff	ADC_select_channal@ADC_CHANNAL_SELECT,??_ADC_select_channal
 11091   004994  460A               	rlncf	??_ADC_select_channal^0,f,c
 11092   004996  460A               	rlncf	??_ADC_select_channal^0,f,c
 11093   004998  50C2               	movf	194,w,c	;volatile
 11094   00499A  180A               	xorwf	??_ADC_select_channal^0,w,c
 11095   00499C  0BC3               	andlw	-61
 11096   00499E  180A               	xorwf	??_ADC_select_channal^0,w,c
 11097   0049A0  6EC2               	movwf	194,c	;volatile
 11098   0049A2                     
 11099                           ;MKAL_layer/ADC/hal_adc.c: 93:         adc_channel_port_confige(ADC_CHANNAL_SELECT);
 11100   0049A2  5009               	movf	ADC_select_channal@ADC_CHANNAL_SELECT^0,w,c
 11101   0049A4  ECA7  F01A         	call	_adc_channel_port_confige
 11102   0049A8                     
 11103                           ;MKAL_layer/ADC/hal_adc.c: 94:         ret = (Std_ReturnType)0x01;
 11104   0049A8  0E01               	movlw	1
 11105   0049AA  6E0B               	movwf	ADC_select_channal@ret^0,c
 11106   0049AC                     l10578:
 11107                           
 11108                           ;MKAL_layer/ADC/hal_adc.c: 96:     return ret;
 11109   0049AC  500B               	movf	ADC_select_channal@ret^0,w,c
 11110   0049AE  0012               	return		;funcret
 11111   0049B0                     __end_of_ADC_select_channal:
 11112                           	callstack 0
 11113                           
 11114 ;; *************** function _adc_channel_port_confige *****************
 11115 ;; Defined at:
 11116 ;;		line 176 in file "MKAL_layer/ADC/hal_adc.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  ADC_CHANNAL_    1    wreg     const enum E3044
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;  ADC_CHANNAL_    1    5[COMRAM] const enum E3044
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      void 
 11123 ;; Registers used:
 11124 ;;		wreg, status,2, status,0
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;Total ram usage:        3 bytes
 11135 ;; Hardware stack levels used: 1
 11136 ;; Hardware stack levels required when called: 3
 11137 ;; This function calls:
 11138 ;;		Nothing
 11139 ;; This function is called by:
 11140 ;;		_ADC_inti
 11141 ;;		_ADC_select_channal
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145                           	psect	text68
 11146   00354E                     __ptext68:
 11147                           	callstack 0
 11148   00354E                     _adc_channel_port_confige:
 11149                           	callstack 25
 11150                           
 11151                           ;incstack = 0
 11152                           ;adc_channel_port_confige@ADC_CHANNAL_SELECT stored from wreg
 11153   00354E  6E06               	movwf	adc_channel_port_confige@ADC_CHANNAL_SELECT^0,c
 11154   003550                     
 11155                           ;MKAL_layer/ADC/hal_adc.c: 176: static __attribute__((inline)) void adc_channel_port_con
      +                          fige(const ADC_CHANNAL_SELECT_t ADC_CHANNAL_SELECT);MKAL_layer/ADC/hal_adc.c: 177: {;MKA
      +                          L_layer/ADC/hal_adc.c: 178:     switch (ADC_CHANNAL_SELECT){
 11156   003550  EFD1  F01A         	goto	l10106
 11157   003554                     l10078:
 11158   003554  8092               	bsf	146,0,c	;volatile
 11159   003556  EF12  F01B         	goto	l460
 11160   00355A                     l10080:
 11161   00355A  8292               	bsf	146,1,c	;volatile
 11162   00355C  EF12  F01B         	goto	l460
 11163   003560                     l10082:
 11164   003560  8492               	bsf	146,2,c	;volatile
 11165   003562  EF12  F01B         	goto	l460
 11166   003566                     l10084:
 11167   003566  8692               	bsf	146,3,c	;volatile
 11168   003568  EF12  F01B         	goto	l460
 11169   00356C                     l10086:
 11170   00356C  8892               	bsf	146,4,c	;volatile
 11171   00356E  EF12  F01B         	goto	l460
 11172   003572                     l10088:
 11173   003572  8096               	bsf	150,0,c	;volatile
 11174   003574  EF12  F01B         	goto	l460
 11175   003578                     l10090:
 11176   003578  8296               	bsf	150,1,c	;volatile
 11177   00357A  EF12  F01B         	goto	l460
 11178   00357E                     l10092:
 11179   00357E  8496               	bsf	150,2,c	;volatile
 11180   003580  EF12  F01B         	goto	l460
 11181   003584                     l10094:
 11182   003584  8493               	bsf	147,2,c	;volatile
 11183   003586  EF12  F01B         	goto	l460
 11184   00358A                     l10096:
 11185   00358A  8693               	bsf	147,3,c	;volatile
 11186   00358C  EF12  F01B         	goto	l460
 11187   003590                     l10098:
 11188   003590  8293               	bsf	147,1,c	;volatile
 11189   003592  EF12  F01B         	goto	l460
 11190   003596                     l10100:
 11191   003596  8893               	bsf	147,4,c	;volatile
 11192   003598  EF12  F01B         	goto	l460
 11193   00359C                     l10102:
 11194   00359C  8093               	bsf	147,0,c	;volatile
 11195   00359E  EF12  F01B         	goto	l460
 11196   0035A2                     l10106:
 11197   0035A2  5006               	movf	adc_channel_port_confige@ADC_CHANNAL_SELECT^0,w,c
 11198   0035A4  6E04               	movwf	??_adc_channel_port_confige^0,c
 11199   0035A6  6A05               	clrf	(??_adc_channel_port_confige+1)^0,c
 11200                           
 11201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11202                           ; Switch size 1, requested type "simple"
 11203                           ; Number of cases is 1, Range of values is 0 to 0
 11204                           ; switch strategies available:
 11205                           ; Name         Instructions Cycles
 11206                           ; simple_byte            4     3 (average)
 11207                           ;	Chosen strategy is simple_byte
 11208   0035A8  5005               	movf	(??_adc_channel_port_confige+1)^0,w,c
 11209   0035AA  0A00               	xorlw	0	; case 0
 11210   0035AC  B4D8               	btfsc	status,2,c
 11211   0035AE  EFDB  F01A         	goto	l12020
 11212   0035B2  EF12  F01B         	goto	l460
 11213   0035B6                     l12020:
 11214                           
 11215                           ; Switch size 1, requested type "simple"
 11216                           ; Number of cases is 13, Range of values is 0 to 12
 11217                           ; switch strategies available:
 11218                           ; Name         Instructions Cycles
 11219                           ; simple_byte           40    21 (average)
 11220                           ;	Chosen strategy is simple_byte
 11221   0035B6  5004               	movf	??_adc_channel_port_confige^0,w,c
 11222   0035B8  0A00               	xorlw	0	; case 0
 11223   0035BA  B4D8               	btfsc	status,2,c
 11224   0035BC  EFAA  F01A         	goto	l10078
 11225   0035C0  0A01               	xorlw	1	; case 1
 11226   0035C2  B4D8               	btfsc	status,2,c
 11227   0035C4  EFAD  F01A         	goto	l10080
 11228   0035C8  0A03               	xorlw	3	; case 2
 11229   0035CA  B4D8               	btfsc	status,2,c
 11230   0035CC  EFB0  F01A         	goto	l10082
 11231   0035D0  0A01               	xorlw	1	; case 3
 11232   0035D2  B4D8               	btfsc	status,2,c
 11233   0035D4  EFB3  F01A         	goto	l10084
 11234   0035D8  0A07               	xorlw	7	; case 4
 11235   0035DA  B4D8               	btfsc	status,2,c
 11236   0035DC  EFB6  F01A         	goto	l10086
 11237   0035E0  0A01               	xorlw	1	; case 5
 11238   0035E2  B4D8               	btfsc	status,2,c
 11239   0035E4  EFB9  F01A         	goto	l10088
 11240   0035E8  0A03               	xorlw	3	; case 6
 11241   0035EA  B4D8               	btfsc	status,2,c
 11242   0035EC  EFBC  F01A         	goto	l10090
 11243   0035F0  0A01               	xorlw	1	; case 7
 11244   0035F2  B4D8               	btfsc	status,2,c
 11245   0035F4  EFBF  F01A         	goto	l10092
 11246   0035F8  0A0F               	xorlw	15	; case 8
 11247   0035FA  B4D8               	btfsc	status,2,c
 11248   0035FC  EFC2  F01A         	goto	l10094
 11249   003600  0A01               	xorlw	1	; case 9
 11250   003602  B4D8               	btfsc	status,2,c
 11251   003604  EFC5  F01A         	goto	l10096
 11252   003608  0A03               	xorlw	3	; case 10
 11253   00360A  B4D8               	btfsc	status,2,c
 11254   00360C  EFC8  F01A         	goto	l10098
 11255   003610  0A01               	xorlw	1	; case 11
 11256   003612  B4D8               	btfsc	status,2,c
 11257   003614  EFCB  F01A         	goto	l10100
 11258   003618  0A07               	xorlw	7	; case 12
 11259   00361A  B4D8               	btfsc	status,2,c
 11260   00361C  EFCE  F01A         	goto	l10102
 11261   003620  EF12  F01B         	goto	l460
 11262   003624                     l460:
 11263   003624  0012               	return		;funcret
 11264   003626                     __end_of_adc_channel_port_confige:
 11265                           	callstack 0
 11266                           
 11267 ;; *************** function _ADC_ISconversion_result *****************
 11268 ;; Defined at:
 11269 ;;		line 123 in file "MKAL_layer/ADC/hal_adc.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;  ADC_conf        2    3[COMRAM] PTR const struct .
 11272 ;;		 -> ADC_(6), 
 11273 ;;  conversion_r    1    5[COMRAM] PTR unsigned short 
 11274 ;;		 -> value_1(2), 
 11275 ;; Auto vars:     Size  Location     Type
 11276 ;;  ret             1    9[COMRAM] unsigned char 
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      unsigned char 
 11279 ;; Registers used:
 11280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11286 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;Total ram usage:        7 bytes
 11291 ;; Hardware stack levels used: 1
 11292 ;; Hardware stack levels required when called: 3
 11293 ;; This function calls:
 11294 ;;		Nothing
 11295 ;; This function is called by:
 11296 ;;		_ADC_get_conversion_blocking
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text69
 11301   0036EA                     __ptext69:
 11302                           	callstack 0
 11303   0036EA                     _ADC_ISconversion_result:
 11304                           	callstack 26
 11305   0036EA                     
 11306                           ;MKAL_layer/ADC/hal_adc.c: 125:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_result)){
 11307   0036EA  5004               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 11308   0036EC  1005               	iorwf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 11309   0036EE  B4D8               	btfsc	status,2,c
 11310   0036F0  EF7C  F01B         	goto	u11441
 11311   0036F4  EF7E  F01B         	goto	u11440
 11312   0036F8                     u11441:
 11313   0036F8  EF86  F01B         	goto	l10614
 11314   0036FC                     u11440:
 11315   0036FC  5006               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 11316   0036FE  A4D8               	btfss	status,2,c
 11317   003700  EF84  F01B         	goto	u11451
 11318   003704  EF86  F01B         	goto	u11450
 11319   003708                     u11451:
 11320   003708  EF8A  F01B         	goto	l10616
 11321   00370C                     u11450:
 11322   00370C                     l10614:
 11323                           
 11324                           ;MKAL_layer/ADC/hal_adc.c: 126:         ret =(Std_ReturnType)0x00;
 11325   00370C  0E00               	movlw	0
 11326   00370E  6E0A               	movwf	ADC_ISconversion_result@ret^0,c
 11327                           
 11328                           ;MKAL_layer/ADC/hal_adc.c: 127:     }
 11329   003710  EFD2  F01B         	goto	l10628
 11330   003714                     l10616:
 11331                           
 11332                           ;MKAL_layer/ADC/hal_adc.c: 129:         if(ADC_conf->result_format == 1){
 11333   003714  EE20 F005          	lfsr	2,5
 11334   003718  5004               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 11335   00371A  26D9               	addwf	fsr2l,f,c
 11336   00371C  5005               	movf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 11337   00371E  22DA               	addwfc	fsr2h,f,c
 11338   003720  A2DF               	btfss	indf2,1,c
 11339   003722  EF95  F01B         	goto	u11461
 11340   003726  EF97  F01B         	goto	u11460
 11341   00372A                     u11461:
 11342   00372A  EFAA  F01B         	goto	l10620
 11343   00372E                     u11460:
 11344   00372E                     l10618:
 11345                           
 11346                           ;MKAL_layer/ADC/hal_adc.c: 130:             *conversion_result = ((ADRESH << 8) + ADRESL
      +                          );
 11347   00372E  50C3               	movf	195,w,c	;volatile
 11348   003730  CFC4 F007          	movff	4036,??_ADC_ISconversion_result	;volatile
 11349   003734  6A08               	clrf	(??_ADC_ISconversion_result+1)^0,c
 11350   003736  C007  F008         	movff	??_ADC_ISconversion_result,??_ADC_ISconversion_result+1
 11351   00373A  6A07               	clrf	??_ADC_ISconversion_result^0,c
 11352   00373C  2607               	addwf	??_ADC_ISconversion_result^0,f,c
 11353   00373E  0E00               	movlw	0
 11354   003740  2208               	addwfc	(??_ADC_ISconversion_result+1)^0,f,c
 11355   003742  5006               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 11356   003744  6ED9               	movwf	fsr2l,c
 11357   003746  6ADA               	clrf	fsr2h,c
 11358   003748  C007  FFDE         	movff	??_ADC_ISconversion_result,postinc2
 11359   00374C  C008  FFDD         	movff	??_ADC_ISconversion_result+1,postdec2
 11360                           
 11361                           ;MKAL_layer/ADC/hal_adc.c: 131:         }else if(ADC_conf->result_format == 0){
 11362   003750  EFD0  F01B         	goto	l10626
 11363   003754                     l10620:
 11364   003754  EE20 F005          	lfsr	2,5
 11365   003758  5004               	movf	ADC_ISconversion_result@ADC_conf^0,w,c
 11366   00375A  26D9               	addwf	fsr2l,f,c
 11367   00375C  5005               	movf	(ADC_ISconversion_result@ADC_conf+1)^0,w,c
 11368   00375E  22DA               	addwfc	fsr2h,f,c
 11369   003760  B2DF               	btfsc	indf2,1,c
 11370   003762  EFB5  F01B         	goto	u11471
 11371   003766  EFB7  F01B         	goto	u11470
 11372   00376A                     u11471:
 11373   00376A  EF97  F01B         	goto	l10618
 11374   00376E                     u11470:
 11375   00376E                     
 11376                           ;MKAL_layer/ADC/hal_adc.c: 132:             *conversion_result = (((ADRESH << 8) + ADRES
      +                          L) >> 6) ;
 11377   00376E  50C3               	movf	195,w,c	;volatile
 11378   003770  CFC4 F007          	movff	4036,??_ADC_ISconversion_result	;volatile
 11379   003774  6A08               	clrf	(??_ADC_ISconversion_result+1)^0,c
 11380   003776  C007  F008         	movff	??_ADC_ISconversion_result,??_ADC_ISconversion_result+1
 11381   00377A  6A07               	clrf	??_ADC_ISconversion_result^0,c
 11382   00377C  2607               	addwf	??_ADC_ISconversion_result^0,f,c
 11383   00377E  0E00               	movlw	0
 11384   003780  2208               	addwfc	(??_ADC_ISconversion_result+1)^0,f,c
 11385   003782  0E06               	movlw	6
 11386   003784  6E09               	movwf	(??_ADC_ISconversion_result+2)^0,c
 11387   003786                     u11485:
 11388   003786  3408               	rlcf	(??_ADC_ISconversion_result+1)^0,w,c
 11389   003788  3208               	rrcf	(??_ADC_ISconversion_result+1)^0,f,c
 11390   00378A  3207               	rrcf	??_ADC_ISconversion_result^0,f,c
 11391   00378C  2E09               	decfsz	(??_ADC_ISconversion_result+2)^0,f,c
 11392   00378E  EFC3  F01B         	goto	u11485
 11393   003792  5006               	movf	ADC_ISconversion_result@conversion_result^0,w,c
 11394   003794  6ED9               	movwf	fsr2l,c
 11395   003796  6ADA               	clrf	fsr2h,c
 11396   003798  C007  FFDE         	movff	??_ADC_ISconversion_result,postinc2
 11397   00379C  C008  FFDD         	movff	??_ADC_ISconversion_result+1,postdec2
 11398   0037A0                     l10626:
 11399                           
 11400                           ;MKAL_layer/ADC/hal_adc.c: 138:         ret = (Std_ReturnType)0x01;
 11401   0037A0  0E01               	movlw	1
 11402   0037A2  6E0A               	movwf	ADC_ISconversion_result@ret^0,c
 11403   0037A4                     l10628:
 11404                           
 11405                           ;MKAL_layer/ADC/hal_adc.c: 140:      return ret;
 11406   0037A4  500A               	movf	ADC_ISconversion_result@ret^0,w,c
 11407   0037A6  0012               	return		;funcret
 11408   0037A8                     __end_of_ADC_ISconversion_result:
 11409                           	callstack 0
 11410                           
 11411 ;; *************** function _ADC_ISconversion_done *****************
 11412 ;; Defined at:
 11413 ;;		line 111 in file "MKAL_layer/ADC/hal_adc.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  ADC_conf        2    3[COMRAM] PTR const struct .
 11416 ;;		 -> ADC_(6), 
 11417 ;;  conversion_s    1    5[COMRAM] PTR unsigned char 
 11418 ;;		 -> ADC_get_conversion_blocking@l_conversion_status(1), 
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;  ret             1    6[COMRAM] unsigned char 
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  1    wreg      unsigned char 
 11423 ;; Registers used:
 11424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11425 ;; Tracked objects:
 11426 ;;		On entry : 0/0
 11427 ;;		On exit  : 0/0
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11430 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;Total ram usage:        4 bytes
 11435 ;; Hardware stack levels used: 1
 11436 ;; Hardware stack levels required when called: 3
 11437 ;; This function calls:
 11438 ;;		Nothing
 11439 ;; This function is called by:
 11440 ;;		_ADC_get_conversion_blocking
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444                           	psect	text70
 11445   00465A                     __ptext70:
 11446                           	callstack 0
 11447   00465A                     _ADC_ISconversion_done:
 11448                           	callstack 26
 11449   00465A                     
 11450                           ;MKAL_layer/ADC/hal_adc.c: 113:     if ((((void*)0) == ADC_conf) || (((void*)0) == conve
      +                          rsion_status)){
 11451   00465A  5004               	movf	ADC_ISconversion_done@ADC_conf^0,w,c
 11452   00465C  1005               	iorwf	(ADC_ISconversion_done@ADC_conf+1)^0,w,c
 11453   00465E  B4D8               	btfsc	status,2,c
 11454   004660  EF34  F023         	goto	u11401
 11455   004664  EF36  F023         	goto	u11400
 11456   004668                     u11401:
 11457   004668  EF3E  F023         	goto	l10598
 11458   00466C                     u11400:
 11459   00466C  5006               	movf	ADC_ISconversion_done@conversion_status^0,w,c
 11460   00466E  A4D8               	btfss	status,2,c
 11461   004670  EF3C  F023         	goto	u11411
 11462   004674  EF3E  F023         	goto	u11410
 11463   004678                     u11411:
 11464   004678  EF42  F023         	goto	l10600
 11465   00467C                     u11410:
 11466   00467C                     l10598:
 11467                           
 11468                           ;MKAL_layer/ADC/hal_adc.c: 114:         ret =(Std_ReturnType)0x00;
 11469   00467C  0E00               	movlw	0
 11470   00467E  6E07               	movwf	ADC_ISconversion_done@ret^0,c
 11471                           
 11472                           ;MKAL_layer/ADC/hal_adc.c: 115:     }
 11473   004680  EF51  F023         	goto	l10604
 11474   004684                     l10600:
 11475                           
 11476                           ;MKAL_layer/ADC/hal_adc.c: 117:         *conversion_status = (uint8)(!(ADCON0bits.GO_nDO
      +                          NE));
 11477   004684  5006               	movf	ADC_ISconversion_done@conversion_status^0,w,c
 11478   004686  6ED9               	movwf	fsr2l,c
 11479   004688  6ADA               	clrf	fsr2h,c
 11480   00468A  A2C2               	btfss	194,1,c	;volatile
 11481   00468C  EF4A  F023         	goto	u11421
 11482   004690  EF4D  F023         	goto	u11420
 11483   004694                     u11421:
 11484   004694  0E01               	movlw	1
 11485   004696  EF4E  F023         	goto	u11430
 11486   00469A                     u11420:
 11487   00469A  0E00               	movlw	0
 11488   00469C                     u11430:
 11489   00469C  6EDF               	movwf	indf2,c
 11490   00469E                     
 11491                           ;MKAL_layer/ADC/hal_adc.c: 118:         ret = (Std_ReturnType)0x01;
 11492   00469E  0E01               	movlw	1
 11493   0046A0  6E07               	movwf	ADC_ISconversion_done@ret^0,c
 11494   0046A2                     l10604:
 11495                           
 11496                           ;MKAL_layer/ADC/hal_adc.c: 120:      return ret;
 11497   0046A2  5007               	movf	ADC_ISconversion_done@ret^0,w,c
 11498   0046A4  0012               	return		;funcret
 11499   0046A6                     __end_of_ADC_ISconversion_done:
 11500                           	callstack 0
 11501                           
 11502 ;; *************** function _interrupt_manager *****************
 11503 ;; Defined at:
 11504 ;;		line 153 in file "MKAL_layer/Interrupt/mcal_interrupt_manager.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;		None
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;		None
 11509 ;; Return value:  Size  Location     Type
 11510 ;;                  1    wreg      void 
 11511 ;; Registers used:
 11512 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11513 ;; Tracked objects:
 11514 ;;		On entry : 0/0
 11515 ;;		On exit  : 0/0
 11516 ;;		Unchanged: 0/0
 11517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11522 ;;Total ram usage:        2 bytes
 11523 ;; Hardware stack levels used: 1
 11524 ;; Hardware stack levels required when called: 2
 11525 ;; This function calls:
 11526 ;;		_ADC_handeler_funvtion
 11527 ;;		_CCP1_ISR
 11528 ;;		_CCP2_ISR
 11529 ;;		_INT0_ISR
 11530 ;;		_INT1_ISR
 11531 ;;		_INT2_ISR
 11532 ;;		_MSSP_I2C_BC_ISR
 11533 ;;		_MSSP_I2C_ISR
 11534 ;;		_RB4_ISR
 11535 ;;		_RB5_ISR
 11536 ;;		_RB6_ISR
 11537 ;;		_RB7_ISR
 11538 ;;		_TIMER0_ISR
 11539 ;;		_TIMER1_ISR
 11540 ;;		_TIMER2_ISR
 11541 ;;		_TIMER3_ISR
 11542 ;;		_USART_RX_ISR
 11543 ;;		_USART_TX_ISR
 11544 ;; This function is called by:
 11545 ;;		Interrupt level 2
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           	psect	intcode
 11550   000008                     __pintcode:
 11551                           	callstack 0
 11552   000008                     _interrupt_manager:
 11553                           	callstack 22
 11554                           
 11555                           ;incstack = 0
 11556   000008  827B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11557   00000A  ED6E  F00F         	call	int_func,f	;refresh shadow registers
 11558                           
 11559                           	psect	intcode_body
 11560   001EDC                     __pintcode_body:
 11561                           	callstack 22
 11562   001EDC                     int_func:
 11563                           	callstack 22
 11564   001EDC  0006               	pop		; remove dummy address from shadow register refresh
 11565   001EDE  CFFA F002          	movff	pclath,??_interrupt_manager
 11566   001EE2  CFFB F003          	movff	pclatu,??_interrupt_manager+1
 11567   001EE6                     
 11568                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 155:         if((1 == INTCONbits.INT0IF)
      +                           && (1 == INTCONbits.INT0IF)){
 11569   001EE6  A2F2               	btfss	242,1,c	;volatile
 11570   001EE8  EF78  F00F         	goto	i2u851_41
 11571   001EEC  EF7A  F00F         	goto	i2u851_40
 11572   001EF0                     i2u851_41:
 11573   001EF0  EF83  F00F         	goto	i2l1175
 11574   001EF4                     i2u851_40:
 11575   001EF4  A2F2               	btfss	242,1,c	;volatile
 11576   001EF6  EF7F  F00F         	goto	i2u852_41
 11577   001EFA  EF81  F00F         	goto	i2u852_40
 11578   001EFE                     i2u852_41:
 11579   001EFE  EF83  F00F         	goto	i2l1175
 11580   001F02                     i2u852_40:
 11581   001F02                     
 11582                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 156:             INT0_ISR();
 11583   001F02  ECA5  F025         	call	_INT0_ISR	;wreg free
 11584   001F06                     i2l1175:
 11585                           
 11586                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 159:         if((1 == INTCON3bits.INT1IE
      +                          ) && (1 == INTCON3bits.INT1IF)){
 11587   001F06  A6F0               	btfss	240,3,c	;volatile
 11588   001F08  EF88  F00F         	goto	i2u853_41
 11589   001F0C  EF8A  F00F         	goto	i2u853_40
 11590   001F10                     i2u853_41:
 11591   001F10  EF93  F00F         	goto	i2l1177
 11592   001F14                     i2u853_40:
 11593   001F14  A0F0               	btfss	240,0,c	;volatile
 11594   001F16  EF8F  F00F         	goto	i2u854_41
 11595   001F1A  EF91  F00F         	goto	i2u854_40
 11596   001F1E                     i2u854_41:
 11597   001F1E  EF93  F00F         	goto	i2l1177
 11598   001F22                     i2u854_40:
 11599   001F22                     
 11600                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 160:             INT1_ISR();
 11601   001F22  EC8D  F025         	call	_INT1_ISR	;wreg free
 11602   001F26                     i2l1177:
 11603                           
 11604                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 163:         if((1 == INTCON3bits.INT2IE
      +                          ) && (1 == INTCON3bits.INT2IF)){
 11605   001F26  A8F0               	btfss	240,4,c	;volatile
 11606   001F28  EF98  F00F         	goto	i2u855_41
 11607   001F2C  EF9A  F00F         	goto	i2u855_40
 11608   001F30                     i2u855_41:
 11609   001F30  EFA3  F00F         	goto	i2l1179
 11610   001F34                     i2u855_40:
 11611   001F34  A2F0               	btfss	240,1,c	;volatile
 11612   001F36  EF9F  F00F         	goto	i2u856_41
 11613   001F3A  EFA1  F00F         	goto	i2u856_40
 11614   001F3E                     i2u856_41:
 11615   001F3E  EFA3  F00F         	goto	i2l1179
 11616   001F42                     i2u856_40:
 11617   001F42                     
 11618                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 164:             INT2_ISR();
 11619   001F42  EC75  F025         	call	_INT2_ISR	;wreg free
 11620   001F46                     i2l1179:
 11621                           
 11622                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 168:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 11623   001F46  A6F2               	btfss	242,3,c	;volatile
 11624   001F48  EFA8  F00F         	goto	i2u857_41
 11625   001F4C  EFAA  F00F         	goto	i2u857_40
 11626   001F50                     i2u857_41:
 11627   001F50  EFC5  F00F         	goto	i2l1181
 11628   001F54                     i2u857_40:
 11629   001F54  A0F2               	btfss	242,0,c	;volatile
 11630   001F56  EFAF  F00F         	goto	i2u858_41
 11631   001F5A  EFB1  F00F         	goto	i2u858_40
 11632   001F5E                     i2u858_41:
 11633   001F5E  EFC5  F00F         	goto	i2l1181
 11634   001F62                     i2u858_40:
 11635   001F62  A881               	btfss	129,4,c	;volatile
 11636   001F64  EFB6  F00F         	goto	i2u859_41
 11637   001F68  EFB8  F00F         	goto	i2u859_40
 11638   001F6C                     i2u859_41:
 11639   001F6C  EFC5  F00F         	goto	i2l1181
 11640   001F70                     i2u859_40:
 11641   001F70  0472               	decf	_flag1^0,w,c
 11642   001F72  A4D8               	btfss	status,2,c
 11643   001F74  EFBE  F00F         	goto	i2u860_41
 11644   001F78  EFC0  F00F         	goto	i2u860_40
 11645   001F7C                     i2u860_41:
 11646   001F7C  EFC5  F00F         	goto	i2l1181
 11647   001F80                     i2u860_40:
 11648   001F80                     
 11649                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 169:             && (PORTBbits.RB4 == GP
      +                          IO_HIGH) && (flag1 == 1)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 170:          
      +                             flag1 = 0;
 11650   001F80  0E00               	movlw	0
 11651   001F82  6E72               	movwf	_flag1^0,c
 11652   001F84                     
 11653                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 171:             RB4_ISR(0);
 11654   001F84  0E00               	movlw	0
 11655   001F86  EC48  F026         	call	_RB4_ISR
 11656   001F8A                     i2l1181:
 11657                           
 11658                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 174:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 11659   001F8A  A6F2               	btfss	242,3,c	;volatile
 11660   001F8C  EFCA  F00F         	goto	i2u861_41
 11661   001F90  EFCC  F00F         	goto	i2u861_40
 11662   001F94                     i2u861_41:
 11663   001F94  EFE7  F00F         	goto	i2l1183
 11664   001F98                     i2u861_40:
 11665   001F98  A0F2               	btfss	242,0,c	;volatile
 11666   001F9A  EFD1  F00F         	goto	i2u862_41
 11667   001F9E  EFD3  F00F         	goto	i2u862_40
 11668   001FA2                     i2u862_41:
 11669   001FA2  EFE7  F00F         	goto	i2l1183
 11670   001FA6                     i2u862_40:
 11671   001FA6  B881               	btfsc	129,4,c	;volatile
 11672   001FA8  EFD8  F00F         	goto	i2u863_41
 11673   001FAC  EFDA  F00F         	goto	i2u863_40
 11674   001FB0                     i2u863_41:
 11675   001FB0  EFE7  F00F         	goto	i2l1183
 11676   001FB4                     i2u863_40:
 11677   001FB4  5072               	movf	_flag1^0,w,c
 11678   001FB6  A4D8               	btfss	status,2,c
 11679   001FB8  EFE0  F00F         	goto	i2u864_41
 11680   001FBC  EFE2  F00F         	goto	i2u864_40
 11681   001FC0                     i2u864_41:
 11682   001FC0  EFE7  F00F         	goto	i2l1183
 11683   001FC4                     i2u864_40:
 11684   001FC4                     
 11685                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 175:             && (PORTBbits.RB4 == GP
      +                          IO_LOW) && (flag1 == 0)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 176:           
      +                            flag1 = 1;
 11686   001FC4  0E01               	movlw	1
 11687   001FC6  6E72               	movwf	_flag1^0,c
 11688   001FC8                     
 11689                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 177:             RB4_ISR(1);
 11690   001FC8  0E01               	movlw	1
 11691   001FCA  EC48  F026         	call	_RB4_ISR
 11692   001FCE                     i2l1183:
 11693                           
 11694                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 180:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 11695   001FCE  A6F2               	btfss	242,3,c	;volatile
 11696   001FD0  EFEC  F00F         	goto	i2u865_41
 11697   001FD4  EFEE  F00F         	goto	i2u865_40
 11698   001FD8                     i2u865_41:
 11699   001FD8  EF09  F010         	goto	i2l1185
 11700   001FDC                     i2u865_40:
 11701   001FDC  A0F2               	btfss	242,0,c	;volatile
 11702   001FDE  EFF3  F00F         	goto	i2u866_41
 11703   001FE2  EFF5  F00F         	goto	i2u866_40
 11704   001FE6                     i2u866_41:
 11705   001FE6  EF09  F010         	goto	i2l1185
 11706   001FEA                     i2u866_40:
 11707   001FEA  AA81               	btfss	129,5,c	;volatile
 11708   001FEC  EFFA  F00F         	goto	i2u867_41
 11709   001FF0  EFFC  F00F         	goto	i2u867_40
 11710   001FF4                     i2u867_41:
 11711   001FF4  EF09  F010         	goto	i2l1185
 11712   001FF8                     i2u867_40:
 11713   001FF8  0471               	decf	_flag2^0,w,c
 11714   001FFA  A4D8               	btfss	status,2,c
 11715   001FFC  EF02  F010         	goto	i2u868_41
 11716   002000  EF04  F010         	goto	i2u868_40
 11717   002004                     i2u868_41:
 11718   002004  EF09  F010         	goto	i2l1185
 11719   002008                     i2u868_40:
 11720   002008                     
 11721                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 181:             && (PORTBbits.RB5 == GP
      +                          IO_HIGH) && (flag2 == 1)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 182:          
      +                             flag2 = 0;
 11722   002008  0E00               	movlw	0
 11723   00200A  6E71               	movwf	_flag2^0,c
 11724   00200C                     
 11725                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 183:             RB5_ISR(0);
 11726   00200C  0E00               	movlw	0
 11727   00200E  EC3B  F026         	call	_RB5_ISR
 11728   002012                     i2l1185:
 11729                           
 11730                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 186:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 11731   002012  A6F2               	btfss	242,3,c	;volatile
 11732   002014  EF0E  F010         	goto	i2u869_41
 11733   002018  EF10  F010         	goto	i2u869_40
 11734   00201C                     i2u869_41:
 11735   00201C  EF2B  F010         	goto	i2l1187
 11736   002020                     i2u869_40:
 11737   002020  A0F2               	btfss	242,0,c	;volatile
 11738   002022  EF15  F010         	goto	i2u870_41
 11739   002026  EF17  F010         	goto	i2u870_40
 11740   00202A                     i2u870_41:
 11741   00202A  EF2B  F010         	goto	i2l1187
 11742   00202E                     i2u870_40:
 11743   00202E  BA81               	btfsc	129,5,c	;volatile
 11744   002030  EF1C  F010         	goto	i2u871_41
 11745   002034  EF1E  F010         	goto	i2u871_40
 11746   002038                     i2u871_41:
 11747   002038  EF2B  F010         	goto	i2l1187
 11748   00203C                     i2u871_40:
 11749   00203C  5071               	movf	_flag2^0,w,c
 11750   00203E  A4D8               	btfss	status,2,c
 11751   002040  EF24  F010         	goto	i2u872_41
 11752   002044  EF26  F010         	goto	i2u872_40
 11753   002048                     i2u872_41:
 11754   002048  EF2B  F010         	goto	i2l1187
 11755   00204C                     i2u872_40:
 11756   00204C                     
 11757                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 187:             && (PORTBbits.RB5 == GP
      +                          IO_LOW) && (flag2 == 0)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 188:           
      +                            flag2 =1;
 11758   00204C  0E01               	movlw	1
 11759   00204E  6E71               	movwf	_flag2^0,c
 11760   002050                     
 11761                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 189:             RB5_ISR(1);
 11762   002050  0E01               	movlw	1
 11763   002052  EC3B  F026         	call	_RB5_ISR
 11764   002056                     i2l1187:
 11765                           
 11766                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 192:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 11767   002056  A6F2               	btfss	242,3,c	;volatile
 11768   002058  EF30  F010         	goto	i2u873_41
 11769   00205C  EF32  F010         	goto	i2u873_40
 11770   002060                     i2u873_41:
 11771   002060  EF4D  F010         	goto	i2l1189
 11772   002064                     i2u873_40:
 11773   002064  A0F2               	btfss	242,0,c	;volatile
 11774   002066  EF37  F010         	goto	i2u874_41
 11775   00206A  EF39  F010         	goto	i2u874_40
 11776   00206E                     i2u874_41:
 11777   00206E  EF4D  F010         	goto	i2l1189
 11778   002072                     i2u874_40:
 11779   002072  AC81               	btfss	129,6,c	;volatile
 11780   002074  EF3E  F010         	goto	i2u875_41
 11781   002078  EF40  F010         	goto	i2u875_40
 11782   00207C                     i2u875_41:
 11783   00207C  EF4D  F010         	goto	i2l1189
 11784   002080                     i2u875_40:
 11785   002080  0470               	decf	_flag3^0,w,c
 11786   002082  A4D8               	btfss	status,2,c
 11787   002084  EF46  F010         	goto	i2u876_41
 11788   002088  EF48  F010         	goto	i2u876_40
 11789   00208C                     i2u876_41:
 11790   00208C  EF4D  F010         	goto	i2l1189
 11791   002090                     i2u876_40:
 11792   002090                     
 11793                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 193:             && (PORTBbits.RB6 == GP
      +                          IO_HIGH) && (1 == flag3)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 194:          
      +                             flag3 = 0;
 11794   002090  0E00               	movlw	0
 11795   002092  6E70               	movwf	_flag3^0,c
 11796   002094                     
 11797                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 195:             RB6_ISR(0);
 11798   002094  0E00               	movlw	0
 11799   002096  EC2E  F026         	call	_RB6_ISR
 11800   00209A                     i2l1189:
 11801                           
 11802                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 198:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 11803   00209A  A6F2               	btfss	242,3,c	;volatile
 11804   00209C  EF52  F010         	goto	i2u877_41
 11805   0020A0  EF54  F010         	goto	i2u877_40
 11806   0020A4                     i2u877_41:
 11807   0020A4  EF6F  F010         	goto	i2l1191
 11808   0020A8                     i2u877_40:
 11809   0020A8  A0F2               	btfss	242,0,c	;volatile
 11810   0020AA  EF59  F010         	goto	i2u878_41
 11811   0020AE  EF5B  F010         	goto	i2u878_40
 11812   0020B2                     i2u878_41:
 11813   0020B2  EF6F  F010         	goto	i2l1191
 11814   0020B6                     i2u878_40:
 11815   0020B6  BC81               	btfsc	129,6,c	;volatile
 11816   0020B8  EF60  F010         	goto	i2u879_41
 11817   0020BC  EF62  F010         	goto	i2u879_40
 11818   0020C0                     i2u879_41:
 11819   0020C0  EF6F  F010         	goto	i2l1191
 11820   0020C4                     i2u879_40:
 11821   0020C4  5070               	movf	_flag3^0,w,c
 11822   0020C6  A4D8               	btfss	status,2,c
 11823   0020C8  EF68  F010         	goto	i2u880_41
 11824   0020CC  EF6A  F010         	goto	i2u880_40
 11825   0020D0                     i2u880_41:
 11826   0020D0  EF6F  F010         	goto	i2l1191
 11827   0020D4                     i2u880_40:
 11828   0020D4                     
 11829                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 199:             && (PORTBbits.RB6 == GP
      +                          IO_LOW) && (0 == flag3)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 200:           
      +                            flag3 = 1;
 11830   0020D4  0E01               	movlw	1
 11831   0020D6  6E70               	movwf	_flag3^0,c
 11832   0020D8                     
 11833                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 201:             RB6_ISR(1);
 11834   0020D8  0E01               	movlw	1
 11835   0020DA  EC2E  F026         	call	_RB6_ISR
 11836   0020DE                     i2l1191:
 11837                           
 11838                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 204:          if((1 == INTCONbits.RBIE) 
      +                          && (1 == INTCONbits.RBIF)
 11839   0020DE  A6F2               	btfss	242,3,c	;volatile
 11840   0020E0  EF74  F010         	goto	i2u881_41
 11841   0020E4  EF76  F010         	goto	i2u881_40
 11842   0020E8                     i2u881_41:
 11843   0020E8  EF91  F010         	goto	i2l1193
 11844   0020EC                     i2u881_40:
 11845   0020EC  A0F2               	btfss	242,0,c	;volatile
 11846   0020EE  EF7B  F010         	goto	i2u882_41
 11847   0020F2  EF7D  F010         	goto	i2u882_40
 11848   0020F6                     i2u882_41:
 11849   0020F6  EF91  F010         	goto	i2l1193
 11850   0020FA                     i2u882_40:
 11851   0020FA  AE81               	btfss	129,7,c	;volatile
 11852   0020FC  EF82  F010         	goto	i2u883_41
 11853   002100  EF84  F010         	goto	i2u883_40
 11854   002104                     i2u883_41:
 11855   002104  EF91  F010         	goto	i2l1193
 11856   002108                     i2u883_40:
 11857   002108  046F               	decf	_flag4^0,w,c
 11858   00210A  A4D8               	btfss	status,2,c
 11859   00210C  EF8A  F010         	goto	i2u884_41
 11860   002110  EF8C  F010         	goto	i2u884_40
 11861   002114                     i2u884_41:
 11862   002114  EF91  F010         	goto	i2l1193
 11863   002118                     i2u884_40:
 11864   002118                     
 11865                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 205:             && (PORTBbits.RB7 == GP
      +                          IO_HIGH) && (1 == flag4)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 206:          
      +                             flag4 = 0;
 11866   002118  0E00               	movlw	0
 11867   00211A  6E6F               	movwf	_flag4^0,c
 11868   00211C                     
 11869                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 207:             RB7_ISR(0);
 11870   00211C  0E00               	movlw	0
 11871   00211E  EC21  F026         	call	_RB7_ISR
 11872   002122                     i2l1193:
 11873                           
 11874                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 210:         if((1 == INTCONbits.RBIE) &
      +                          & (1 == INTCONbits.RBIF)
 11875   002122  A6F2               	btfss	242,3,c	;volatile
 11876   002124  EF96  F010         	goto	i2u885_41
 11877   002128  EF98  F010         	goto	i2u885_40
 11878   00212C                     i2u885_41:
 11879   00212C  EFB3  F010         	goto	i2l1195
 11880   002130                     i2u885_40:
 11881   002130  A0F2               	btfss	242,0,c	;volatile
 11882   002132  EF9D  F010         	goto	i2u886_41
 11883   002136  EF9F  F010         	goto	i2u886_40
 11884   00213A                     i2u886_41:
 11885   00213A  EFB3  F010         	goto	i2l1195
 11886   00213E                     i2u886_40:
 11887   00213E  BE81               	btfsc	129,7,c	;volatile
 11888   002140  EFA4  F010         	goto	i2u887_41
 11889   002144  EFA6  F010         	goto	i2u887_40
 11890   002148                     i2u887_41:
 11891   002148  EFB3  F010         	goto	i2l1195
 11892   00214C                     i2u887_40:
 11893   00214C  506F               	movf	_flag4^0,w,c
 11894   00214E  A4D8               	btfss	status,2,c
 11895   002150  EFAC  F010         	goto	i2u888_41
 11896   002154  EFAE  F010         	goto	i2u888_40
 11897   002158                     i2u888_41:
 11898   002158  EFB3  F010         	goto	i2l1195
 11899   00215C                     i2u888_40:
 11900   00215C                     
 11901                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 211:             && (PORTBbits.RB7 == GP
      +                          IO_LOW) && (0 == flag4)){;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 212:           
      +                            flag4 = 1;
 11902   00215C  0E01               	movlw	1
 11903   00215E  6E6F               	movwf	_flag4^0,c
 11904   002160                     
 11905                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 213:             RB7_ISR(1);
 11906   002160  0E01               	movlw	1
 11907   002162  EC21  F026         	call	_RB7_ISR
 11908   002166                     i2l1195:
 11909                           
 11910                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 217:         if((1 == PIE1bits.ADIE) && 
      +                          (1 == PIR1bits.ADIF)){
 11911   002166  AC9D               	btfss	157,6,c	;volatile
 11912   002168  EFB8  F010         	goto	i2u889_41
 11913   00216C  EFBA  F010         	goto	i2u889_40
 11914   002170                     i2u889_41:
 11915   002170  EFC3  F010         	goto	i2l1197
 11916   002174                     i2u889_40:
 11917   002174  AC9E               	btfss	158,6,c	;volatile
 11918   002176  EFBF  F010         	goto	i2u890_41
 11919   00217A  EFC1  F010         	goto	i2u890_40
 11920   00217E                     i2u890_41:
 11921   00217E  EFC3  F010         	goto	i2l1197
 11922   002182                     i2u890_40:
 11923   002182                     
 11924                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 218:             ADC_handeler_funvtion()
      +                          ;
 11925   002182  EC8D  F026         	call	_ADC_handeler_funvtion	;wreg free
 11926   002186                     i2l1197:
 11927                           
 11928                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 222:         if((1 == INTCONbits.TMR0IE)
      +                           && (1 == INTCONbits.TMR0IF)){
 11929   002186  AAF2               	btfss	242,5,c	;volatile
 11930   002188  EFC8  F010         	goto	i2u891_41
 11931   00218C  EFCA  F010         	goto	i2u891_40
 11932   002190                     i2u891_41:
 11933   002190  EFD3  F010         	goto	i2l1199
 11934   002194                     i2u891_40:
 11935   002194  A4F2               	btfss	242,2,c	;volatile
 11936   002196  EFCF  F010         	goto	i2u892_41
 11937   00219A  EFD1  F010         	goto	i2u892_40
 11938   00219E                     i2u892_41:
 11939   00219E  EFD3  F010         	goto	i2l1199
 11940   0021A2                     i2u892_40:
 11941   0021A2                     
 11942                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 223:             TIMER0_ISR();
 11943   0021A2  EC73  F026         	call	_TIMER0_ISR	;wreg free
 11944   0021A6                     i2l1199:
 11945                           
 11946                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 227:         if((1 == PIE1bits.TMR1IE) &
      +                          & (1 == PIR1bits.TMR1IF)){
 11947   0021A6  A09D               	btfss	157,0,c	;volatile
 11948   0021A8  EFD8  F010         	goto	i2u893_41
 11949   0021AC  EFDA  F010         	goto	i2u893_40
 11950   0021B0                     i2u893_41:
 11951   0021B0  EFE3  F010         	goto	i2l1201
 11952   0021B4                     i2u893_40:
 11953   0021B4  A09E               	btfss	158,0,c	;volatile
 11954   0021B6  EFDF  F010         	goto	i2u894_41
 11955   0021BA  EFE1  F010         	goto	i2u894_40
 11956   0021BE                     i2u894_41:
 11957   0021BE  EFE3  F010         	goto	i2l1201
 11958   0021C2                     i2u894_40:
 11959   0021C2                     
 11960                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 228:             TIMER1_ISR();
 11961   0021C2  EC6C  F026         	call	_TIMER1_ISR	;wreg free
 11962   0021C6                     i2l1201:
 11963                           
 11964                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 232:         if((1 == PIE1bits.TMR2IE) &
      +                          & (1 == PIR1bits.TMR2IF)){
 11965   0021C6  A29D               	btfss	157,1,c	;volatile
 11966   0021C8  EFE8  F010         	goto	i2u895_41
 11967   0021CC  EFEA  F010         	goto	i2u895_40
 11968   0021D0                     i2u895_41:
 11969   0021D0  EFF3  F010         	goto	i2l1203
 11970   0021D4                     i2u895_40:
 11971   0021D4  A29E               	btfss	158,1,c	;volatile
 11972   0021D6  EFEF  F010         	goto	i2u896_41
 11973   0021DA  EFF1  F010         	goto	i2u896_40
 11974   0021DE                     i2u896_41:
 11975   0021DE  EFF3  F010         	goto	i2l1203
 11976   0021E2                     i2u896_40:
 11977   0021E2                     
 11978                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 233:             TIMER2_ISR();
 11979   0021E2  EC7A  F026         	call	_TIMER2_ISR	;wreg free
 11980   0021E6                     i2l1203:
 11981                           
 11982                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 237:         if((1 == PIE2bits.TMR3IE) &
      +                          & (1 == PIR2bits.TMR3IF)){
 11983   0021E6  A2A0               	btfss	160,1,c	;volatile
 11984   0021E8  EFF8  F010         	goto	i2u897_41
 11985   0021EC  EFFA  F010         	goto	i2u897_40
 11986   0021F0                     i2u897_41:
 11987   0021F0  EF03  F011         	goto	i2l1205
 11988   0021F4                     i2u897_40:
 11989   0021F4  A2A1               	btfss	161,1,c	;volatile
 11990   0021F6  EFFF  F010         	goto	i2u898_41
 11991   0021FA  EF01  F011         	goto	i2u898_40
 11992   0021FE                     i2u898_41:
 11993   0021FE  EF03  F011         	goto	i2l1205
 11994   002202                     i2u898_40:
 11995   002202                     
 11996                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 238:             TIMER3_ISR();
 11997   002202  EC65  F026         	call	_TIMER3_ISR	;wreg free
 11998   002206                     i2l1205:
 11999                           
 12000                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 242:         if((1 == PIE1bits.CCP1IE) &
      +                          & (1 == PIR1bits.CCP1IF)){
 12001   002206  A49D               	btfss	157,2,c	;volatile
 12002   002208  EF08  F011         	goto	i2u899_41
 12003   00220C  EF0A  F011         	goto	i2u899_40
 12004   002210                     i2u899_41:
 12005   002210  EF13  F011         	goto	i2l1207
 12006   002214                     i2u899_40:
 12007   002214  A49E               	btfss	158,2,c	;volatile
 12008   002216  EF0F  F011         	goto	i2u900_41
 12009   00221A  EF11  F011         	goto	i2u900_40
 12010   00221E                     i2u900_41:
 12011   00221E  EF13  F011         	goto	i2l1207
 12012   002222                     i2u900_40:
 12013   002222                     
 12014                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 243:             CCP1_ISR();
 12015   002222  EC8B  F026         	call	_CCP1_ISR	;wreg free
 12016   002226                     i2l1207:
 12017                           
 12018                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 247:         if((1 == PIE2bits.CCP2IE) &
      +                          & (1 == PIR2bits.CCP2IF)){
 12019   002226  A0A0               	btfss	160,0,c	;volatile
 12020   002228  EF18  F011         	goto	i2u901_41
 12021   00222C  EF1A  F011         	goto	i2u901_40
 12022   002230                     i2u901_41:
 12023   002230  EF23  F011         	goto	i2l1209
 12024   002234                     i2u901_40:
 12025   002234  A0A1               	btfss	161,0,c	;volatile
 12026   002236  EF1F  F011         	goto	i2u902_41
 12027   00223A  EF21  F011         	goto	i2u902_40
 12028   00223E                     i2u902_41:
 12029   00223E  EF23  F011         	goto	i2l1209
 12030   002242                     i2u902_40:
 12031   002242                     
 12032                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 248:             CCP2_ISR();
 12033   002242  EC89  F026         	call	_CCP2_ISR	;wreg free
 12034   002246                     i2l1209:
 12035                           
 12036                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 252:         if((1 == PIE1bits.TXIE) && 
      +                          (1 == PIR1bits.TXIF)){
 12037   002246  A89D               	btfss	157,4,c	;volatile
 12038   002248  EF28  F011         	goto	i2u903_41
 12039   00224C  EF2A  F011         	goto	i2u903_40
 12040   002250                     i2u903_41:
 12041   002250  EF33  F011         	goto	i2l1211
 12042   002254                     i2u903_40:
 12043   002254  A89E               	btfss	158,4,c	;volatile
 12044   002256  EF2F  F011         	goto	i2u904_41
 12045   00225A  EF31  F011         	goto	i2u904_40
 12046   00225E                     i2u904_41:
 12047   00225E  EF33  F011         	goto	i2l1211
 12048   002262                     i2u904_40:
 12049   002262                     
 12050                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 253:             USART_TX_ISR();
 12051   002262  EC85  F026         	call	_USART_TX_ISR	;wreg free
 12052   002266                     i2l1211:
 12053                           
 12054                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 257:         if((1 == PIE1bits.RCIE) && 
      +                          (1 == PIR1bits.RCIF)){
 12055   002266  AA9D               	btfss	157,5,c	;volatile
 12056   002268  EF38  F011         	goto	i2u905_41
 12057   00226C  EF3A  F011         	goto	i2u905_40
 12058   002270                     i2u905_41:
 12059   002270  EF43  F011         	goto	i2l1213
 12060   002274                     i2u905_40:
 12061   002274  AA9E               	btfss	158,5,c	;volatile
 12062   002276  EF3F  F011         	goto	i2u906_41
 12063   00227A  EF41  F011         	goto	i2u906_40
 12064   00227E                     i2u906_41:
 12065   00227E  EF43  F011         	goto	i2l1213
 12066   002282                     i2u906_40:
 12067   002282                     
 12068                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 258:             USART_RX_ISR();
 12069   002282  EC90  F026         	call	_USART_RX_ISR	;wreg free
 12070   002286                     i2l1213:
 12071                           
 12072                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 262:         if((1 == PIE1bits.SSPIE) &&
      +                           (1 == PIR1bits.SSPIF)){
 12073   002286  A69D               	btfss	157,3,c	;volatile
 12074   002288  EF48  F011         	goto	i2u907_41
 12075   00228C  EF4A  F011         	goto	i2u907_40
 12076   002290                     i2u907_41:
 12077   002290  EF53  F011         	goto	i2l1215
 12078   002294                     i2u907_40:
 12079   002294  A69E               	btfss	158,3,c	;volatile
 12080   002296  EF4F  F011         	goto	i2u908_41
 12081   00229A  EF51  F011         	goto	i2u908_40
 12082   00229E                     i2u908_41:
 12083   00229E  EF53  F011         	goto	i2l1215
 12084   0022A2                     i2u908_40:
 12085   0022A2                     
 12086                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 263:             MSSP_I2C_ISR();
 12087   0022A2  EC5D  F025         	call	_MSSP_I2C_ISR	;wreg free
 12088   0022A6                     i2l1215:
 12089                           
 12090                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 267:         if((1 == PIE2bits.BCLIE) &&
      +                           (1 == IPR2bits.BCLIP)){
 12091   0022A6  A6A0               	btfss	160,3,c	;volatile
 12092   0022A8  EF58  F011         	goto	i2u909_41
 12093   0022AC  EF5A  F011         	goto	i2u909_40
 12094   0022B0                     i2u909_41:
 12095   0022B0  EF63  F011         	goto	i2l1218
 12096   0022B4                     i2u909_40:
 12097   0022B4  A6A2               	btfss	162,3,c	;volatile
 12098   0022B6  EF5F  F011         	goto	i2u910_41
 12099   0022BA  EF61  F011         	goto	i2u910_40
 12100   0022BE                     i2u910_41:
 12101   0022BE  EF63  F011         	goto	i2l1218
 12102   0022C2                     i2u910_40:
 12103   0022C2                     
 12104                           ;MKAL_layer/Interrupt/mcal_interrupt_manager.c: 268:             MSSP_I2C_BC_ISR();
 12105   0022C2  EC87  F026         	call	_MSSP_I2C_BC_ISR	;wreg free
 12106   0022C6                     i2l1218:
 12107   0022C6  C003  FFFB         	movff	??_interrupt_manager+1,pclatu
 12108   0022CA  C002  FFFA         	movff	??_interrupt_manager,pclath
 12109   0022CE  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12110   0022D0  0011               	retfie		f
 12111   0022D2                     __end_of_interrupt_manager:
 12112                           	callstack 0
 12113                           
 12114 ;; *************** function _USART_TX_ISR *****************
 12115 ;; Defined at:
 12116 ;;		line 258 in file "MKAL_layer/USART/hal_usart.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;		None
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;		None
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  1    wreg      void 
 12123 ;; Registers used:
 12124 ;;		None
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;Total ram usage:        0 bytes
 12135 ;; Hardware stack levels used: 1
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_interrupt_manager
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text72
 12144   004D0A                     __ptext72:
 12145                           	callstack 0
 12146   004D0A                     _USART_TX_ISR:
 12147                           	callstack 23
 12148   004D0A                     
 12149                           ;MKAL_layer/USART/hal_usart.c: 259:     (PIE1bits.TXIE = 0);
 12150   004D0A  989D               	bcf	157,4,c	;volatile
 12151   004D0C  0012               	return		;funcret
 12152   004D0E                     __end_of_USART_TX_ISR:
 12153                           	callstack 0
 12154                           
 12155 ;; *************** function _USART_RX_ISR *****************
 12156 ;; Defined at:
 12157 ;;		line 266 in file "MKAL_layer/USART/hal_usart.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2, status,0
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; This function calls:
 12178 ;;		Nothing
 12179 ;; This function is called by:
 12180 ;;		_interrupt_manager
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           	psect	text73
 12185   004D20                     __ptext73:
 12186                           	callstack 0
 12187   004D20                     _USART_RX_ISR:
 12188                           	callstack 23
 12189   004D20  0012               	return		;funcret
 12190   004D22                     __end_of_USART_RX_ISR:
 12191                           	callstack 0
 12192                           
 12193 ;; *************** function _TIMER3_ISR *****************
 12194 ;; Defined at:
 12195 ;;		line 129 in file "MKAL_layer/timer3/hal_timer3.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;		None
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;		None
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1    wreg      void 
 12202 ;; Registers used:
 12203 ;;		wreg, status,2
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12213 ;;Total ram usage:        0 bytes
 12214 ;; Hardware stack levels used: 1
 12215 ;; This function calls:
 12216 ;;		Nothing
 12217 ;; This function is called by:
 12218 ;;		_interrupt_manager
 12219 ;; This function uses a non-reentrant model
 12220 ;;
 12221                           
 12222                           	psect	text74
 12223   004CCA                     __ptext74:
 12224                           	callstack 0
 12225   004CCA                     _TIMER3_ISR:
 12226                           	callstack 23
 12227   004CCA                     
 12228                           ;MKAL_layer/timer3/hal_timer3.c: 131:     (PIR2bits.TMR3IF = 0);
 12229   004CCA  92A1               	bcf	161,1,c	;volatile
 12230   004CCC                     
 12231                           ;MKAL_layer/timer3/hal_timer3.c: 133:     TMR3H = (Timer3_preload >> 8);
 12232   004CCC  0100               	movlb	0	; () banked
 12233   004CCE  518D               	movf	(_Timer3_preload+1)& (0+255),w,b
 12234   004CD0  6EB3               	movwf	179,c	;volatile
 12235   004CD2                     
 12236                           ; BSR set to: 0
 12237                           ;MKAL_layer/timer3/hal_timer3.c: 134:     TMR3L = (uint8)(Timer3_preload);
 12238   004CD2  C08C  FFB2         	movff	_Timer3_preload,4018	;volatile
 12239   004CD6                     
 12240                           ; BSR set to: 0
 12241   004CD6  0012               	return		;funcret
 12242   004CD8                     __end_of_TIMER3_ISR:
 12243                           	callstack 0
 12244                           
 12245 ;; *************** function _TIMER2_ISR *****************
 12246 ;; Defined at:
 12247 ;;		line 95 in file "MKAL_layer/timer2/hal_timer2.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;		None
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;		None
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  1    wreg      void 
 12254 ;; Registers used:
 12255 ;;		None
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12265 ;;Total ram usage:        0 bytes
 12266 ;; Hardware stack levels used: 1
 12267 ;; This function calls:
 12268 ;;		Nothing
 12269 ;; This function is called by:
 12270 ;;		_interrupt_manager
 12271 ;; This function uses a non-reentrant model
 12272 ;;
 12273                           
 12274                           	psect	text75
 12275   004CF4                     __ptext75:
 12276                           	callstack 0
 12277   004CF4                     _TIMER2_ISR:
 12278                           	callstack 23
 12279   004CF4                     
 12280                           ;MKAL_layer/timer2/hal_timer2.c: 97:     (PIR1bits.TMR2IF = 0);
 12281   004CF4  929E               	bcf	158,1,c	;volatile
 12282                           
 12283                           ;MKAL_layer/timer2/hal_timer2.c: 99:     TMR2 = Timer2_preload;
 12284   004CF6  C0C8  FFCC         	movff	_Timer2_preload,4044	;volatile
 12285   004CFA  0012               	return		;funcret
 12286   004CFC                     __end_of_TIMER2_ISR:
 12287                           	callstack 0
 12288                           
 12289 ;; *************** function _TIMER1_ISR *****************
 12290 ;; Defined at:
 12291 ;;		line 153 in file "MKAL_layer/timer1/hal_timer1.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;		None
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      void 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12309 ;;Total ram usage:        0 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		_interrupt_manager
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text76
 12319   004CD8                     __ptext76:
 12320                           	callstack 0
 12321   004CD8                     _TIMER1_ISR:
 12322                           	callstack 23
 12323   004CD8                     
 12324                           ;MKAL_layer/timer1/hal_timer1.c: 155:     (PIR1bits.TMR1IF = 0);
 12325   004CD8  909E               	bcf	158,0,c	;volatile
 12326   004CDA                     
 12327                           ;MKAL_layer/timer1/hal_timer1.c: 157:     TMR1H = (Timer1_preload >> 8);
 12328   004CDA  0100               	movlb	0	; () banked
 12329   004CDC  5193               	movf	(_Timer1_preload+1)& (0+255),w,b
 12330   004CDE  6ECF               	movwf	207,c	;volatile
 12331   004CE0                     
 12332                           ; BSR set to: 0
 12333                           ;MKAL_layer/timer1/hal_timer1.c: 158:     TMR1L = (uint8)(Timer1_preload);
 12334   004CE0  C092  FFCE         	movff	_Timer1_preload,4046	;volatile
 12335   004CE4                     
 12336                           ; BSR set to: 0
 12337   004CE4  0012               	return		;funcret
 12338   004CE6                     __end_of_TIMER1_ISR:
 12339                           	callstack 0
 12340                           
 12341 ;; *************** function _TIMER0_ISR *****************
 12342 ;; Defined at:
 12343 ;;		line 157 in file "MKAL_layer/timer/hal_timer0.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  1    wreg      void 
 12350 ;; Registers used:
 12351 ;;		wreg, status,2
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12361 ;;Total ram usage:        0 bytes
 12362 ;; Hardware stack levels used: 1
 12363 ;; This function calls:
 12364 ;;		Nothing
 12365 ;; This function is called by:
 12366 ;;		_interrupt_manager
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370                           	psect	text77
 12371   004CE6                     __ptext77:
 12372                           	callstack 0
 12373   004CE6                     _TIMER0_ISR:
 12374                           	callstack 23
 12375   004CE6                     
 12376                           ;MKAL_layer/timer/hal_timer0.c: 159:     (INTCONbits.TMR0IF = 0);
 12377   004CE6  94F2               	bcf	242,2,c	;volatile
 12378   004CE8                     
 12379                           ;MKAL_layer/timer/hal_timer0.c: 161:     TMR0H = (Timer0_preload >> 8);
 12380   004CE8  0100               	movlb	0	; () banked
 12381   004CEA  5197               	movf	(_Timer0_preload+1)& (0+255),w,b
 12382   004CEC  6ED7               	movwf	215,c	;volatile
 12383   004CEE                     
 12384                           ; BSR set to: 0
 12385                           ;MKAL_layer/timer/hal_timer0.c: 162:     TMR0L = (uint8)(Timer0_preload);
 12386   004CEE  C096  FFD6         	movff	_Timer0_preload,4054	;volatile
 12387   004CF2                     
 12388                           ; BSR set to: 0
 12389   004CF2  0012               	return		;funcret
 12390   004CF4                     __end_of_TIMER0_ISR:
 12391                           	callstack 0
 12392                           
 12393 ;; *************** function _RB7_ISR *****************
 12394 ;; Defined at:
 12395 ;;		line 585 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  value           1    wreg     unsigned char 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  value           1    0[COMRAM] unsigned char 
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  1    wreg      void 
 12402 ;; Registers used:
 12403 ;;		wreg, status,2, status,0
 12404 ;; Tracked objects:
 12405 ;;		On entry : 0/0
 12406 ;;		On exit  : 0/0
 12407 ;;		Unchanged: 0/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;Total ram usage:        1 bytes
 12414 ;; Hardware stack levels used: 1
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_interrupt_manager
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text78
 12423   004C42                     __ptext78:
 12424                           	callstack 0
 12425   004C42                     _RB7_ISR:
 12426                           	callstack 23
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;incstack = 0
 12430                           ;RB7_ISR@value stored from wreg
 12431   004C42  6E01               	movwf	RB7_ISR@value^0,c
 12432   004C44                     
 12433                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 587:     (INTCONbits.RBIF = 0);
 12434   004C44  90F2               	bcf	242,0,c	;volatile
 12435   004C46                     
 12436                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 591:     if(1 == value){
 12437   004C46  0401               	decf	RB7_ISR@value^0,w,c
 12438   004C48  A4D8               	btfss	status,2,c
 12439   004C4A  EF29  F026         	goto	i2u790_41
 12440   004C4E  EF2B  F026         	goto	i2u790_40
 12441   004C52                     i2u790_41:
 12442   004C52  EF2D  F026         	goto	i2l8028
 12443   004C56                     i2u790_40:
 12444   004C56  EF2D  F026         	goto	i2l1109
 12445   004C5A                     i2l8028:
 12446   004C5A                     i2l1109:
 12447   004C5A  0012               	return		;funcret
 12448   004C5C                     __end_of_RB7_ISR:
 12449                           	callstack 0
 12450                           
 12451 ;; *************** function _RB6_ISR *****************
 12452 ;; Defined at:
 12453 ;;		line 565 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;  value           1    wreg     unsigned char 
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;  value           1    0[COMRAM] unsigned char 
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, status,0
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12471 ;;Total ram usage:        1 bytes
 12472 ;; Hardware stack levels used: 1
 12473 ;; This function calls:
 12474 ;;		Nothing
 12475 ;; This function is called by:
 12476 ;;		_interrupt_manager
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text79
 12481   004C5C                     __ptext79:
 12482                           	callstack 0
 12483   004C5C                     _RB6_ISR:
 12484                           	callstack 23
 12485                           
 12486                           ;incstack = 0
 12487                           ;RB6_ISR@value stored from wreg
 12488   004C5C  6E01               	movwf	RB6_ISR@value^0,c
 12489   004C5E                     
 12490                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 567:     (INTCONbits.RBIF = 0);
 12491   004C5E  90F2               	bcf	242,0,c	;volatile
 12492   004C60                     
 12493                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 571:     if(1 == value){
 12494   004C60  0401               	decf	RB6_ISR@value^0,w,c
 12495   004C62  A4D8               	btfss	status,2,c
 12496   004C64  EF36  F026         	goto	i2u789_41
 12497   004C68  EF38  F026         	goto	i2u789_40
 12498   004C6C                     i2u789_41:
 12499   004C6C  EF3A  F026         	goto	i2l8014
 12500   004C70                     i2u789_40:
 12501   004C70  EF3A  F026         	goto	i2l1098
 12502   004C74                     i2l8014:
 12503   004C74                     i2l1098:
 12504   004C74  0012               	return		;funcret
 12505   004C76                     __end_of_RB6_ISR:
 12506                           	callstack 0
 12507                           
 12508 ;; *************** function _RB5_ISR *****************
 12509 ;; Defined at:
 12510 ;;		line 545 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 12511 ;; Parameters:    Size  Location     Type
 12512 ;;  value           1    wreg     unsigned char 
 12513 ;; Auto vars:     Size  Location     Type
 12514 ;;  value           1    0[COMRAM] unsigned char 
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      void 
 12517 ;; Registers used:
 12518 ;;		wreg, status,2, status,0
 12519 ;; Tracked objects:
 12520 ;;		On entry : 0/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12528 ;;Total ram usage:        1 bytes
 12529 ;; Hardware stack levels used: 1
 12530 ;; This function calls:
 12531 ;;		Nothing
 12532 ;; This function is called by:
 12533 ;;		_interrupt_manager
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text80
 12538   004C76                     __ptext80:
 12539                           	callstack 0
 12540   004C76                     _RB5_ISR:
 12541                           	callstack 23
 12542                           
 12543                           ;incstack = 0
 12544                           ;RB5_ISR@value stored from wreg
 12545   004C76  6E01               	movwf	RB5_ISR@value^0,c
 12546   004C78                     
 12547                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 547:     (INTCONbits.RBIF = 0);
 12548   004C78  90F2               	bcf	242,0,c	;volatile
 12549   004C7A                     
 12550                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 551:     if(1 == value){
 12551   004C7A  0401               	decf	RB5_ISR@value^0,w,c
 12552   004C7C  A4D8               	btfss	status,2,c
 12553   004C7E  EF43  F026         	goto	i2u788_41
 12554   004C82  EF45  F026         	goto	i2u788_40
 12555   004C86                     i2u788_41:
 12556   004C86  EF47  F026         	goto	i2l8000
 12557   004C8A                     i2u788_40:
 12558   004C8A  EF47  F026         	goto	i2l1087
 12559   004C8E                     i2l8000:
 12560   004C8E                     i2l1087:
 12561   004C8E  0012               	return		;funcret
 12562   004C90                     __end_of_RB5_ISR:
 12563                           	callstack 0
 12564                           
 12565 ;; *************** function _RB4_ISR *****************
 12566 ;; Defined at:
 12567 ;;		line 525 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 12568 ;; Parameters:    Size  Location     Type
 12569 ;;  value           1    wreg     unsigned char 
 12570 ;; Auto vars:     Size  Location     Type
 12571 ;;  value           1    0[COMRAM] unsigned char 
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  1    wreg      void 
 12574 ;; Registers used:
 12575 ;;		wreg, status,2, status,0
 12576 ;; Tracked objects:
 12577 ;;		On entry : 0/0
 12578 ;;		On exit  : 0/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;Total ram usage:        1 bytes
 12586 ;; Hardware stack levels used: 1
 12587 ;; This function calls:
 12588 ;;		Nothing
 12589 ;; This function is called by:
 12590 ;;		_interrupt_manager
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text81
 12595   004C90                     __ptext81:
 12596                           	callstack 0
 12597   004C90                     _RB4_ISR:
 12598                           	callstack 23
 12599                           
 12600                           ;incstack = 0
 12601                           ;RB4_ISR@value stored from wreg
 12602   004C90  6E01               	movwf	RB4_ISR@value^0,c
 12603   004C92                     
 12604                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 527:     (INTCONbits.RBIF = 0);
 12605   004C92  90F2               	bcf	242,0,c	;volatile
 12606   004C94                     
 12607                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 531:     if(1 == value){
 12608   004C94  0401               	decf	RB4_ISR@value^0,w,c
 12609   004C96  A4D8               	btfss	status,2,c
 12610   004C98  EF50  F026         	goto	i2u787_41
 12611   004C9C  EF52  F026         	goto	i2u787_40
 12612   004CA0                     i2u787_41:
 12613   004CA0  EF54  F026         	goto	i2l7986
 12614   004CA4                     i2u787_40:
 12615   004CA4  EF54  F026         	goto	i2l1076
 12616   004CA8                     i2l7986:
 12617   004CA8                     i2l1076:
 12618   004CA8  0012               	return		;funcret
 12619   004CAA                     __end_of_RB4_ISR:
 12620                           	callstack 0
 12621                           
 12622 ;; *************** function _MSSP_I2C_ISR *****************
 12623 ;; Defined at:
 12624 ;;		line 289 in file "MKAL_layer/I2C/hal_i2c.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;		None
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;		None
 12629 ;; Return value:  Size  Location     Type
 12630 ;;                  1    wreg      void 
 12631 ;; Registers used:
 12632 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12633 ;; Tracked objects:
 12634 ;;		On entry : 0/0
 12635 ;;		On exit  : 0/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12642 ;;Total ram usage:        0 bytes
 12643 ;; Hardware stack levels used: 1
 12644 ;; Hardware stack levels required when called: 1
 12645 ;; This function calls:
 12646 ;;		NULL
 12647 ;;		_mssp_I2C_DefaultInterruptHandler
 12648 ;; This function is called by:
 12649 ;;		_interrupt_manager
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text82
 12654   004ABA                     __ptext82:
 12655                           	callstack 0
 12656   004ABA                     _MSSP_I2C_ISR:
 12657                           	callstack 22
 12658   004ABA                     
 12659                           ;MKAL_layer/I2C/hal_i2c.c: 291:     (PIR1bits.SSPIF = 0);
 12660   004ABA  969E               	bcf	158,3,c	;volatile
 12661   004ABC                     
 12662                           ;MKAL_layer/I2C/hal_i2c.c: 292:     if(I2C_DefaultInterruptHandle){
 12663   004ABC  0100               	movlb	0	; () banked
 12664   004ABE  51B2               	movf	_I2C_DefaultInterruptHandle& (0+255),w,b
 12665   004AC0  11B3               	iorwf	(_I2C_DefaultInterruptHandle+1)& (0+255),w,b
 12666   004AC2  B4D8               	btfsc	status,2,c
 12667   004AC4  EF66  F025         	goto	i2u779_41
 12668   004AC8  EF68  F025         	goto	i2u779_40
 12669   004ACC                     i2u779_41:
 12670   004ACC  EF74  F025         	goto	i2l877
 12671   004AD0                     i2u779_40:
 12672   004AD0                     
 12673                           ; BSR set to: 0
 12674                           ;MKAL_layer/I2C/hal_i2c.c: 293:         I2C_DefaultInterruptHandle();
 12675   004AD0  D802               	call	i2u780_48
 12676   004AD2  EF74  F025         	goto	i2u780_49
 12677   004AD6                     i2u780_48:
 12678   004AD6  0005               	push	
 12679   004AD8  6EFA               	movwf	pclath,c
 12680   004ADA  51B2               	movf	_I2C_DefaultInterruptHandle& (0+255),w,b
 12681   004ADC  6EFD               	movwf	tosl,c
 12682   004ADE  51B3               	movf	(_I2C_DefaultInterruptHandle+1)& (0+255),w,b
 12683   004AE0  6EFE               	movwf	tosh,c
 12684   004AE2  6AFF               	clrf	tosu,c
 12685   004AE4  50FA               	movf	pclath,w,c
 12686   004AE6  0012               	return		;indir
 12687   004AE8                     i2u780_49:
 12688   004AE8                     i2l877:
 12689   004AE8  0012               	return		;funcret
 12690   004AEA                     __end_of_MSSP_I2C_ISR:
 12691                           	callstack 0
 12692                           
 12693 ;; *************** function _mssp_I2C_DefaultInterruptHandler *****************
 12694 ;; Defined at:
 12695 ;;		line 250 in file "main2.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;		None
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;  dummy_buffer    1    0        unsigned char 
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  1    wreg      void 
 12702 ;; Registers used:
 12703 ;;		wreg, status,2, status,0
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12713 ;;Total ram usage:        0 bytes
 12714 ;; Hardware stack levels used: 1
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_MSSP_I2C_ISR
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text83
 12723   00266C                     __ptext83:
 12724                           	callstack 0
 12725   00266C                     _mssp_I2C_DefaultInterruptHandler:
 12726                           	callstack 22
 12727   00266C                     
 12728                           ;main2.c: 253:     (SSPCON1bits.CKP = 0);
 12729   00266C  98C6               	bcf	198,4,c	;volatile
 12730                           
 12731                           ;main2.c: 254:     if((SSPSTATbits.D_nA == 0) && (SSPSTATbits.R_NOT_W == 0)){
 12732   00266E  BAC7               	btfsc	199,5,c	;volatile
 12733   002670  EF3C  F013         	goto	i2u708_41
 12734   002674  EF3E  F013         	goto	i2u708_40
 12735   002678                     i2u708_41:
 12736   002678  EF4F  F013         	goto	i2l1800
 12737   00267C                     i2u708_40:
 12738   00267C  B4C7               	btfsc	199,2,c	;volatile
 12739   00267E  EF43  F013         	goto	i2u709_41
 12740   002682  EF45  F013         	goto	i2u709_40
 12741   002686                     i2u709_41:
 12742   002686  EF4F  F013         	goto	i2l1800
 12743   00268A                     i2u709_40:
 12744   00268A  50C9               	movf	201,w,c	;volatile
 12745   00268C                     i2l1801:
 12746   00268C  A0C7               	btfss	199,0,c	;volatile
 12747   00268E  EF4B  F013         	goto	i2u710_41
 12748   002692  EF4D  F013         	goto	i2u710_40
 12749   002696                     i2u710_41:
 12750   002696  EF46  F013         	goto	i2l1801
 12751   00269A                     i2u710_40:
 12752   00269A                     
 12753                           ;main2.c: 257:         i2c_data =SSPBUF;
 12754   00269A  CFC9 F07A          	movff	4041,_i2c_data	;volatile
 12755   00269E                     i2l1800:
 12756                           
 12757                           ;main2.c: 259:     (SSPCON1bits.CKP = 1);
 12758   00269E  88C6               	bsf	198,4,c	;volatile
 12759   0026A0                     
 12760                           ;main2.c: 260:     if((i2c_data == 'A') || (i2c_data == 'C')){
 12761   0026A0  0E41               	movlw	65
 12762   0026A2  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12763   0026A4  B4D8               	btfsc	status,2,c
 12764   0026A6  EF57  F013         	goto	i2u711_41
 12765   0026AA  EF59  F013         	goto	i2u711_40
 12766   0026AE                     i2u711_41:
 12767   0026AE  EF62  F013         	goto	i2l1806
 12768   0026B2                     i2u711_40:
 12769   0026B2  0E43               	movlw	67
 12770   0026B4  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12771   0026B6  A4D8               	btfss	status,2,c
 12772   0026B8  EF60  F013         	goto	i2u712_41
 12773   0026BC  EF62  F013         	goto	i2u712_40
 12774   0026C0                     i2u712_41:
 12775   0026C0  EF66  F013         	goto	i2l7532
 12776   0026C4                     i2u712_40:
 12777   0026C4                     i2l1806:
 12778                           
 12779                           ;main2.c: 261:          i2c_data_1 = i2c_data;
 12780   0026C4  C07A  F079         	movff	_i2c_data,_i2c_data_1	;volatile
 12781                           
 12782                           ;main2.c: 262:     }else if((i2c_data == 'K') || (i2c_data == 'L') || (i2c_data == 'H') 
      +                          || (i2c_data == 'G')){
 12783   0026C8  EF40  F014         	goto	i2l1817
 12784   0026CC                     i2l7532:
 12785   0026CC  0E4B               	movlw	75
 12786   0026CE  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12787   0026D0  B4D8               	btfsc	status,2,c
 12788   0026D2  EF6D  F013         	goto	i2u713_41
 12789   0026D6  EF6F  F013         	goto	i2u713_40
 12790   0026DA                     i2u713_41:
 12791   0026DA  EF8A  F013         	goto	i2l1810
 12792   0026DE                     i2u713_40:
 12793   0026DE  0E4C               	movlw	76
 12794   0026E0  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12795   0026E2  B4D8               	btfsc	status,2,c
 12796   0026E4  EF76  F013         	goto	i2u714_41
 12797   0026E8  EF78  F013         	goto	i2u714_40
 12798   0026EC                     i2u714_41:
 12799   0026EC  EF8A  F013         	goto	i2l1810
 12800   0026F0                     i2u714_40:
 12801   0026F0  0E48               	movlw	72
 12802   0026F2  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12803   0026F4  B4D8               	btfsc	status,2,c
 12804   0026F6  EF7F  F013         	goto	i2u715_41
 12805   0026FA  EF81  F013         	goto	i2u715_40
 12806   0026FE                     i2u715_41:
 12807   0026FE  EF8A  F013         	goto	i2l1810
 12808   002702                     i2u715_40:
 12809   002702  0E47               	movlw	71
 12810   002704  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12811   002706  A4D8               	btfss	status,2,c
 12812   002708  EF88  F013         	goto	i2u716_41
 12813   00270C  EF8A  F013         	goto	i2u716_40
 12814   002710                     i2u716_41:
 12815   002710  EF8E  F013         	goto	i2l7540
 12816   002714                     i2u716_40:
 12817   002714                     i2l1810:
 12818                           
 12819                           ;main2.c: 263:          i2c_data_2 = i2c_data;
 12820   002714  C07A  F078         	movff	_i2c_data,_i2c_data_2	;volatile
 12821                           
 12822                           ;main2.c: 264:     }else if((i2c_data == 'Q') || (i2c_data == 'W') || (i2c_data == 'E') 
      +                          || (i2c_data == 'R') ||
 12823   002718  EF40  F014         	goto	i2l1817
 12824   00271C                     i2l7540:
 12825   00271C  0E51               	movlw	81
 12826   00271E  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12827   002720  B4D8               	btfsc	status,2,c
 12828   002722  EF95  F013         	goto	i2u717_41
 12829   002726  EF97  F013         	goto	i2u717_40
 12830   00272A                     i2u717_41:
 12831   00272A  EF30  F014         	goto	i2l1814
 12832   00272E                     i2u717_40:
 12833   00272E  0E57               	movlw	87
 12834   002730  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12835   002732  B4D8               	btfsc	status,2,c
 12836   002734  EF9E  F013         	goto	i2u718_41
 12837   002738  EFA0  F013         	goto	i2u718_40
 12838   00273C                     i2u718_41:
 12839   00273C  EF30  F014         	goto	i2l1814
 12840   002740                     i2u718_40:
 12841   002740  0E45               	movlw	69
 12842   002742  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12843   002744  B4D8               	btfsc	status,2,c
 12844   002746  EFA7  F013         	goto	i2u719_41
 12845   00274A  EFA9  F013         	goto	i2u719_40
 12846   00274E                     i2u719_41:
 12847   00274E  EF30  F014         	goto	i2l1814
 12848   002752                     i2u719_40:
 12849   002752  0E52               	movlw	82
 12850   002754  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12851   002756  B4D8               	btfsc	status,2,c
 12852   002758  EFB0  F013         	goto	i2u720_41
 12853   00275C  EFB2  F013         	goto	i2u720_40
 12854   002760                     i2u720_41:
 12855   002760  EF30  F014         	goto	i2l1814
 12856   002764                     i2u720_40:
 12857   002764  0E54               	movlw	84
 12858   002766  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12859   002768  B4D8               	btfsc	status,2,c
 12860   00276A  EFB9  F013         	goto	i2u721_41
 12861   00276E  EFBB  F013         	goto	i2u721_40
 12862   002772                     i2u721_41:
 12863   002772  EF30  F014         	goto	i2l1814
 12864   002776                     i2u721_40:
 12865   002776  0E59               	movlw	89
 12866   002778  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12867   00277A  B4D8               	btfsc	status,2,c
 12868   00277C  EFC2  F013         	goto	i2u722_41
 12869   002780  EFC4  F013         	goto	i2u722_40
 12870   002784                     i2u722_41:
 12871   002784  EF30  F014         	goto	i2l1814
 12872   002788                     i2u722_40:
 12873   002788  0E55               	movlw	85
 12874   00278A  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12875   00278C  B4D8               	btfsc	status,2,c
 12876   00278E  EFCB  F013         	goto	i2u723_41
 12877   002792  EFCD  F013         	goto	i2u723_40
 12878   002796                     i2u723_41:
 12879   002796  EF30  F014         	goto	i2l1814
 12880   00279A                     i2u723_40:
 12881   00279A  0E49               	movlw	73
 12882   00279C  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12883   00279E  B4D8               	btfsc	status,2,c
 12884   0027A0  EFD4  F013         	goto	i2u724_41
 12885   0027A4  EFD6  F013         	goto	i2u724_40
 12886   0027A8                     i2u724_41:
 12887   0027A8  EF30  F014         	goto	i2l1814
 12888   0027AC                     i2u724_40:
 12889   0027AC  0E4F               	movlw	79
 12890   0027AE  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12891   0027B0  B4D8               	btfsc	status,2,c
 12892   0027B2  EFDD  F013         	goto	i2u725_41
 12893   0027B6  EFDF  F013         	goto	i2u725_40
 12894   0027BA                     i2u725_41:
 12895   0027BA  EF30  F014         	goto	i2l1814
 12896   0027BE                     i2u725_40:
 12897   0027BE  0E50               	movlw	80
 12898   0027C0  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12899   0027C2  B4D8               	btfsc	status,2,c
 12900   0027C4  EFE6  F013         	goto	i2u726_41
 12901   0027C8  EFE8  F013         	goto	i2u726_40
 12902   0027CC                     i2u726_41:
 12903   0027CC  EF30  F014         	goto	i2l1814
 12904   0027D0                     i2u726_40:
 12905   0027D0  0E53               	movlw	83
 12906   0027D2  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12907   0027D4  B4D8               	btfsc	status,2,c
 12908   0027D6  EFEF  F013         	goto	i2u727_41
 12909   0027DA  EFF1  F013         	goto	i2u727_40
 12910   0027DE                     i2u727_41:
 12911   0027DE  EF30  F014         	goto	i2l1814
 12912   0027E2                     i2u727_40:
 12913   0027E2  0E44               	movlw	68
 12914   0027E4  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12915   0027E6  B4D8               	btfsc	status,2,c
 12916   0027E8  EFF8  F013         	goto	i2u728_41
 12917   0027EC  EFFA  F013         	goto	i2u728_40
 12918   0027F0                     i2u728_41:
 12919   0027F0  EF30  F014         	goto	i2l1814
 12920   0027F4                     i2u728_40:
 12921   0027F4  0E46               	movlw	70
 12922   0027F6  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12923   0027F8  B4D8               	btfsc	status,2,c
 12924   0027FA  EF01  F014         	goto	i2u729_41
 12925   0027FE  EF03  F014         	goto	i2u729_40
 12926   002802                     i2u729_41:
 12927   002802  EF30  F014         	goto	i2l1814
 12928   002806                     i2u729_40:
 12929   002806  0E4A               	movlw	74
 12930   002808  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12931   00280A  B4D8               	btfsc	status,2,c
 12932   00280C  EF0A  F014         	goto	i2u730_41
 12933   002810  EF0C  F014         	goto	i2u730_40
 12934   002814                     i2u730_41:
 12935   002814  EF30  F014         	goto	i2l1814
 12936   002818                     i2u730_40:
 12937   002818  0E5A               	movlw	90
 12938   00281A  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12939   00281C  B4D8               	btfsc	status,2,c
 12940   00281E  EF13  F014         	goto	i2u731_41
 12941   002822  EF15  F014         	goto	i2u731_40
 12942   002826                     i2u731_41:
 12943   002826  EF30  F014         	goto	i2l1814
 12944   00282A                     i2u731_40:
 12945   00282A  0E58               	movlw	88
 12946   00282C  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12947   00282E  B4D8               	btfsc	status,2,c
 12948   002830  EF1C  F014         	goto	i2u732_41
 12949   002834  EF1E  F014         	goto	i2u732_40
 12950   002838                     i2u732_41:
 12951   002838  EF30  F014         	goto	i2l1814
 12952   00283C                     i2u732_40:
 12953   00283C  0E56               	movlw	86
 12954   00283E  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12955   002840  B4D8               	btfsc	status,2,c
 12956   002842  EF25  F014         	goto	i2u733_41
 12957   002846  EF27  F014         	goto	i2u733_40
 12958   00284A                     i2u733_41:
 12959   00284A  EF30  F014         	goto	i2l1814
 12960   00284E                     i2u733_40:
 12961   00284E  0E42               	movlw	66
 12962   002850  187A               	xorwf	_i2c_data^0,w,c	;volatile
 12963   002852  A4D8               	btfss	status,2,c
 12964   002854  EF2E  F014         	goto	i2u734_41
 12965   002858  EF30  F014         	goto	i2u734_40
 12966   00285C                     i2u734_41:
 12967   00285C  EF34  F014         	goto	i2l7576
 12968   002860                     i2u734_40:
 12969   002860                     i2l1814:
 12970                           
 12971                           ;main2.c: 268:              (i2c_data == 'V') || (i2c_data == 'B')){;main2.c: 269:      
      +                              i2c_data_3 = i2c_data;
 12972   002860  C07A  F077         	movff	_i2c_data,_i2c_data_3	;volatile
 12973                           
 12974                           ;main2.c: 270:     }else if(i2c_data <= 50){
 12975   002864  EF40  F014         	goto	i2l1817
 12976   002868                     i2l7576:
 12977   002868  0E33               	movlw	51
 12978   00286A  607A               	cpfslt	_i2c_data^0,c	;volatile
 12979   00286C  EF3A  F014         	goto	i2u735_41
 12980   002870  EF3C  F014         	goto	i2u735_40
 12981   002874                     i2u735_41:
 12982   002874  EF40  F014         	goto	i2l1811
 12983   002878                     i2u735_40:
 12984   002878                     
 12985                           ;main2.c: 271:         i2c_data_4 = i2c_data;
 12986   002878  C07A  F076         	movff	_i2c_data,_i2c_data_4	;volatile
 12987   00287C  EF40  F014         	goto	i2l1817
 12988   002880                     i2l1811:
 12989   002880                     i2l1817:
 12990   002880  0012               	return		;funcret
 12991   002882                     __end_of_mssp_I2C_DefaultInterruptHandler:
 12992                           	callstack 0
 12993                           
 12994 ;; *************** function _MSSP_I2C_BC_ISR *****************
 12995 ;; Defined at:
 12996 ;;		line 298 in file "MKAL_layer/I2C/hal_i2c.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;		None
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;		None
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1    wreg      void 
 13003 ;; Registers used:
 13004 ;;		None
 13005 ;; Tracked objects:
 13006 ;;		On entry : 0/0
 13007 ;;		On exit  : 0/0
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13014 ;;Total ram usage:        0 bytes
 13015 ;; Hardware stack levels used: 1
 13016 ;; This function calls:
 13017 ;;		Nothing
 13018 ;; This function is called by:
 13019 ;;		_interrupt_manager
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           	psect	text84
 13024   004D0E                     __ptext84:
 13025                           	callstack 0
 13026   004D0E                     _MSSP_I2C_BC_ISR:
 13027                           	callstack 23
 13028   004D0E                     
 13029                           ;MKAL_layer/I2C/hal_i2c.c: 300:     (PIR2bits.BCLIF = 0);
 13030   004D0E  96A1               	bcf	161,3,c	;volatile
 13031   004D10  0012               	return		;funcret
 13032   004D12                     __end_of_MSSP_I2C_BC_ISR:
 13033                           	callstack 0
 13034                           
 13035 ;; *************** function _INT2_ISR *****************
 13036 ;; Defined at:
 13037 ;;		line 511 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;		None
 13040 ;; Auto vars:     Size  Location     Type
 13041 ;;		None
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  1    wreg      void 
 13044 ;; Registers used:
 13045 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;Total ram usage:        0 bytes
 13056 ;; Hardware stack levels used: 1
 13057 ;; Hardware stack levels required when called: 1
 13058 ;; This function calls:
 13059 ;;		NULL
 13060 ;;		_int1_interrupt
 13061 ;;		_into_interrupt
 13062 ;; This function is called by:
 13063 ;;		_interrupt_manager
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text85
 13068   004AEA                     __ptext85:
 13069                           	callstack 0
 13070   004AEA                     _INT2_ISR:
 13071                           	callstack 22
 13072   004AEA                     
 13073                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 513:     (INTCON3bits.INT2IF = 0);
 13074   004AEA  92F0               	bcf	240,1,c	;volatile
 13075   004AEC                     
 13076                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 517:     if(Int2_interrupthandler){
 13077   004AEC  0100               	movlb	0	; () banked
 13078   004AEE  51AA               	movf	_Int2_interrupthandler& (0+255),w,b
 13079   004AF0  11AB               	iorwf	(_Int2_interrupthandler+1)& (0+255),w,b
 13080   004AF2  B4D8               	btfsc	status,2,c
 13081   004AF4  EF7E  F025         	goto	i2u785_41
 13082   004AF8  EF80  F025         	goto	i2u785_40
 13083   004AFC                     i2u785_41:
 13084   004AFC  EF8C  F025         	goto	i2l1065
 13085   004B00                     i2u785_40:
 13086   004B00                     
 13087                           ; BSR set to: 0
 13088                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 518:         Int2_interrupthandler();
 13089   004B00  D802               	call	i2u786_48
 13090   004B02  EF8C  F025         	goto	i2u786_49
 13091   004B06                     i2u786_48:
 13092   004B06  0005               	push	
 13093   004B08  6EFA               	movwf	pclath,c
 13094   004B0A  51AA               	movf	_Int2_interrupthandler& (0+255),w,b
 13095   004B0C  6EFD               	movwf	tosl,c
 13096   004B0E  51AB               	movf	(_Int2_interrupthandler+1)& (0+255),w,b
 13097   004B10  6EFE               	movwf	tosh,c
 13098   004B12  6AFF               	clrf	tosu,c
 13099   004B14  50FA               	movf	pclath,w,c
 13100   004B16  0012               	return		;indir
 13101   004B18                     i2u786_49:
 13102   004B18                     i2l1065:
 13103   004B18  0012               	return		;funcret
 13104   004B1A                     __end_of_INT2_ISR:
 13105                           	callstack 0
 13106                           
 13107 ;; *************** function _INT1_ISR *****************
 13108 ;; Defined at:
 13109 ;;		line 498 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;		None
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;		None
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  1    wreg      void 
 13116 ;; Registers used:
 13117 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13127 ;;Total ram usage:        0 bytes
 13128 ;; Hardware stack levels used: 1
 13129 ;; Hardware stack levels required when called: 1
 13130 ;; This function calls:
 13131 ;;		NULL
 13132 ;;		_int1_interrupt
 13133 ;;		_into_interrupt
 13134 ;; This function is called by:
 13135 ;;		_interrupt_manager
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text86
 13140   004B1A                     __ptext86:
 13141                           	callstack 0
 13142   004B1A                     _INT1_ISR:
 13143                           	callstack 22
 13144   004B1A                     
 13145                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 500:     (INTCON3bits.INT1IF = 0);
 13146   004B1A  90F0               	bcf	240,0,c	;volatile
 13147   004B1C                     
 13148                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 504:     if(Int1_interrupthandler){
 13149   004B1C  0100               	movlb	0	; () banked
 13150   004B1E  51AC               	movf	_Int1_interrupthandler& (0+255),w,b
 13151   004B20  11AD               	iorwf	(_Int1_interrupthandler+1)& (0+255),w,b
 13152   004B22  B4D8               	btfsc	status,2,c
 13153   004B24  EF96  F025         	goto	i2u783_41
 13154   004B28  EF98  F025         	goto	i2u783_40
 13155   004B2C                     i2u783_41:
 13156   004B2C  EFA4  F025         	goto	i2l1060
 13157   004B30                     i2u783_40:
 13158   004B30                     
 13159                           ; BSR set to: 0
 13160                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 505:         Int1_interrupthandler();
 13161   004B30  D802               	call	i2u784_48
 13162   004B32  EFA4  F025         	goto	i2u784_49
 13163   004B36                     i2u784_48:
 13164   004B36  0005               	push	
 13165   004B38  6EFA               	movwf	pclath,c
 13166   004B3A  51AC               	movf	_Int1_interrupthandler& (0+255),w,b
 13167   004B3C  6EFD               	movwf	tosl,c
 13168   004B3E  51AD               	movf	(_Int1_interrupthandler+1)& (0+255),w,b
 13169   004B40  6EFE               	movwf	tosh,c
 13170   004B42  6AFF               	clrf	tosu,c
 13171   004B44  50FA               	movf	pclath,w,c
 13172   004B46  0012               	return		;indir
 13173   004B48                     i2u784_49:
 13174   004B48                     i2l1060:
 13175   004B48  0012               	return		;funcret
 13176   004B4A                     __end_of_INT1_ISR:
 13177                           	callstack 0
 13178                           
 13179 ;; *************** function _INT0_ISR *****************
 13180 ;; Defined at:
 13181 ;;		line 485 in file "MKAL_layer/Interrupt/mcal_external_interrupt.c"
 13182 ;; Parameters:    Size  Location     Type
 13183 ;;		None
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;		None
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  1    wreg      void 
 13188 ;; Registers used:
 13189 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13199 ;;Total ram usage:        0 bytes
 13200 ;; Hardware stack levels used: 1
 13201 ;; Hardware stack levels required when called: 1
 13202 ;; This function calls:
 13203 ;;		NULL
 13204 ;;		_int1_interrupt
 13205 ;;		_into_interrupt
 13206 ;; This function is called by:
 13207 ;;		_interrupt_manager
 13208 ;; This function uses a non-reentrant model
 13209 ;;
 13210                           
 13211                           	psect	text87
 13212   004B4A                     __ptext87:
 13213                           	callstack 0
 13214   004B4A                     _INT0_ISR:
 13215                           	callstack 22
 13216   004B4A                     
 13217                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 487:     (INTCONbits.INT0IF = 0);
 13218   004B4A  92F2               	bcf	242,1,c	;volatile
 13219   004B4C                     
 13220                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 491:     if(Int0_interrupthandler){
 13221   004B4C  0100               	movlb	0	; () banked
 13222   004B4E  51AE               	movf	_Int0_interrupthandler& (0+255),w,b
 13223   004B50  11AF               	iorwf	(_Int0_interrupthandler+1)& (0+255),w,b
 13224   004B52  B4D8               	btfsc	status,2,c
 13225   004B54  EFAE  F025         	goto	i2u781_41
 13226   004B58  EFB0  F025         	goto	i2u781_40
 13227   004B5C                     i2u781_41:
 13228   004B5C  EFBC  F025         	goto	i2l1055
 13229   004B60                     i2u781_40:
 13230   004B60                     
 13231                           ; BSR set to: 0
 13232                           ;MKAL_layer/Interrupt/mcal_external_interrupt.c: 492:         Int0_interrupthandler();
 13233   004B60  D802               	call	i2u782_48
 13234   004B62  EFBC  F025         	goto	i2u782_49
 13235   004B66                     i2u782_48:
 13236   004B66  0005               	push	
 13237   004B68  6EFA               	movwf	pclath,c
 13238   004B6A  51AE               	movf	_Int0_interrupthandler& (0+255),w,b
 13239   004B6C  6EFD               	movwf	tosl,c
 13240   004B6E  51AF               	movf	(_Int0_interrupthandler+1)& (0+255),w,b
 13241   004B70  6EFE               	movwf	tosh,c
 13242   004B72  6AFF               	clrf	tosu,c
 13243   004B74  50FA               	movf	pclath,w,c
 13244   004B76  0012               	return		;indir
 13245   004B78                     i2u782_49:
 13246   004B78                     i2l1055:
 13247   004B78  0012               	return		;funcret
 13248   004B7A                     __end_of_INT0_ISR:
 13249                           	callstack 0
 13250                           
 13251 ;; *************** function _int1_interrupt *****************
 13252 ;; Defined at:
 13253 ;;		line 234 in file "main2.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;		None
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  1    wreg      void 
 13260 ;; Registers used:
 13261 ;;		None
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13271 ;;Total ram usage:        0 bytes
 13272 ;; Hardware stack levels used: 1
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_INT0_ISR
 13277 ;;		_INT1_ISR
 13278 ;;		_INT2_ISR
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text88
 13283   004D22                     __ptext88:
 13284                           	callstack 0
 13285   004D22                     _int1_interrupt:
 13286                           	callstack 22
 13287   004D22  0012               	return		;funcret
 13288   004D24                     __end_of_int1_interrupt:
 13289                           	callstack 0
 13290                           
 13291 ;; *************** function _into_interrupt *****************
 13292 ;; Defined at:
 13293 ;;		line 230 in file "main2.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;		None
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;		None
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  1    wreg      void 
 13300 ;; Registers used:
 13301 ;;		None
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13311 ;;Total ram usage:        0 bytes
 13312 ;; Hardware stack levels used: 1
 13313 ;; This function calls:
 13314 ;;		Nothing
 13315 ;; This function is called by:
 13316 ;;		_INT0_ISR
 13317 ;;		_INT1_ISR
 13318 ;;		_INT2_ISR
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           	psect	text89
 13323   004D24                     __ptext89:
 13324                           	callstack 0
 13325   004D24                     _into_interrupt:
 13326                           	callstack 22
 13327   004D24  0012               	return		;funcret
 13328   004D26                     __end_of_into_interrupt:
 13329                           	callstack 0
 13330                           
 13331 ;; *************** function _CCP2_ISR *****************
 13332 ;; Defined at:
 13333 ;;		line 218 in file "MKAL_layer/CCP2/hal_ccp2.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;		None
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      void 
 13340 ;; Registers used:
 13341 ;;		None
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13351 ;;Total ram usage:        0 bytes
 13352 ;; Hardware stack levels used: 1
 13353 ;; This function calls:
 13354 ;;		Nothing
 13355 ;; This function is called by:
 13356 ;;		_interrupt_manager
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360                           	psect	text90
 13361   004D12                     __ptext90:
 13362                           	callstack 0
 13363   004D12                     _CCP2_ISR:
 13364                           	callstack 23
 13365   004D12                     
 13366                           ;MKAL_layer/CCP2/hal_ccp2.c: 219:     (PIR2bits.CCP2IF = 0);
 13367   004D12  90A1               	bcf	161,0,c	;volatile
 13368   004D14  0012               	return		;funcret
 13369   004D16                     __end_of_CCP2_ISR:
 13370                           	callstack 0
 13371                           
 13372 ;; *************** function _CCP1_ISR *****************
 13373 ;; Defined at:
 13374 ;;		line 218 in file "MKAL_layer/CCP1/hal_ccp1.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;		None
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;		None
 13379 ;; Return value:  Size  Location     Type
 13380 ;;                  1    wreg      void 
 13381 ;; Registers used:
 13382 ;;		None
 13383 ;; Tracked objects:
 13384 ;;		On entry : 0/0
 13385 ;;		On exit  : 0/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13392 ;;Total ram usage:        0 bytes
 13393 ;; Hardware stack levels used: 1
 13394 ;; This function calls:
 13395 ;;		Nothing
 13396 ;; This function is called by:
 13397 ;;		_interrupt_manager
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           	psect	text91
 13402   004D16                     __ptext91:
 13403                           	callstack 0
 13404   004D16                     _CCP1_ISR:
 13405                           	callstack 23
 13406   004D16                     
 13407                           ;MKAL_layer/CCP1/hal_ccp1.c: 219:     (PIR1bits.CCP1IF = 0);
 13408   004D16  949E               	bcf	158,2,c	;volatile
 13409   004D18  0012               	return		;funcret
 13410   004D1A                     __end_of_CCP1_ISR:
 13411                           	callstack 0
 13412                           
 13413 ;; *************** function _ADC_handeler_funvtion *****************
 13414 ;; Defined at:
 13415 ;;		line 222 in file "MKAL_layer/ADC/hal_adc.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;		None
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;		None
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  1    wreg      void 
 13422 ;; Registers used:
 13423 ;;		None
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/0
 13426 ;;		On exit  : 0/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;Total ram usage:        0 bytes
 13434 ;; Hardware stack levels used: 1
 13435 ;; This function calls:
 13436 ;;		Nothing
 13437 ;; This function is called by:
 13438 ;;		_interrupt_manager
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           	psect	text92
 13443   004D1A                     __ptext92:
 13444                           	callstack 0
 13445   004D1A                     _ADC_handeler_funvtion:
 13446                           	callstack 23
 13447   004D1A                     
 13448                           ;MKAL_layer/ADC/hal_adc.c: 224:     (PIR1bits.ADIF = 0);
 13449   004D1A  9C9E               	bcf	158,6,c	;volatile
 13450   004D1C  0012               	return		;funcret
 13451   004D1E                     __end_of_ADC_handeler_funvtion:
 13452                           	callstack 0
 13453                           
 13454                           	psect	text93
 13455   000000                     __ptext93:
 13456                           	callstack 0
 13457   000000                     
 13458                           	psect	rparam
 13459   000000                     
 13460                           	psect	temp
 13461   00007B                     btemp:
 13462                           	callstack 0
 13463   00007B                     	ds	1
 13464   000000                     int$flags	set	btemp
 13465   000000                     wtemp8	set	btemp+1
 13466   000000                     ttemp5	set	btemp+1
 13467   000000                     ttemp6	set	btemp+4
 13468   000000                     ttemp7	set	btemp+8
 13469                           
 13470                           	psect	config
 13471                           
 13472                           ; Padding undefined space
 13473   300000                     	org	3145728
 13474   300000  FF                 	db	255
 13475                           
 13476                           ;Config register CONFIG1H @ 0x300001
 13477                           ;	Oscillator Selection bits
 13478                           ;	OSC = HS, HS oscillator
 13479                           ;	Fail-Safe Clock Monitor Enable bit
 13480                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13481                           ;	Internal/External Oscillator Switchover bit
 13482                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13483   300001                     	org	3145729
 13484   300001  02                 	db	2
 13485                           
 13486                           ;Config register CONFIG2L @ 0x300002
 13487                           ;	Power-up Timer Enable bit
 13488                           ;	PWRT = OFF, PWRT disabled
 13489                           ;	Brown-out Reset Enable bits
 13490                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 13491                           ;	Brown Out Reset Voltage bits
 13492                           ;	BORV = 1, 
 13493   300002                     	org	3145730
 13494   300002  09                 	db	9
 13495                           
 13496                           ;Config register CONFIG2H @ 0x300003
 13497                           ;	Watchdog Timer Enable bit
 13498                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 13499                           ;	Watchdog Timer Postscale Select bits
 13500                           ;	WDTPS = 32768, 1:32768
 13501   300003                     	org	3145731
 13502   300003  1E                 	db	30
 13503                           
 13504                           ; Padding undefined space
 13505   300004                     	org	3145732
 13506   300004  FF                 	db	255
 13507                           
 13508                           ;Config register CONFIG3H @ 0x300005
 13509                           ;	CCP2 MUX bit
 13510                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13511                           ;	PORTB A/D Enable bit
 13512                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 13513                           ;	Low-Power Timer1 Oscillator Enable bit
 13514                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13515                           ;	MCLR Pin Enable bit
 13516                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13517   300005                     	org	3145733
 13518   300005  81                 	db	129
 13519                           
 13520                           ;Config register CONFIG4L @ 0x300006
 13521                           ;	Stack Full/Underflow Reset Enable bit
 13522                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13523                           ;	Single-Supply ICSP Enable bit
 13524                           ;	LVP = OFF, Single-Supply ICSP disabled
 13525                           ;	Extended Instruction Set Enable bit
 13526                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13527                           ;	Background Debugger Enable bit
 13528                           ;	DEBUG = 0x1, unprogrammed default
 13529   300006                     	org	3145734
 13530   300006  81                 	db	129
 13531                           
 13532                           ; Padding undefined space
 13533   300007                     	org	3145735
 13534   300007  FF                 	db	255
 13535                           
 13536                           ;Config register CONFIG5L @ 0x300008
 13537                           ;	Code Protection bit
 13538                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13539                           ;	Code Protection bit
 13540                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13541                           ;	Code Protection bit
 13542                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13543                           ;	Code Protection bit
 13544                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13545   300008                     	org	3145736
 13546   300008  0F                 	db	15
 13547                           
 13548                           ;Config register CONFIG5H @ 0x300009
 13549                           ;	Boot Block Code Protection bit
 13550                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13551                           ;	Data EEPROM Code Protection bit
 13552                           ;	CPD = OFF, Data EEPROM not code-protected
 13553   300009                     	org	3145737
 13554   300009  C0                 	db	192
 13555                           
 13556                           ;Config register CONFIG6L @ 0x30000A
 13557                           ;	Write Protection bit
 13558                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13559                           ;	Write Protection bit
 13560                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13561                           ;	Write Protection bit
 13562                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13563                           ;	Write Protection bit
 13564                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13565   30000A                     	org	3145738
 13566   30000A  0F                 	db	15
 13567                           
 13568                           ;Config register CONFIG6H @ 0x30000B
 13569                           ;	Configuration Register Write Protection bit
 13570                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13571                           ;	Boot Block Write Protection bit
 13572                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13573                           ;	Data EEPROM Write Protection bit
 13574                           ;	WRTD = OFF, Data EEPROM not write-protected
 13575   30000B                     	org	3145739
 13576   30000B  E0                 	db	224
 13577                           
 13578                           ;Config register CONFIG7L @ 0x30000C
 13579                           ;	Table Read Protection bit
 13580                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13581                           ;	Table Read Protection bit
 13582                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13583                           ;	Table Read Protection bit
 13584                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13585                           ;	Table Read Protection bit
 13586                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13587   30000C                     	org	3145740
 13588   30000C  0F                 	db	15
 13589                           
 13590                           ;Config register CONFIG7H @ 0x30000D
 13591                           ;	Boot Block Table Read Protection bit
 13592                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13593   30000D                     	org	3145741
 13594   30000D  40                 	db	64
 13595                           tosu	equ	0xFFF
 13596                           tosh	equ	0xFFE
 13597                           tosl	equ	0xFFD
 13598                           stkptr	equ	0xFFC
 13599                           pclatu	equ	0xFFB
 13600                           pclath	equ	0xFFA
 13601                           pcl	equ	0xFF9
 13602                           tblptru	equ	0xFF8
 13603                           tblptrh	equ	0xFF7
 13604                           tblptrl	equ	0xFF6
 13605                           tablat	equ	0xFF5
 13606                           prodh	equ	0xFF4
 13607                           prodl	equ	0xFF3
 13608                           indf0	equ	0xFEF
 13609                           postinc0	equ	0xFEE
 13610                           postdec0	equ	0xFED
 13611                           preinc0	equ	0xFEC
 13612                           plusw0	equ	0xFEB
 13613                           fsr0h	equ	0xFEA
 13614                           fsr0l	equ	0xFE9
 13615                           wreg	equ	0xFE8
 13616                           indf1	equ	0xFE7
 13617                           postinc1	equ	0xFE6
 13618                           postdec1	equ	0xFE5
 13619                           preinc1	equ	0xFE4
 13620                           plusw1	equ	0xFE3
 13621                           fsr1h	equ	0xFE2
 13622                           fsr1l	equ	0xFE1
 13623                           bsr	equ	0xFE0
 13624                           indf2	equ	0xFDF
 13625                           postinc2	equ	0xFDE
 13626                           postdec2	equ	0xFDD
 13627                           preinc2	equ	0xFDC
 13628                           plusw2	equ	0xFDB
 13629                           fsr2h	equ	0xFDA
 13630                           fsr2l	equ	0xFD9
 13631                           status	equ	0xFD8

Data Sizes:
    Strings     102
    Constant    16
    Data        108
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    110     122
    BANK0           128      0     127
    BANK1           256      4     114
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_get_conversion_blocking@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_get_conversion_blocking@conversion_status	PTR unsigned short  size(1) Largest target is 2
		 -> value_1(BANK0[2]), 

    ADC_INTERRUPTHANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_inti@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_inti@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_ISconversion_done@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_ISconversion_done@conversion_status	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_get_conversion_blocking@l_conversion_status(COMRAM[1]), 

    ADC_ISconversion_result@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_ISconversion_result@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_ISconversion_result@conversion_result	PTR unsigned short  size(1) Largest target is 2
		 -> value_1(BANK0[2]), 

    ADC_select_channal@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    ADC_start_conversion@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    baudrate_calculate@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    baudrate_calculate@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    ccp1_$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp1_init@ccp1_	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), 

    ccp1_init@ccp1_$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ccp2_init@ccp2_$CCP2_handler	PTR FTN()void  size(2) Largest target is 0

    CCP2_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_ref@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    configure_voltage_ref@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> string(BANK1[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    GPIO_pIN_DIRECTION_INTIALIZE@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), INT_0(BANK1[6]), INT_1(BANK1[6]), lcd_4bit(BANK0[6]), 
		 -> lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), motor_1(BANK0[2]), motor_1$motor_pin_config(BANK0[2]), 
		 -> motor_2(BANK0[2]), motor_2$motor_pin_config(BANK0[2]), relay(COMRAM[1]), relay_intialize@pin_config(COMRAM[1]), 

    GPIO_pIN_INTIALIZE@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), INT_0(BANK1[6]), INT_1(BANK1[6]), lcd_4bit(BANK0[6]), 
		 -> lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), motor_1(BANK0[2]), motor_1$motor_pin_config(BANK0[2]), 
		 -> motor_2(BANK0[2]), motor_2$motor_pin_config(BANK0[2]), relay(COMRAM[1]), relay_intialize@pin_config(COMRAM[1]), 

    GPIO_pIN_TOGGLE_LOGIC@config_pin	PTR const struct . size(1) Largest target is 1
		 -> led_toggle@pin_config(COMRAM[1]), relay_toggle@pin_config(COMRAM[1]), 

    GPIO_pIN_WRITE_LOGIC@config_pin	PTR const struct . size(2) Largest target is 10
		 -> ccp1_(BANK1[10]), INT_0(BANK1[6]), INT_1(BANK1[6]), lcd_4bit(BANK0[6]), 
		 -> lcd_4bit$lcd_data(BANK0[4]), led_intialize@pin_config(COMRAM[1]), led_turn_off@pin_config(COMRAM[1]), led_turn_on@pin_config(COMRAM[1]), 
		 -> motor_1(BANK0[2]), motor_1$motor_pin_config(BANK0[2]), motor_2(BANK0[2]), motor_2$motor_pin_config(BANK0[2]), 
		 -> relay(COMRAM[1]), relay_intialize@pin_config(COMRAM[1]), relay_turn_off@pin_config(COMRAM[1]), relay_turn_on@pin_config(COMRAM[1]), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 2
		 -> mssp_i2c$I2C_Report_Receive_Overflow(BANK1[2]), NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Int0_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), NULL(), 

    INT0_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Int1_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), NULL(), 

    INT1_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Int2_interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), NULL(), 

    INT2_setinterrupthandler@interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    INT_0$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    INT_1$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_clear@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_clear@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_disable@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_disable@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_edge_inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_edge_inti@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_enable@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_enable@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Interrupt_Intx_Inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_pin_inti@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_pin_inti@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    interrupt_intx_sethandler@INTERRUPT_INTX	PTR const struct . size(2) Largest target is 6
		 -> INT_0(BANK1[6]), INT_1(BANK1[6]), 

    interrupt_intx_sethandler@INTERRUPT_INTX$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    Interrupt_Pbx_Inti@INTERRUPT_PBX$EXT_INTERRUPTHANDLE_high	PTR FTN()void  size(2) Largest target is 0

    Interrupt_Pbx_Inti@INTERRUPT_PBX$EXT_INTERRUPTHANDLE_low	PTR FTN()void  size(2) Largest target is 0

    lat_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlhlllll[1]), LATB(BITBIGSFRlhllllh[1]), LATC(BITBIGSFRlhllllh[1]), LATD(BITBIGSFRlhllllh[1]), 
		 -> LATE(BITBIGSFRlhllllh[1]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[14]), STR_5(CODE[16]), STR_6(CODE[17]), STR_7(CODE[18]), 
		 -> STR_8(CODE[15]), STR_9(CODE[19]), string(BANK1[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    led_intialize@led	PTR const struct . size(1) Largest target is 1
		 -> led3(COMRAM[1]), led5(COMRAM[1]), 

    led_toggle@led	PTR const struct . size(1) Largest target is 1
		 -> led3(COMRAM[1]), led5(COMRAM[1]), 

    led_turn_off@led	PTR const struct . size(1) Largest target is 1
		 -> led3(COMRAM[1]), led5(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(1) Largest target is 1
		 -> led3(COMRAM[1]), led5(COMRAM[1]), 

    memset@dest	PTR void  size(2) Largest target is 6
		 -> string(BANK1[6]), 

    memset@p	PTR unsigned char  size(2) Largest target is 6
		 -> string(BANK1[6]), 

    morot_stop@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    morot_turn_left@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    morot_turn_right@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    motor_intialize@motor_pin	PTR const struct . size(1) Largest target is 2
		 -> motor_1(BANK0[2]), motor_2(BANK0[2]), 

    mssp_i2c$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), 

    mssp_i2c$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    mssp_i2c$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Init@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), 

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj	PTR const struct . size(2) Largest target is 15
		 -> mssp_i2c(BANK1[15]), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    port_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(ABS[1]), PORTB(ABS[1]), PORTC(SFR[1]), PORTD(BITBIGSFRlhlllll[1]), 
		 -> PORTE(BITBIGSFRlhlllll[1]), 

    RB4_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interrupthandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_interrupthandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1227$CCP1_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1382$CCP2_handler	PTR FTN()void  size(2) Largest target is 0

    S2319$EXT_INTERRUPTHANDLE	PTR FTN()void  size(2) Largest target is 1
		 -> int1_interrupt(), into_interrupt(), 

    S2357$EXT_INTERRUPTHANDLE_high	PTR FTN()void  size(2) Largest target is 0

    S2357$EXT_INTERRUPTHANDLE_low	PTR FTN()void  size(2) Largest target is 0

    S2952$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    S3102$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    S3307$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3432$Timer3_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3657$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S3657$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S3657$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S3657$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    S4964$buffer	PTR unsigned char  size(2) Largest target is 0

    S4964$source	PTR const unsigned char  size(2) Largest target is 0

    S629$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mssp_I2C_DefaultInterruptHandler(), 

    S629$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S629$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S826$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@ADC_conf	PTR const struct . size(2) Largest target is 6
		 -> ADC_(BANK1[6]), 

    select_result_format@ADC_conf$ADC_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> string(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), string(BANK1[6]), 

    Timer0_init@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER0_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer0_mode@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    timer0_prescaler_cfg@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    timer0_register_size@Timer0$Timer0_handler	PTR FTN()void  size(2) Largest target is 0

    Timer1_init@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    TIMER1_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer1_mode_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    timer1_osc_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    timer1_reg_bit_cfg@Timer1$Timer1_handler	PTR FTN()void  size(2) Largest target is 0

    Timer2$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2_init@Timer2	PTR const struct . size(1) Largest target is 4
		 -> Timer2(BANK0[4]), 

    Timer2_init@Timer2$Timer2_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER2_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_1$Timer3_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_init@Timer3	PTR const struct . size(2) Largest target is 5
		 -> Timer3_1(BANK1[5]), 

    Timer3_init@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER3_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer3_mode_cfg@Timer3	PTR const struct . size(2) Largest target is 5
		 -> Timer3_1(BANK1[5]), 

    timer3_mode_cfg@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer3_reg_bit_cfg@Timer3	PTR const struct . size(2) Largest target is 5
		 -> Timer3_1(BANK1[5]), 

    timer3_reg_bit_cfg@Timer3$Timer3_handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_regisrers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlhlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    usart_async_rx_int@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_rx_int@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_FRAMING_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_OVERRUN_ERROR_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_RX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    usart_async_tx_int@usart$USART_TX_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 0

    USART_FRAMERROR_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_OVERRUN_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_RX_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_TX_Interrupthandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ccp1_pwm_set_duty
    _morot_turn_right->_GPIO_pIN_WRITE_LOGIC
    _morot_turn_left->_GPIO_pIN_WRITE_LOGIC
    _morot_stop->_GPIO_pIN_WRITE_LOGIC
    _led_turn_on->_GPIO_pIN_WRITE_LOGIC
    _led_turn_off->_GPIO_pIN_WRITE_LOGIC
    _led_toggle->_GPIO_pIN_TOGGLE_LOGIC
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _intitialized_functions->_MSSP_I2C_Init
    _motor_intialize->_GPIO_pIN_INTIALIZE
    _led_intialize->_GPIO_pIN_INTIALIZE
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_GPIO_pIN_WRITE_LOGIC
    _lcd_4bit_send_enable_signal->_GPIO_pIN_WRITE_LOGIC
    _ccp1_init->___lldiv
    ___lldiv->___lmul
    _Timer3_init->_timer3_mode_cfg
    _Timer3_init->_timer3_reg_bit_cfg
    _MSSP_I2C_Init->_I2C_Master_Mode_Clock_Configurations
    _I2C_Master_Mode_Clock_Configurations->___fltol
    _Interrupt_Intx_Inti->_interrupt_intx_pin_inti
    _interrupt_intx_sethandler->_INT0_setinterrupthandler
    _interrupt_intx_sethandler->_INT1_setinterrupthandler
    _interrupt_intx_sethandler->_INT2_setinterrupthandler
    _interrupt_intx_pin_inti->_GPIO_pIN_INTIALIZE
    _GPIO_pIN_INTIALIZE->_GPIO_pIN_WRITE_LOGIC
    _ADC_inti->_adc_channel_port_confige
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ccp1_pwm_set_duty->___fltol
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___fladd
    ___fldiv->___xxtofl
    _ADC_get_conversion_blocking->_ADC_select_channal
    _ADC_select_channal->_adc_channel_port_confige

Critical Paths under _interrupt_manager in COMRAM

    _interrupt_manager->_RB4_ISR
    _interrupt_manager->_RB5_ISR
    _interrupt_manager->_RB6_ISR
    _interrupt_manager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  238125
                                            109 COMRAM     1     1      0
                                              0 BANK1      4     4      0
        _ADC_get_conversion_blocking
               _GPIO_pIN_WRITE_LOGIC
                            ___lldiv
                             ___lmul
                           ___xxtofl
                  _ccp1_pwm_set_duty
                  _ccp1_pwm_set_stop
                     _ccp1_pwm_start
            _convert_uint8_to_string
             _intitialized_functions
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
                         _led_toggle
                       _led_turn_off
                        _led_turn_on
                         _morot_stop
                    _morot_turn_left
                   _morot_turn_right
 ---------------------------------------------------------------------------------
 (1) _morot_turn_right                                     3     2      1    6669
                                             12 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _morot_turn_left                                      3     2      1    6669
                                             12 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _morot_stop                                           3     2      1    7029
                                             12 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          4     3      1    6758
                                             12 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         4     3      1    6758
                                             12 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           4     3      1     716
                                              9 COMRAM     3     2      1
              _GPIO_pIN_TOGGLE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _GPIO_pIN_TOGGLE_LOGIC                                6     5      1     341
                                              3 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             6     1      5   48321
                                             25 COMRAM     5     0      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  6     3      3   24475
                                             19 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   21087
                                             16 COMRAM     3     1      2
               _GPIO_pIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _intitialized_functions                               0     0      0   94475
                           _ADC_inti
                 _GPIO_pIN_INTIALIZE
                _Interrupt_Intx_Inti
                      _MSSP_I2C_Init
                        _Timer2_init
                        _Timer3_init
                          _ccp1_init
                 _lcd_4bit_intialize
                      _led_intialize
                    _motor_intialize
 ---------------------------------------------------------------------------------
 (2) _motor_intialize                                      3     2      1    8834
                                             16 COMRAM     3     2      1
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (2) _led_intialize                                        4     3      1    8947
                                             16 COMRAM     3     2      1
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_intialize                                   4     3      1   32793
                                             19 COMRAM     4     3      1
                 _GPIO_pIN_INTIALIZE
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   23607
                                             16 COMRAM     3     1      2
               _GPIO_pIN_WRITE_LOGIC
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       4     2      2    7211
                                             12 COMRAM     4     2      2
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          3     2      1    6659
                                             12 COMRAM     3     2      1
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _ccp1_init                                            7     5      2   10118
                                             28 COMRAM     6     4      2
                 _GPIO_pIN_INTIALIZE
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     596
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     561
                                             15 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Timer3_init                                          5     3      2     720
                                              5 COMRAM     4     2      2
                    _timer3_mode_cfg
                 _timer3_reg_bit_cfg
 ---------------------------------------------------------------------------------
 (3) _timer3_reg_bit_cfg                                   2     0      2     152
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _timer3_mode_cfg                                      2     0      2     214
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer2_init                                          3     2      1     292
                                              3 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_Init                                        3     1      2   12533
                                             96 COMRAM     2     0      2
_I2C_Master_Mode_Clock_Configuration
      _I2C_Slave_Mode_Configurations
  _MSSP_I2C_Interrupt_Configurations
             _MSSP_I2C_Mode_GPIO_CFG
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Mode_GPIO_CFG                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Interrupt_Configurations                    2     0      2     183
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Slave_Mode_Configurations                        3     1      2     121
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Mode_Clock_Configurations                 3     1      2   11720
                                             93 COMRAM     3     1      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Intx_Inti                                  3     1      2   11007
                                             19 COMRAM     3     1      2
               _interrupt_intx_clear
             _interrupt_intx_disable
           _interrupt_intx_edge_inti
              _interrupt_intx_enable
            _interrupt_intx_pin_inti
          _interrupt_intx_sethandler
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_sethandler                            5     3      2     765
                                              5 COMRAM     5     3      2
           _INT0_setinterrupthandler
           _INT1_setinterrupthandler
           _INT2_setinterrupthandler
 ---------------------------------------------------------------------------------
 (4) _INT2_setinterrupthandler                             3     1      2     158
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_setinterrupthandler                             3     1      2     158
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_setinterrupthandler                             3     1      2     158
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_pin_inti                              3     1      2    8734
                                             16 COMRAM     3     1      2
                 _GPIO_pIN_INTIALIZE
 ---------------------------------------------------------------------------------
 (3) _GPIO_pIN_INTIALIZE                                   4     2      2    8542
                                             12 COMRAM     4     2      2
       _GPIO_pIN_DIRECTION_INTIALIZE
               _GPIO_pIN_WRITE_LOGIC
 ---------------------------------------------------------------------------------
 (2) _GPIO_pIN_WRITE_LOGIC                                 9     6      3    6197
                                              3 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (4) _GPIO_pIN_DIRECTION_INTIALIZE                         8     6      2     617
                                              3 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_enable                                5     3      2     201
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_edge_inti                             5     3      2     387
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_disable                               5     3      2     291
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_intx_clear                                 5     3      2     201
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_inti                                             4     2      2     689
                                              6 COMRAM     3     1      2
           _adc_channel_port_confige
              _configure_voltage_ref
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 2     0      2     152
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_ref                                2     0      2     152
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _convert_uint8_to_string                              4     2      2    5891
                                             48 COMRAM     3     1      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7    4717
                                             28 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             13 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     947
                                              3 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _ccp1_pwm_start                                       1     1      0      13
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ccp1_pwm_set_stop                                    1     1      0      13
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ccp1_pwm_set_duty                                   17    13      4   20278
                                             93 COMRAM    16    12      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1436
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     847
                                             83 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5387
                                             58 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    4822
                                             42 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3053
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    4463
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_get_conversion_blocking                          6     2      4    2104
                                             11 COMRAM     6     2      4
              _ADC_ISconversion_done
            _ADC_ISconversion_result
                 _ADC_select_channal
               _ADC_start_conversion
 ---------------------------------------------------------------------------------
 (2) _ADC_start_conversion                                 3     1      2     251
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_select_channal                                   5     2      3     524
                                              6 COMRAM     5     2      3
           _adc_channel_port_confige
 ---------------------------------------------------------------------------------
 (3) _adc_channel_port_confige                             3     3      0      31
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_ISconversion_result                              7     4      3     437
                                              3 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _ADC_ISconversion_done                                4     1      3     313
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_manager                                    2     2      0     177
                                              1 COMRAM     2     2      0
              _ADC_handeler_funvtion
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
                         _TIMER3_ISR
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (8) _USART_TX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USART_RX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMER3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMER2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMER1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMER0_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_ISR                                         0     0      0       1
                                NULL *
   _mssp_I2C_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _mssp_I2C_DefaultInterruptHandler                     1     1      0       1
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
                                NULL *
                     _int1_interrupt *
                     _into_interrupt *
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
                                NULL *
                     _int1_interrupt *
                     _into_interrupt *
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
                                NULL *
                     _int1_interrupt *
                     _into_interrupt *
 ---------------------------------------------------------------------------------
 (9) _into_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _int1_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADC_handeler_funvtion                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_conversion_blocking
     _ADC_ISconversion_done
     _ADC_ISconversion_result
     _ADC_select_channal
       _adc_channel_port_confige
     _ADC_start_conversion
   _GPIO_pIN_WRITE_LOGIC
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___xxtofl
   _ccp1_pwm_set_duty
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___flsub
       ___fladd
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ccp1_pwm_set_stop
   _ccp1_pwm_start
   _convert_uint8_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _intitialized_functions
     _ADC_inti
       _adc_channel_port_confige
       _configure_voltage_ref
       _select_result_format
     _GPIO_pIN_INTIALIZE
       _GPIO_pIN_DIRECTION_INTIALIZE
       _GPIO_pIN_WRITE_LOGIC
     _Interrupt_Intx_Inti
       _interrupt_intx_clear
       _interrupt_intx_disable
       _interrupt_intx_edge_inti
       _interrupt_intx_enable
       _interrupt_intx_pin_inti
         _GPIO_pIN_INTIALIZE
       _interrupt_intx_sethandler
         _INT0_setinterrupthandler
         _INT1_setinterrupthandler
         _INT2_setinterrupthandler
     _MSSP_I2C_Init
       _I2C_Master_Mode_Clock_Configurations
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
       _I2C_Slave_Mode_Configurations
       _MSSP_I2C_Interrupt_Configurations
       _MSSP_I2C_Mode_GPIO_CFG
     _Timer2_init
     _Timer3_init
       _timer3_mode_cfg
       _timer3_reg_bit_cfg
     _ccp1_init
       _GPIO_pIN_INTIALIZE
       ___lldiv
       ___lmul
     _lcd_4bit_intialize
       _GPIO_pIN_INTIALIZE
       _lcd_4bit_send_command
         _GPIO_pIN_WRITE_LOGIC
         _lcd_4bit_send_enable_signal
           _GPIO_pIN_WRITE_LOGIC
         _lcd_send_4bits
           _GPIO_pIN_WRITE_LOGIC
     _led_intialize
       _GPIO_pIN_INTIALIZE
     _motor_intialize
       _GPIO_pIN_INTIALIZE
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _GPIO_pIN_WRITE_LOGIC
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _led_toggle
     _GPIO_pIN_TOGGLE_LOGIC
   _led_turn_off
     _GPIO_pIN_WRITE_LOGIC
   _led_turn_on
     _GPIO_pIN_WRITE_LOGIC
   _morot_stop
     _GPIO_pIN_WRITE_LOGIC
   _morot_turn_left
     _GPIO_pIN_WRITE_LOGIC
   _morot_turn_right
     _GPIO_pIN_WRITE_LOGIC

 _interrupt_manager (ROOT)
   _ADC_handeler_funvtion
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
     NULL(Fake) *
     _int1_interrupt *
     _into_interrupt *
   _INT1_ISR
     NULL(Fake) *
     _int1_interrupt *
     _into_interrupt *
   _INT2_ISR
     NULL(Fake) *
     _int1_interrupt *
     _into_interrupt *
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
     NULL(Fake) *
     _mssp_I2C_DefaultInterruptHandler *
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
   _TIMER2_ISR
   _TIMER3_ISR
   _USART_RX_ISR
   _USART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      72       7       44.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6E      7A       1       96.8%
BITBIGSFRhllhh      18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhlllh      6      0       0      46        0.0%
BITBIGSFRhlll        5      0       0      39        0.0%
BITBIGSFRlhllhl      4      0       0      43        0.0%
BITBIGSFRlhllll      4      0       0      47        0.0%
BITBIGSFRlhllll      4      0       0      48        0.0%
BITBIGSFRlhllhl      3      0       0      44        0.0%
BITBIGSFRlhllhl      1      0       0      42        0.0%
BITBIGSFRlhllhl      1      0       0      41        0.0%
BITBIGSFRlhllhh      1      0       0      40        0.0%
BITBIGSFRlhllhl      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B      12        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Apr 12 11:13:40 2024

              __end_of_INT1_setinterrupthandler 4C06                                   _led_intialize 441E  
          ADC_select_channal@ADC_CHANNAL_SELECT 0009                                    ___fldiv@aexp 002A  
                                  ___fldiv@bexp 0029                                    ___fldiv@sign 0022  
                               ?_lcd_send_4bits 000D                                     _SSPSTATbits 0FC7  
                                            l60 460C                                              l55 354C  
                                            l65 45AE                                              l86 3E98  
                                  ___awdiv@sign 0009                           _CCP2_Interrupthandler 00B6  
                                           l202 4840                                             l212 48BC  
                                           l207 487E                                             l144 4658  
                                           l232 42DA                                             l225 4484  
                                           l162 426E                                             l404 49AE  
                                           l165 49E6                                             l246 44EA  
                                           l407 4BBC                                             l239 4346  
                                           l416 46A4                                             l408 4BC2  
                      ??_intitialized_functions 0063                                             l409 4BC4  
                                           l434 40FC                                             l522 4CC8  
                                           l427 37A6                                             l460 3624  
                                           l516 3108                                             l508 2D60  
                                           l188 3CF4                                             l437 411A  
                                           l197 4A54                                             l519 4CBA  
                                           l472 4734                                             l392 3878  
                                           l465 47C0                                             l474 4738  
                                           l394 3916                                             l650 2FDA  
                                           l467 47C2                                             l760 2D78  
                                           l690 3E0C                                             l676 43B2  
                                           l669 3350                                             l942 4550  
                                           l766 2DFA                                             l890 4C40  
                                           l778 2EA6                                             l971 404C  
                                           l980 4136                                             l972 4056  
                                           l884 4D08                                             l893 46EE  
                                           l982 4140                                             l974 40A0  
                                           l983 4146                                             l887 3C5C  
                                           l985 418C                                             l969 403E  
                                           _RC6 7C16                                             _PR2 0FCB  
                             ??_motor_intialize 0012                            ?_Interrupt_Intx_Inti 0014  
                                           _ccc 00C5                                             _ddc 00C4  
                                           _abs 4A56                                             _ret 00BD  
           __end_of_lcd_4bit_send_enable_signal 49E8                     _lcd_4bit_send_enable_signal 49B0  
                                  ___awmod@sign 0009                                             tosl 0FFD  
                                           wreg 0FE8                                    ?_led_turn_on 000D  
                         _Int2_interrupthandler 00AA                                    ___flmul@aexp 0048  
                                  ___flmul@bexp 004D                     lcd_send_4bits@_data_command 000E  
                                  ___flmul@sign 0047                                    ___flmul@temp 0052  
                                  ___flmul@prod 004E                        ??_MSSP_I2C_Mode_GPIO_CFG 0004  
                               __end_of_RB4_ISR 4CAA                                 __end_of_RB5_ISR 4C90  
                               __end_of_RB6_ISR 4C76                                 __end_of_RB7_ISR 4C5C  
                                  ___fltol@exp1 005D                                            l1021 41B2  
                                          l1013 4AB8                                            l1022 41B8  
                                          l1024 41FE                                            l1008 3234  
                                          l1034 4C04                                            l1050 3B1E  
                                          l1019 41A8                                            ?_abs 000A  
                                          l1029 4C24                                            l1039 4BE4  
                                          l2051 36E8                                            l2117 3456  
                                          l1423 39DE                                            l2064 39C6  
                                          l1425 3A72                                            l2402 266A  
                                          l2404 24CA                                            l1452 4022  
                                          l1460 48FA                                            l2413 2510  
                                          l1453 4022                                            l2350 1794  
                                          l2415 2588                                            l2407 248E  
                                          l2416 2576                                            l2504 4974  
                                          l2441 1D6C                                            l1377 3EAE  
                                          l2434 1B76                                            l2451 1E9C  
                                          l2443 1DE4                                            l1379 3F20  
                                          l2444 1DD2                                            l2348 17E0  
                                          l2365 18FA                                            l2357 1AB0  
                                          l2349 17CE                                            l2438 1EDA  
                                          l2374 19CA                                            l2390 477E  
                                          l2542 2A4E                                            l1726 120A  
                                          l2375 19B8                                            l1831 440C  
                                          l2552 4A70                                            l1832 441C  
                                          l1745 1450                                            l2482 2B3E  
                                          l2475 2AA6                                            l2555 4A88  
                                          l2548 4802                                            l2478 2C02  
                                          l1854 3BC2                                            l2567 3860  
                                          l1847 3BB2                                            l1776 3FA4  
                                          l2489 2B9A                                            l2497 4A1E  
                                          l2578 4D1E                                            l9410 326E  
                                          l9500 39A6                                            l9412 3276  
                                          l9420 334E                                            l9404 3236  
                                          _ADC_ 0137                                            l9430 362A  
                                          l9502 39B6                                            l9510 37B8  
                                          l9414 32D0                                            l9406 323A  
                                          l9600 1640                                            l9440 365A  
                                          l9432 3638                                            l9504 39BE  
                                          l9512 37C8                                            l9408 324C  
                                          l9610 1672                                            l9602 1648  
                                          l9450 3688                                            l9442 365E  
                                          l9434 3640                                            l9522 4A56  
                                          l9514 37D2                                            l9418 3324  
                                          l9530 435A                                            l9700 184A  
                                          l9620 16A8                                            l9612 1678  
                                          l9604 1658                                            l9460 36BC  
                                          l9452 3696                                            l9444 3666  
                                          l9436 3644                                            l9428 3626  
                                          l9524 4A64                                            l9516 37EE  
                                          l9508 37A8                                            l9380 2EA8  
                                          l9532 437C                                            l9540 4200  
                                          l9702 184E                                            l9710 186E  
                                          l9630 16E4                                            l9622 16B8  
                                          l9614 1686                                            l9606 165E  
                                          l9462 36C2                                            l9454 369C  
                                          l9446 3678                                            l9438 3652  
                                          l9518 3820                                            l9390 2F42  
                                          l9382 2EAC                                            l9534 4384  
                                          l9526 4348                                            l9542 4200  
                                          l9800 231E                                            l9712 1894  
                                          l9720 18EA                                            l9704 185C  
                                          l9640 1702                                            l9632 16F2  
                                          l9624 16BA                                            l9616 1688  
                                          l9608 1670                                            l9456 36B2  
                                          l9448 3680                                            l9464 36C8  
                                          l9480 3936                                            l9472 3918  
                                          l9384 2EBE                                            l9536 43B0  
                                          l9528 4348                                            l9552 49B0  
                                          l9544 4218                                            l9810 2344  
                                          l9802 2320                                            l9730 193E  
                                          l9722 1910                                            l9714 18C8  
                                          l9706 185E                                            l9650 1716  
                                          l9642 1706                                            l9634 16F6  
                                          l9618 1698                                            l9626 16C2  
                                          l9466 36D8                                            l9458 36BA  
                                          l9490 396E                                            l9482 3944  
                                          l9474 391C                                            l9394 2F96  
                                          l9386 2EE0                                            l9562 4C06  
                                          l9570 4BE6                                            l9554 49B0  
                                          l9546 4232                                            l9900 25DC  
                                          l9820 2384                                            l9812 2352  
                                          l9804 2328                                            l9740 1968  
                                          l9732 194C                                            l9724 1920  
                                          l9716 18CA                                            l9708 1868  
                                          l9660 172A                                            l9652 171A  
                                          l9644 170A                                            l9636 16FA  
                                          l9628 16D2                                            l9468 36E0  
                                          l9492 397C                                            l9484 394C  
                                          l9476 392A                                            l9388 2EE8  
                                          l9396 2FD8                                            l9564 4C06  
                                          l9572 4BE6                                            l9580 4BC6  
                                          l9556 49C6                                            l9548 424E  
                                          l9910 2646                                            l9902 25E0  
                                          l9830 23C4                                            l9822 2386  
                                          l9814 2354                                            l9806 2338  
                                          l9750 199A                                            l9742 1978  
                                          l9734 194E                                            l9718 18DA  
                                          l9670 177C                                            l9662 172E  
                                          l9654 171E                                            l9646 170E  
                                          l9638 16FE                                            l9590 160C  
                                          l9494 3992                                            l9486 395E  
                                          l9478 3932                                            l9566 4C18  
                                          l9574 4BF8                                            l9582 4BD8  
                                          l9558 49CC                                            l9912 264A  
                                          l9904 25FA                                            l9840 23F4  
                                          l9832 23CC                                            l9816 2364  
                                          l9824 238E                                            l9808 233E  
                                          l9760 19F4                                            l9752 19B0  
                                          l9736 195C                                            l9728 1934  
                                          l9744 197A                                            l9680 17C0  
                                          l9672 178C                                            l9656 1722  
                                          l9648 1712                                            l9664 1732  
                                          l9592 160E                                            l9496 399A  
                                          l9488 3966                                            l9568 4C1C  
                                          l9576 4BFC                                            l9584 4BDC  
                                          l9914 2658                                            l9906 2610  
                                          l9850 2432                                            l9842 23F4  
                                          l9834 23D0                                            l9826 239E  
                                          l9818 2374                                            l9770 1A70  
                                          l9762 1A2E                                            l9738 1964  
                                          l9746 1988                                            l9682 17C2  
                                          l9674 17A2                                            l9666 1736  
                                          l9658 1726                                            l9594 161E  
                                          l9586 15F2                                            l9498 39A0  
                                          l9578 4BC6                                            l9916 265E  
                                          l9908 262A                                            l9860 247E  
                                          l9852 2442                                            l9828 23B4  
                                          l9780 1A90                                            l9772 1A74  
                                          l9756 19DA                                            l9764 1A30  
                                          l9748 198C                                            l9692 1812  
                                          l9684 17CC                                            l9676 17AE  
                                          l9668 1760                                            l9596 162E  
                                          l9588 15FE                                            l9940 33BC  
                                          l9932 337C                                            l9918 2660  
                                          l9870 24C8                                            l9862 248C  
                                          l9854 2452                                            l9846 2408  
                                          l9838 23E4                                            l9790 22DE  
                                          l9782 1A9E                                            l9774 1A82  
                                          l9766 1A40                                            l9758 19E6  
                                          l9694 1822                                            l9686 17EE  
                                          l9678 17B2                                            l9598 163E  
                                          l9950 33EC                                            l9942 33CA  
                                          l9934 33A6                                            l9926 3352  
                                          STR_1 1074                                            l9880 250E  
                                          l9872 24DA                                            l9864 2498  
                                          l9856 245A                                            l9848 2422  
                                          l9792 22EC                                            l9784 1AA0  
                                          l9776 1A88                                            l9768 1A50  
                                          l9696 1830                                            l9688 17FE  
                                          l9960 3416                                            l9952 33F6  
                                          l9936 33A8                                            l9928 3368  
                                          l9890 256E                                            l9874 24F0  
                                          l9882 2520                                            l9866 24B6  
                                          l9858 246A                                            l9794 22EE  
                                          l9778 1A8A                                            l9698 183E  
                                          l9962 3426                                            l9938 33B8  
                                          l9970 2A52                                            STR_4 1066  
                                          STR_5 1047                                            l9884 252E  
                                          l9876 24F6                                            l9868 24B8  
                                          l9796 22FE                                            l9788 22D2  
                                          l9964 3436                                            l9948 33E2  
                                          l9972 2A62                                            STR_6 1036  
                                          STR_7 1024                                            l9894 2598  
                                          l9886 2532                                            l9878 2500  
                                          l9798 230E                                            l9966 3446  
                                          l9958 340A                                            l9990 2B28  
                                          l9982 2AE0                                            l9974 2A70  
                                          STR_8 1057                                            STR_9 1011  
                                          l9896 25A4                                            l9888 2540  
                                          l9992 2B34                                            l9984 2AE8  
                                          l9976 2AB6                                            l9898 25B2  
                                          l9994 2B70                                            l9986 2AF4  
                                          l9978 2ACC                                            l9996 2B7C  
                                          l9988 2B26                                            l9998 2B8A  
                                          _LATA 0F89                                            _LATB 0F8A  
                                          _LATC 0F8B                                            _LATD 0F8C  
                                          _LATE 0F8D            interrupt_intx_disable@INTERRUPT_INTX 0004  
                                          u9800 324C                                            u9801 3248  
                                          u9810 326E                                            u9811 326A  
                                          u9900 392A                                            u9740 2EBE  
                                          u9901 3926                                            u9741 2EBA  
                                          u9910 3944                                            u9750 2EE0  
                                          u9911 3940                                            u9751 2EDC  
                                          u9840 3638                                            u9920 395E  
                                          u9824 3296                                            u9841 3634  
                                          u9921 395A                                            u9825 3292  
                                          u9850 3652                                            u9930 397C  
                                          u9834 32F0                                            u9851 364E  
                                          u9931 3978                                            u9835 32EC  
                                          u9860 3678                                            u9940 3992  
                                          u9780 2FAE                                            u9764 2F08  
                                          u9861 3674                                            u9941 398E  
                                          u9781 2FA8                                            u9765 2F04  
                                          u9870 3696                                            u9950 39B6  
                                          u9790 2FB0                                            u9774 2F62  
                                          u9871 3692                                            u9951 39B2  
                                          u9775 2F5E                                            u9880 36B2  
                                          u9960 37B8                                            u9881 36AE  
                                          u9961 37B4                                            _TMR1 0FCE  
                                          u9890 36D8                                            u9970 37C8  
                                          _TMR2 0FCC                                            u9891 36D4  
                                          u9971 37C4                                            u9980 37EE  
                                          u9981 37EA                                            u9990 3820  
                                          u9991 381C                                 ?_into_interrupt 0001  
                 ADC_ISconversion_done@ADC_conf 0004                   ??_lcd_4bit_send_enable_signal 000E  
                                          abs@a 000A                                            _led3 0075  
                                          _led5 0074                                            _dbuf 013D  
                                          _main 1078                                __end_of_CCP1_ISR 4D1A  
                              __end_of_CCP2_ISR 4D16                       ?_adc_channel_port_confige 0001  
                                          _prec 0082                                            fsr0h 0FEA  
                                          fsr1h 0FE2                                            indf0 0FEF  
                                          fsr2h 0FDA                                            fsr0l 0FE9  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 007B  
                                          prodh 0FF4                                            prodl 0FF3  
                    interrupt_intx_pin_inti@ret 0013                                            start 000E  
                              __end_of_ADC_inti 3918                                 ___fldiv@new_exp 0023  
               __end_of_ADC_ISconversion_result 37A8                       _interrupt_intx_sethandler 3A74  
                    ??_INT0_setinterrupthandler 0006                                   ?_led_turn_off 000D  
                                ?_led_intialize 0011                            ccp1_pwm_set_stop@ret 0004  
                                  ___param_bank 0000        INT2_setinterrupthandler@interrupthandler 0004  
      INT1_setinterrupthandler@interrupthandler 0004        INT0_setinterrupthandler@interrupthandler 0004  
                         _lcd_4bit_send_command 45B0                                           ??_abs 000C  
                         GPIO_pIN_INTIALIZE@ret 0010                                     ?_TIMER0_ISR 0001  
                                   ?_TIMER1_ISR 0001                  lcd_4bit_send_string_pos@column 001C  
                                   ?_TIMER2_ISR 0001                                     ?_TIMER3_ISR 0001  
                         lcd_4bit_intialize@lcd 0014                           lcd_4bit_intialize@ret 0017  
                              __end_of_INT0_ISR 4B7A                                __end_of_INT1_ISR 4B4A  
                              __end_of_INT2_ISR 4B1A                 __end_of_interrupt_intx_pin_inti 4ABA  
                                         l10000 2BA8                                           l10010 2BF0  
                                         l10002 2BAA                                           l10100 3596  
                                         l10012 2BF2                                           l10004 2BAE  
                                         l10020 28AE                                           l10102 359C  
                                         l10006 2BD2                                           l10030 2906  
                                         l10022 28BC                                           l10008 2BE2  
                                         l10040 2990                                           l10032 291E  
                                         l10024 28C0                                           l10016 2882  
                                         l10120 46F0                                           l10112 4780  
                                         l10200 3140                                           l10106 35A2  
                                         l10050 29E8                                           l10042 29A2  
                                         l10034 2928                                           l10026 28CA  
                                         l10018 28A6                                           l11010 4642  
                                         l11002 4610                                           l10122 470A  
                                         l10114 479A                                           l10210 3188  
                                         l10202 3146                                           l10130 3BDE  
                                         l11100 40A6                                           l10052 2A06  
                                         l10044 29B2                                           l10036 2940  
                                         l10028 28E8                                           l10060 2A2A  
                                         l11004 4610                                           l10124 4712  
                                         l10116 47A0                                           l10220 31CC  
                                         l10212 318E                                           l10204 3162  
                                         l10132 4C26                                           l10140 46EA  
                                         l10300 3FA6                                           l11110 410A  
                                         l11102 40B8                                           l10046 29C2  
                                         l10054 2A08                                           l10038 2974  
                                         l11006 4622                                           l10126 472C  
                                         l10118 47BA                                           l10150 4138  
                                         l10222 31D2                                           l10214 31AA  
                                         l10206 3164                                           l10230 31F4  
                                         l10142 46EC                                           l10134 4D04  
                                         l10310 3FFC                                           l10302 3FC0  
                                         l10070 45C8                                           l11030 4880  
                                         l11022 4842                                           l11014 4804  
                                         l10080 355A                                           l11112 411A  
                                         l11104 40C8                                           l11120 3010  
                                         l10048 29D2                                           l10056 2A1E  
                                         l11008 4626                                           l10160 418A  
                                         l10144 411C                                           l10224 31EE  
                                         l10208 316C                                           l10232 3232  
                                         l10240 4A8A                                           l10128 3BC4  
                                         l10136 46A6                                           l10312 4002  
                                         l10304 3FC6                                           l10320 48DE  
                                         l10072 460A                                           l10400 3528  
                                         l11040 4270                                           l11032 4890  
                                         l11024 4852                                           l11016 4814  
                                         l10090 3578                                           l10082 3560  
                                         l11106 40CC                                           l11122 3078  
                                         l11114 2FDC                                           l10170 418E  
                                         l10146 411C                                           l10218 31B0  
                                         l12010 2FC2                                           l10242 4A8A  
                                         l10138 46AE                                           l10314 401C  
                                         l10306 3FE0                                           l10322 48F8  
                                         l10330 43E2                                           l10066 45B0  
                                         l10402 3534                                           l10410 4562  
                                         l11050 42B8                                           l11042 4274  
                                         l11034 4894                                           l11026 4856  
                                         l11018 4818                                           l12020 35B6  
                                         l10092 357E                                           l10084 3566  
                                         l10076 3550                                           l11108 40EC  
                                         l11124 30DC                                           l11116 2FDC  
                                         l11132 4CAA                                           l10172 41A0  
                                         l10148 412E                                           l12012 4080  
                                         l10244 4A9C                                           l10260 3AAA  
                                         l10252 3A74                                           l10308 3FE2  
                                         l10316 48BE                                           l10340 3B4E  
                                         l10332 43EC                                           l10324 43B4  
                                         l10068 45C0                                           l10404 3540  
                                         l10500 4A34                                           l11140 3F22  
                                         l10412 456A                                           l12004 3CCC  
                                         l10420 3C62                                           l11060 42DC  
                                         l11052 42C8                                           l11044 428A  
                                         l10094 3584                                           l10086 356C  
                                         l10078 3554                                           l11126 30F0  
                                         l11118 3010                                           l10174 41AA  
                                         l10182 41BE                                           l10158 414C  
                                         l12014 3214                                           l10246 4AA4  
                                         l12006 3AFE                                           l10262 3AC4  
                                         l10254 3A78                                           l10318 48D8  
                                         l10350 3BA0                                           l10342 3B5A  
                                         l10334 3B20                                           l10326 43C4  
                                         l10510 4438                                           l11150 3F62  
                                         l11142 3F3A                                           l10414 45AC  
                                         l10422 3C68                                           l10430 3CB8  
                                         l11070 4324                                           l11062 42E0  
                                         l11054 42CC                                           l11046 42A6  
                                         l11038 4270                                           l10600 4684  
                                         l10096 358A                                           l10088 3572  
                                         l11128 3108                                           l11136 4CBC  
                                         l10360 47DC                                           l10184 41FC  
                                         l10168 418E                                           l12016 416C  
                                         l10192 310A                                           l10280 4036  
                                         l12008 3338                                           l10248 4AB6  
                                         l10256 3A8A                                           l10352 3BA2  
                                         l10344 3B68                                           l10336 3B30  
                                         l10328 43D2                                           l10520 447A  
                                         l10512 4454                                           l10504 441E  
                                         l11160 3F94                                           l11152 3F6E  
                                         l11144 3F46                                           l10408 4552  
                                         l10424 3C7C                                           l10432 3CF2  
                                         l11080 4486                                           l11072 4334  
                                         l11064 42F6                                           l11048 42A8  
                                         l10602 469E                                           l10610 36EA  
                                         l10098 3590                                           l10362 47FA  
                                         l12018 41DE                                           l10194 310A  
                                         l10282 4044                                           l10290 4060  
                                         l10258 3A92                                           l10266 3ADE  
                                         l10354 3BAC                                           l10346 3B72  
                                         l10338 3B46                                           l10370 3470  
                                         l10514 4456                                           l10506 441E  
                                         l11162 3F9C                                           l11154 3F76  
                                         l11146 3F52                                           l10426 3C90  
                                         l10418 3C5E                                           l10530 3DBE  
                                         l11090 44CE                                           l11082 448A  
                                         l11074 4338                                           l11066 4312  
                                         l11058 42DC                                           l10604 46A2  
                                         l10620 3754                                           l10612 36FC  
                                         l10356 47C4                                           l10540 3874  
                                         l10196 311C                                           l10292 409E  
                                         l10276 4024                                           l10268 3B1C  
                                         l10700 2E3A                                           l10348 3B90  
                                         l10380 34A8                                           l10372 3490  
                                         l10516 4466                                           l10508 4422  
                                         l11156 3F82                                           l11148 3F5A  
                                         l10428 3CA4                                           l10532 3E0A  
                                         l10524 3D82                                           l11092 44DE  
                                         l11084 44A0                                           l11068 4314  
                                         l10622 376E                                           l10614 370C  
                                         l10358 47CC                                           l10550 38E8  
                                         l10542 387A                                           l10198 3124  
                                         l10278 4024                                           l10710 2E7C  
                                         l10702 2E40                                           l10390 34F2  
                                         l10382 34AA                                           l10366 3458  
                                         l10518 4476                                           l11158 3F8C  
                                         l10526 3D96                                           l11094 44E2  
                                         l11086 44BC                                           l11078 4486  
                                         l10616 3714                                           l10608 36EA  
                                         l10800 1AFE                                           l10480 4A00  
                                         l10560 3914                                           l10552 38EA  
                                         l10544 38D2                                           l10536 3862  
                                         l10712 2E96                                           l10704 2E5A  
                                         l10640 2C1E                                           l10632 2C04  
                                         l10392 34F8                                           l10384 34BA  
                                         l10368 346C                                           l10528 3DB6  
                                         l11088 44BE                                           l10626 37A0  
                                         l10618 372E                                           l10570 4988  
                                         l11098 40A2                                           l10810 1B2E  
                                         l10802 1B04                                           l10482 4A04  
                                         l10490 4956                                           l10562 3916  
                                         l10554 38EC                                           l10546 38E4  
                                         l10538 3862                                           l10730 452C  
                                         l10722 44EC                                           l10714 2E98  
                                         l10706 2E5C                                           l10650 2C7C  
                                         l10634 2C04                                           l10394 3504  
                                         l10386 34CA                                           l10378 3494  
                                         l10628 37A4                                           l10572 4990  
                                         l10900 1E6A                                           l10820 1B66  
                                         l10812 1B30                                           l10804 1B14  
                                         l10476 49E8                                           l10492 4966  
                                         l10484 493A                                           l10556 38FC  
                                         l10548 38E6                                           l10732 4538  
                                         l10724 44EC                                           l10716 2EA4  
                                         l10708 2E76                                           l10740 3EAA  
                                         l10660 2D4A                                           l10652 2C9A  
                                         l10644 2C3E                                           l10636 2C16  
                                         l10396 3510                                           l10388 34D6  
                                         l11700 1198                                           l10574 49A2  
                                         l10566 4976                                           l10582 4BA2  
                                         l10910 1EC0                                           l10902 1E84  
                                         l10830 1BB6                                           l10822 1B86  
                                         l10814 1B40                                           l10806 1B1A  
                                         l10478 49F4                                           l10486 4946  
                                         l10558 3908                                           l10734 4544  
                                         l10726 44FE                                           l10718 2EA6  
                                         l10750 3F1A                                           l10742 3EB0  
                                         l10662 2D4C                                           l10654 2CA2  
                                         l10638 2C1A                                           l10398 351C  
                                         l11710 11F6                                           l11702 11AA  
                                         l10592 465A                                           l10576 49A8  
                                         l10568 4976                                           l10584 4BA2  
                                         l10904 1EA0                                           l10912 1EC6  
                                         l10840 1C06                                           l10832 1BC0  
                                         l10824 1B96                                           l10816 1B50  
                                         l10808 1B20                                           l10920 474A  
                                         l10488 494E                                           l10728 4502  
                                         l10680 2D94                                           l10672 2D62  
                                         l10752 3F1C                                           l10744 3F08  
                                         l10760 39C8                                           l10664 2D5C  
                                         l10648 2C5E                                           l10656 2D38  
                                         l10496 4A20                                           l11800 14FA  
                                         l11720 1246                                           l11704 11BE  
                                         l11712 120A                                           l10594 465A  
                                         l10578 49AC                                           l10586 4BB4  
                                         l10914 1ECA                                           l10906 1EB0  
                                         l10850 1C48                                           l10842 1C12  
                                         l10834 1BD6                                           l10818 1B60  
                                         l10690 2DF8                                           l10682 2DA4  
                                         l10674 2D62                                           l10754 3F1E  
                                         l10746 3F0A                                           l10738 3E9A  
                                         l10770 3A0A                                           l10762 39C8  
                                         l10666 2D5E                                           l10658 2D48  
                                         l10498 4A30                                           l11810 155A  
                                         l11802 150A                                           l11730 1294  
                                         l11722 1258                                           l11714 121C  
                                         l11706 11D0                                           l10596 466C  
                                         l10588 4BBE                                           l10908 1EBE  
                                         l10860 1CAA                                           l10852 1C58  
                                         l10844 1C20                                           l10836 1BE2  
                                         l10828 1BAA                                           l10692 2E00  
                                         l10684 2DBE                                           l10676 2D74  
                                         l10756 3F20                                           l10748 3F0C  
                                         l10780 3A6E                                           l10772 3A58  
                                         l10764 39DA                                           l10668 2D60  
                                         l10940 3E22                                           l11820 15AE  
                                         l11812 156A                                           l11804 151A  
                                         l11740 12DC                                           l11732 12A0  
                                         l11724 1264                                           l11716 1228  
                                         l11708 11E4                                           l10598 467C  
                                         l10870 1D52                                           l10862 1CC6  
                                         l10854 1C72                                           l10846 1C2C  
                                         l10838 1BFA                                           l10790 1ABE  
                                         l10918 473A                                           l10694 2E10  
                                         l10686 2DD8                                           l10678 2D7A  
                                         l10782 3A70                                           l10774 3A5A  
                                         l10766 39E0                                           l10942 3E36  
                                         l11814 157A                                           l11822 15CE  
                                         l11806 152A                                           l11742 12EE  
                                         l11734 12B2                                           l11726 1276  
                                         l11718 123A                                           l11670 1078  
                                         l10880 1D8E                                           l10872 1D5C  
                                         l10864 1CF0                                           l10856 1C82  
                                         l10848 1C3C                                           l10792 1ACC  
                                         l10688 2DDE                                           l10696 2E1C  
                                         l10784 3A72                                           l10776 3A5C  
                                         l10768 39FE                                           l10944 3E62  
                                         l10936 3E0E                                           l11816 158C  
                                         l11808 153A                                           l11760 136E  
                                         l11752 1334                                           l11744 12FA  
                                         l11736 12BE                                           l11728 1282  
                                         l11680 10F2                                           l11672 107C  
                                         l10890 1E00                                           l10882 1D9C  
                                         l10874 1D6A                                           l10866 1D26  
                                         l10858 1C9E                                           l10794 1ACE  
                                         l10698 2E20                                           l10778 3A6C  
                                         l10946 3E66                                           l10938 3E1E  
                                         l11818 15A8                                           l11754 1346  
                                         l11746 130C                                           l11738 12D0  
                                         l11690 1140                                           l11682 1112  
                                         l11674 1090                                           l10892 1E0E  
                                         l10884 1DCA                                           l10876 1D7C  
                                         l10868 1D34                                           l10796 1ADE  
                                         l10788 1AB2                                           l11772 13B0  
                                         l11764 1384                                           l11756 1358  
                                         l11748 131E                                           l11780 1450  
                                         l11692 1152                                           l11684 1126  
                                         l11676 10DA                                           l10894 1E38  
                                         l10878 1D8A                                           l10798 1AEE  
                                         l11790 14B2                                           l11782 1460  
                                         l11774 13C2                                           l11694 1164  
                                         l11686 112A                                           l11678 10EA  
                                         l10888 1DF4                                           l10896 1E3C  
                                         l11792 14C2                                           l11784 146E  
                                         l11776 1400                                           l11768 139A  
                                         l11696 1172                                           l11688 113C  
                                         l10898 1E56                                           l11794 14DE  
                                         l11786 148A                                           l11778 1412  
                                         l11698 1184                                           l11796 14E6  
                                         l11788 14A2                                           l11798 14EE  
                         ccp1_pwm_set_duty@duty 005E                                   ___fltol@sign1 005C  
                               __end_of___fladd 1AB2                                           ?_main 0001  
                               __end_of___fldiv 266C                                 __end_of___awdiv 36EA  
                                         _EEADR 0FA9                                 __end_of___awmod 39C8  
                               __end_of___flmul 1EDC                                 __end_of___flsub 4780  
                               __end_of___fltol 3458                     interrupt_intx_edge_inti@ret 0008  
                                         u10000 4A64                                           u10001 4A60  
                                         u10010 435A                                           u10011 4356  
                               __end_of___lldiv 3BC4                                           u10100 1686  
                                         u10020 437C                                           u10101 1682  
                                         u10021 4378                                           u10110 1698  
                                         u10030 4C18                                           u10111 1694  
                                         u10031 4C14                                           u10200 17E0  
                                         u10120 16A8                                           u11000 412E  
                                         u10040 4BF8                                           u10201 17DC  
                                         u10121 16A4                                           u11001 412A  
                                         u10041 4BF4                                           u10210 17EE  
                                         u10130 16E4                                           u11010 41A0  
                                         u10050 4BD8                                           u10211 17EA  
                                         u10131 16E0                                           u11011 419C  
                                         u10051 4BD4                                           u10300 194C  
                                         u10220 17FE                                           u10140 16F2  
                                         u10060 160C                                           u11020 311C  
                                         u11100 3A8A                                           u10301 1948  
                                         u10221 17FA                                           u10141 16EE  
                                         u10061 1608                                           u11021 3118  
                                         u11101 3A86                                           u10310 195C  
                                         u10230 1830                                           u10150 1760  
                                         u10070 161E                                           u11030 3140  
                                         u11110 4036                                           u10311 1958  
                                         u10231 182C                                           u10151 175C  
                                         u10071 161A                                           u11031 313C  
                                         u11111 4032                                           u10400 1A40  
                                         u10320 1978                                           u10240 183E  
                                         u10160 1778                                           u10080 162E  
                                         u11040 3162                                           u11120 3FC0  
                                         u11200 3B46                                           u10401 1A3C  
                                         u10321 1974                                           u10241 183A  
                                         u10161 1772                                           u10081 162A  
                                         u11041 315E                                           u11121 3FBC  
                                         u11201 3B42                                           u10410 1A50  
                                         u10330 1988                                           u10250 185C  
                                         u10170 177A                                           u10090 1670  
                                         u11050 3188                                           u11130 3FE0  
                                         u11210 3B68                                           u12010 42C8  
                                         u10411 1A4C                                           u10331 1984  
                                         u10251 1858                                           u10091 166C  
                                         u11051 3184                                           u11131 3FDC  
                                         u11211 3B64                                           u12011 42C4  
                                         u10500 2374                                           u10420 1A70  
                                         u10340 199A                                           u10260 1894  
                                         u10180 17A2                                           u11300 4A1E  
                                         u11060 31AA                                           u11140 3FFC  
                                         u11220 3B90                                           u10501 2370  
                                         u10421 1A6C                                           u10341 1996  
                                         u10261 1890                                           u10181 179E  
                                         u11301 4A1A                                           u11061 31A6  
                                         u11141 3FF8                                           u11221 3B8C  
                                         u12005 42B6                                           u10510 23B4  
                                         u10430 1A82                                           u10350 19B0  
                                         u10270 18DA                                           u10190 17C0  
                                         u11230 47FA                                           u11070 31CC  
                                         u11150 401C                                           u11310 4A30  
                                         u12030 4334                                           u10511 23B0  
                                         u10431 1A7E                                           u10351 19AC  
                                         u10271 18D6                                           u10191 17BC  
                                         u11231 47F6                                           u11071 31C8  
                                         u11151 4018                                           u11311 4A2C  
                                         u12031 4330                                           u12007 42B8  
                                         u11400 466C                                           u10600 2540  
                                         u10520 23F4                                           u10440 1A9E  
                                         u10360 19C6                                           u10280 1910  
                                         u11080 31EE                                           u11160 48D8  
                                         u11240 346C                                           u11401 4668  
                                         u10601 253C                                           u10521 23F0  
                                         u10441 1A9A                                           u10361 19C2  
                                         u10281 190C                                           u11081 31EA  
                                         u11161 48D4                                           u11241 3468  
                                         u12025 4322                                           u11410 467C  
                                         u10610 256E                                           u10530 246A  
                                         u10450 22EC                                           u10370 19DA  
                                         u10290 1920                                           u11090 4A9C  
                                         u11170 48F8                                           u11250 34BA  
                                         u11330 4476                                           u12050 44DE  
                                         u11411 4678                                           u10611 256A  
                                         u10531 2466                                           u10451 22E8  
                                         u10371 19D6                                           u10291 191C  
                                         u11091 4A98                                           u11171 48F4  
                                         u11251 34B6                                           u11331 4472  
                                         u12051 44DA                                           u12027 4324  
                                         u11420 469A                                           u12060 40B8  
                                         u10620 2584                                           u10540 248C  
                                         u10460 22FE                                           u10380 19F4  
                                         u10700 33CA                                           u11180 43D2  
                                         u11500 2C3A                                           u11260 4562  
                                         u11340 3D96                                 ___awdiv@divisor 0006  
                                         u11421 4694                                           u12061 40B4  
                                         u10621 2580                                           u10541 2488  
                                         u10461 22FA                                           u10381 19F0  
                                         u10701 33C6                                           u11181 43CE  
                                         u11501 2C36                                           u11325 4464  
                                         u11261 455E                                           u11341 3D92  
                                         u12045 44CC                                           u11430 469C  
                                         u12070 40C8                                           u10630 2598  
                                         u10550 24B6                                           u10470 230E  
                                         u10390 1A2E                                           u10710 33DE  
                                         u11190 440C                                           u11510 2C5A  
                                         u11350 3DB6                                           u12071 40C4  
                                         u10631 2594                                           u10551 24B2  
                                         u10471 230A                                           u10391 1A2A  
                                         u10711 33DA                                           u11191 4408  
                                         u11511 2C56                                           u11327 4466  
                                         u11351 3DB2                                           u12047 44CE  
                                         u11440 36FC                                           u12080 410A  
                                         u10640 25B2                                           u10560 24DA  
                                         u10480 2352                                           u10720 3406  
                                         u10800 2B8A                                           u11600 2E5A  
                                         u11520 2C7C                                           u11441 36F8  
                                         u12081 4106                                           u10641 25AE  
                                         u10561 24D6                                           u10481 234E  
                                         u10721 3402                                           u10801 2B86  
                                         u11601 2E56                                           u11521 2C78  
                         ??_Interrupt_Intx_Inti 0016                                           u11450 370C  
                                         u10650 25FA                                           u10570 24F0  
                                         u10490 2364                                           u10730 3426  
                                         u10810 2B9A                                           u11370 3874  
                                         u11610 2E76                                           u11530 2C9A  
                                         u11451 3708                                           u10651 25F6  
                                         u10571 24EC                                           u10491 2360  
                                         u10731 3422                                           u10811 2B96  
                                         u11371 3870                                           u11611 2E72  
                                         u11531 2C96                                           u11460 372E  
                                         u11380 4988                                           u10660 262A  
                                         u10580 250E                                           u11700 1B40  
                                         u10740 3436                                           u10820 2BA8  
                                         u10900 29A2                                           u11620 2E96  
                                         u11540 2D74                                           u11364 3DDC  
                                         u12500 113C                                           u11461 372A  
                                         u11381 4984                                           u10661 2626  
                                         u10581 250A                                           u11701 1B3C  
                                         u10741 3432                                           u10821 2BA4  
                                         u10901 299E                                           u11621 2E92  
                                         u11541 2D70                                           u11365 3DD8  
                                         u12501 1138                                           u11470 376E  
                                         u11390 4BB4                                           u10670 2658  
                                         u10590 252E                                           u11710 1B50  
                                         u10830 2BE2                                           u10750 2A62  
                                         u10910 29B2                                           u11630 44FE  
                                         u11550 2D94                                           u12510 1164  
                                         u11471 376A                                           u11391 4BB0  
                                         u10671 2654                                           u10591 252A  
                                         u11711 1B4C                                           u10831 2BDE  
                                         u10751 2A5E                                           u10911 29AE  
                                         u11631 44FA                                           u11551 2D90  
                                         u12511 1160                                           u11800 1DF4  
                                         u11720 1B86                                           u10680 3368  
                                         u10840 2BF0                                           u10760 2A70  
                                         u10920 29C2                                           u11560 2DBE  
                                         u11640 3EAA                                           u12600 1294  
                                         u12520 1184                                           u11801 1DF0  
                                         u11721 1B82                                           u10681 3364  
                                         u10841 2BEC                                           u10761 2A6C  
                                         u10921 29BE                                           u11561 2DBA  
                                         u11641 3EA6                                           u12601 1290  
                                         u12521 1180                                           u11810 1E0E  
                                         u11730 1B96                                           u10690 339C  
                                         u10770 2ACC                                           u10930 29D2  
                                         u10850 28A6                                           u11570 2DD8  
                                         u11650 39DA                                           u11490 2C16  
                                         u12610 12B2                                           u12530 11AA  
                                         u11811 1E0A                                           u11731 1B92  
                                         u10771 2AC8                                           u10931 29CE  
                                         u10851 28A2                                           u11571 2DD4  
                                         u11651 39D6                                           u11491 2C12  
                                         u12611 12AE                                           u12531 11A6  
                                         u11820 1E56                                           u11740 1D10  
                                         u11660 1ACC                                           u10780 2B22  
                                         u10940 2A1A                                           u10860 28E8  
                                         u11580 2DF8                                           u12700 13AC  
                                         u12620 12D0                                           u12540 11D0  
                                         u11485 3786                                           u11821 1E52  
                                         u11661 1AC8                                           u10781 2B1E  
                                         u10941 2A16                                           u10861 28E4  
                                         u11581 2DF4                                           u12701 13A8  
                                         u12621 12CC                                           u12541 11CC  
                                         u11830 1E84                                           u11750 1D6A  
                                         u11670 1ADE                                           u10790 2B6C  
                                         u10870 2906                                           u11590 2E3A  
                                         u10950 45C0                                           u12710 13C2  
                                         u12630 12EE                                           u12550 11F6  
                                         u11831 1E80                                           u11751 1D66  
                                         u11671 1ADA                                           u10695 3392  
                                         u10791 2B68                                           u10871 2902  
                                         u11591 2E36                                           u10951 45BC  
                                         u12711 13BE                                           u12631 12EA  
                                         u12551 11F2                                           u11840 1EBE  
                                         u11760 1D8A                                           u11680 1AEE  
                                         u10880 293C                                           u10960 479A  
                                         u12800 158C                                           u12720 1412  
                                         u12640 130C                                           u12560 121C  
                                         u11841 1EBA                                           u11761 1D86  
                                         u11745 1D06                                           u11681 1AEA  
                                         u10881 2936                                           u10961 4796  
                                         u12801 1588                                           u12721 140E  
                                         u12641 1308                                           u12561 1218  
                                         u11770 1D9C                                           u11690 1B2E  
                                         u10890 293E                                           u10970 47BA  
                                         u12730 1460                                           u12650 1330  
                                         u12570 123A                                           u12490 10EA  
                                         u11771 1D98                                           u11691 1B2A  
                                         u10971 47B6                                           u12731 145C  
                                         u12651 132C                                           u12571 1236  
                                         u12491 10E6                                           u11780 1DCA  
                                         u10980 470A                                           u11860 3E1E  
                                         u12740 14B2                                           u12660 1346  
                                         u12580 1258                                           u11781 1DC6  
                                         u10981 4706                                           u11861 3E1A  
                                         u12741 14AE                                           u12661 1342  
                                         u12581 1254                                           u11790 1DE0  
                                         u10990 472C                                           u11870 3E5C  
                                         u12750 14C2                                           u12670 136A  
                                         u12590 1276                                           u11791 1DDC  
                                         u10991 4728                                           u12751 14BE  
                                         u12671 1366                                           u12591 1272  
                                         u11960 4622                                           u11880 3E88  
                                         u12760 152A                                           u12680 1380  
                                         u11961 461E                                           u12761 1526  
                                         u12817 1500                                           u12681 137C  
                                         u11890 3E98                                           u11970 4814  
                                         u12770 153A                                           u12690 1396  
                                         u12827 34C0                                           u11891 3E94  
                                         u11971 4810                                           u12771 1536  
                                         u12691 1392                                           u11980 4852  
                                         u12780 156A                                           u12837 34DC  
                                         u11877 3E52                                           u11981 484E  
                                         u12781 1566                                           u11990 4890  
                                         u12790 157A                                           u12847 34F4  
                                         u11887 3E7E                                           u11991 488C  
                                         u12791 1576                                           i2l527 4D18  
                                         i2l479 4D1C                                           i2l577 4D14  
                                         _INT_0 0131                                           _INT_1 012B  
                                         i2l881 4D10                                 ___awdiv@counter 0008  
                                         i2l877 4AE8                                           _RCREG 0FAE  
                           relay_turn_off@F3070 00CA                             morot_stop@motor_pin 000D  
                                  vfpfcnvrt@fmt 000F                                           _TMR0H 0FD7  
                                         _TMR1H 0FCF                                           _TMR0L 0FD6  
                                         _TMR1L 0FCE                                           _TMR3H 0FB3  
                                         _TMR3L 0FB2                                           _SPBRG 0FAF  
                                         _PORTA 0F80                                           _PORTB 0F81  
                                         _PORTC 0F82                                           _PORTD 0F83  
                                         _PORTE 0F84                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _TXREG 0FAD                       ?_INT2_setinterrupthandler 0004  
                          _ADC_INTERRUPTHANDLER 00BA                       lcd_4bit_set_cursor@coulmn 0016  
                           ___lmul@multiplicand 0008                __end_of_interrupt_intx_edge_inti 3236  
                                         _ccp1_ 0121                                           _flag1 0072  
                                         _flag2 0071                                           _flag3 0070  
                                         _flag4 006F                                           _led_1 00F4  
                                         _led_2 00F3                                           _flags 00BC  
                                         _fputc 37A8                                           _relay 0073  
                                         _width 0080                                           _putch 4D1E  
                               _timer3_mode_cfg 3FA6                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 007C                                           ttemp6 007F  
                                         ttemp7 0083                                           status 0FD8  
                                         wtemp8 007C                                 __end_of_sprintf 4976  
                                    _i2c_data_1 0079                                      _i2c_data_2 0078  
                                    _i2c_data_3 0077                                      _i2c_data_4 0076  
                                ??_led_turn_off 000E                                 __initialization 3CF6  
                                  RB4_ISR@value 0001                       _RB6_interrupthandler_high 00A0  
                                  __end_of_main 15F2                         ??_GPIO_pIN_TOGGLE_LOGIC 0005  
                                 _lat_regisrers 00D7                        _INT1_setinterrupthandler 4BE6  
                                  RB5_ISR@value 0001                                          ??_main 006E  
                                 __activetblptr 0003                         ??_configure_voltage_ref 0006  
                              led_turn_on@F3065 00CF                                       ??_RB4_ISR 0001  
                                     ??_RB5_ISR 0001                                       ??_RB6_ISR 0001  
                                     ??_RB7_ISR 0001                          Interrupt_Intx_Inti@ret 0016  
                                  RB6_ISR@value 0001                          ccp1_pwm_set_duty@duty_ 0064  
                                        ?_fputc 0004                                          _ADRESH 0FC4  
                                        _EEADRH 0FAA                                          _ADRESL 0FC3  
                                        _EEDATA 0FA8                                          _CCPR1L 0FBE  
                                        _CCPR2L 0FBB                                          _EECON2 0FA7  
                              ___awdiv@dividend 0004                                          ?_putch 0001  
                                        i2l1201 21C6                                          i2l1211 2266  
                                        i2l1203 21E6                                          i2l1060 4B48  
                                        i2l1109 4C5A                                          i2l1213 2286  
                                        i2l1205 2206                                          i2l1055 4B78  
                                        i2l1215 22A6                                          i2l1207 2226  
                                        i2l1400 4CFA                                          i2l1065 4B18  
                                        i2l1209 2246                                          i2l1218 22C6  
                                        i2l1076 4CA8                                          i2l1181 1F8A  
                                        i2l1087 4C8E                                          i2l1191 20DE  
                                        i2l1183 1FCE                                          i2l1175 1F06  
                                        i2l1360 4CE4                                          i2l1193 2122  
                                        i2l1185 2012                                          i2l1177 1F26  
                                        i2l1098 4C74                                          i2l1195 2166  
                                        i2l1187 2056                                          i2l1179 1F46  
                                        i2l1197 2186                                          i2l1189 209A  
                                        i2l1287 4CF2                                          i2l1199 21A6  
                                        i2l1800 269E                                          i2l1464 4CD6  
                                        i2l1801 268C                                          i2l1810 2714  
                                        i2l1811 2880                                          i2l1803 269A  
                                        i2l1814 2860                                          i2l1806 26C4  
                                        i2l1583 4D0C                                          i2l1817 2880  
                                        i2l1588 4D20                                          i2l1785 4D24  
                                        i2l1788 4D22                                          i2l8000 4C8E  
                                        i2l8020 4C44                                          i2l8014 4C74  
                                        i2l8006 4C5E                                          i2l8022 4C46  
                                        i2l8008 4C60                                          i2l8034 4CE6  
                                        i2l8042 4CD8                                          i2l8050 4CF4  
                                        i2l8028 4C5A                                          i2l8036 4CE8  
                                        i2l8044 4CDA                                          i2l8038 4CEE  
                                        i2l8046 4CE0                                          i2l8054 4CCA  
                                        i2l8062 4D0A                                          i2l8056 4CCC  
                                        i2l7530 26B2                                          i2l7522 266C  
                                        i2l8058 4CD2                                          i2l7540 271C  
                                        i2l7532 26CC                                          i2l7524 267C  
                                        i2l8068 4D20                                          i2l7550 2776  
                                        i2l7542 272E                                          i2l7534 26DE  
                                        i2l7526 268A                                          i2l7560 27D0  
                                        i2l7552 2788                                          i2l7544 2740  
                                        i2l7536 26F0                                          i2l7528 26A0  
                                        i2l7570 282A                                          i2l7562 27E2  
                                        i2l7554 279A                                          i2l7546 2752  
                                        i2l7538 2702                                          i2l7572 283C  
                                        i2l7564 27F4                                          i2l7556 27AC  
                                        i2l7548 2764                                          i2l8700 2008  
                                        i2l7574 284E                                          i2l7566 2806  
                                        i2l7558 27BE                                          i2l8710 204C  
                                        i2l8702 200C                                          i2l7576 2868  
                                        i2l7568 2818                                          i2l8720 2090  
                                        i2l8712 2050                                          i2l8704 2020  
                                        i2l7906 4D1A                                          i2l7578 2878  
                                        i2l8730 20D4                                          i2l8722 2094  
                                        i2l8714 2064                                          i2l8706 202E  
                                        i2l8740 2118                                          i2l8732 20D8  
                                        i2l8724 20A8                                          i2l8716 2072  
                                        i2l8708 203C                                          i2l8660 1EE6  
                                        i2l7950 4ABA                                          i2l8750 215C  
                                        i2l8742 211C                                          i2l8734 20EC  
                                        i2l8726 20B6                                          i2l8718 2080  
                                        i2l8670 1F34                                          i2l8662 1EF4  
                                        i2l7944 4D12                                          i2l7960 4B4A  
                                        i2l7952 4ABC                                          i2l8760 21A2  
                                        i2l8752 2160                                          i2l8744 2130  
                                        i2l8736 20FA                                          i2l8728 20C4  
                                        i2l8680 1F80                                          i2l8672 1F42  
                                        i2l8664 1F02                                          i2l7938 4D16  
                                        i2l7962 4B4C                                          i2l7970 4B30  
                                        i2l7954 4AD0                                          i2l8770 21F4  
                                        i2l8762 21B4                                          i2l8754 2174  
                                        i2l8746 213E                                          i2l8738 2108  
                                        i2l8690 1FC4                                          i2l8682 1F84  
                                        i2l8674 1F54                                          i2l8666 1F14  
                                        i2l7964 4B60                                          i2l7972 4AEA  
                                        i2l7956 4D0E                                          i2l7980 4C94  
                                        i2l8780 2242                                          i2l8772 2202  
                                        i2l8764 21C2                                          i2l8756 2182  
                                        i2l8748 214C                                          i2l8692 1FC8  
                                        i2l8684 1F98                                          i2l8676 1F62  
                                        i2l8668 1F22                                          i2l7966 4B1A  
                                        i2l7974 4AEC                                          i2l8790 2294  
                                        i2l8782 2254                                          i2l8774 2214  
                                        i2l8766 21D4                                          i2l8758 2194  
                                        i2l8694 1FDC                                          i2l8686 1FA6  
                                        i2l8678 1F70                                          i2l7968 4B1C  
                                        i2l7976 4B00                                          i2l7992 4C78  
                                        i2l8792 22A2                                          i2l8784 2262  
                                        i2l8776 2222                                          i2l8768 21E2  
                                        i2l8696 1FEA                                          i2l8688 1FB4  
                                        i2l7986 4CA8                                          i2l7978 4C92  
                                        i2l7994 4C7A                                          i2l8794 22B4  
                                        i2l8786 2274                                          i2l8778 2234  
                                        i2l8698 1FF8                                          i2l8796 22C2  
                                        i2l8788 2282                                   vfpfcnvrt@done 0012  
                                        _SPBRGH 0FB0                                    RB7_ISR@value 0001  
                      ??_interrupt_intx_disable 0006                                          _SSPADD 0FC8  
                                        _SSPBUF 0FC9                                __end_of___xxtofl 2C04  
              __end_of_lcd_4bit_send_string_pos 3E9A                                 ??_led_intialize 0012  
                         __end_of_MSSP_I2C_Init 2EA8    __end_of_I2C_Master_Mode_Clock_Configurations 3C5E  
        ??_I2C_Master_Mode_Clock_Configurations 0060           ?_I2C_Master_Mode_Clock_Configurations 005E  
          _I2C_Master_Mode_Clock_Configurations 3BC4                                   ??_Timer2_init 0005  
                                 ??_Timer3_init 0008                                          _Timer2 00D1  
                        ?_lcd_4bit_send_command 0011                                    vfprintf@cfmt 001C  
           interrupt_intx_enable@INTERRUPT_INTX 0004                 ADC_ISconversion_result@ADC_conf 0004  
                                        ___lmul 43B4                         led_intialize@pin_config 0013  
                                     ??___fladd 0033                                       ??___fldiv 001A  
                                     ??___awdiv 0008                                       ??___awmod 0008  
                                     ??___flmul 0043                                       ??___flsub 0043  
                                     ??___fltol 0058                  GPIO_pIN_WRITE_LOGIC@config_pin 0004  
                                     ??___lldiv 0018                           _interrupt_intx_enable 4024  
                              led_intialize@led 0011                                          _memset 49E8  
                                        clear_0 3D5C                                          clear_1 3D68  
                              ___awdiv@quotient 000A                                 ___awmod@divisor 0006  
                                _ccp1_pwm_start 4CAA                                          isa$std 0001  
                                _Timer0_preload 0096                                 ___awmod@counter 0008  
                       _TIMER0_Interrupthandler 0098                                          _string 0163  
                                _Timer1_preload 0092     _I2C_Report_Receive_Overflow_InterruptHandle 00B0  
                                        fputc@c 0004                         interrupt_intx_clear@ret 0008  
                                _Timer2_preload 00C8                                       ?_CCP1_ISR 0001  
                                  __pdataCOMRAM 006F                                       ?_CCP2_ISR 0001  
                               _morot_turn_left 4842                                  _Timer3_preload 008C  
                       __end_of_timer3_mode_cfg 4024                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                                       ?_ADC_inti 0007  
                  interrupt_intx_sethandler@ret 000A                                          putch@c 0001  
                              __end_of_vfprintf 4804                           _ADC_handeler_funvtion 4D1A  
                                     ??_sprintf 0024                    ?_ADC_get_conversion_blocking 000C  
                  __end_of_select_result_format 47C4                                    ___xxtofl@arg 000E  
                                  ___xxtofl@exp 000D                                    ___xxtofl@val 0004  
                              ??_int1_interrupt 0001                         _convert_uint8_to_string 460E  
                                    __accesstop 0080                         __end_of__initialization 3D78  
                                     ?_INT0_ISR 0001                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                          _intitialized_functions 3F22  
                                 ___rparam_used 0001                                      ___fltol@f1 0054  
                              ??_lcd_send_4bits 000F                      convert_uint8_to_string@str 0031  
                 __end_of_ADC_ISconversion_done 46A6                         _lcd_4bit_send_char_data 4552  
                                __pcstackCOMRAM 0001                          _MSSP_I2C_Mode_GPIO_CFG 4D04  
                               _motor_intialize 4A20                      _I2C_DefaultInterruptHandle 00B2  
                     ?_interrupt_intx_edge_inti 0004                                    __pidataBANK0 4B7A  
                                  __pidataBANK1 48FC                        _RB6_interrupthandler_low 009E  
                        __end_of_ccp1_pwm_start 4CBC                                   __end_of_fputc 3862  
                                 __end_of_putch 4D20                        lcd_4bit_send_command@lcd 0011  
                      lcd_4bit_send_command@ret 0013                             __end_of_Timer2_init 3F22  
                           __end_of_Timer3_init 3A74                              morot_turn_left@ret 000F  
                _USART_OVERRUN_Interrupthandler 0084                                      ??_CCP1_ISR 0001  
                                    ??_CCP2_ISR 0001                        timer3_reg_bit_cfg@Timer3 0004  
                          __end_of_led_turn_off 4348                                ??_into_interrupt 0001  
                                    ??_ADC_inti 0009    ADC_get_conversion_blocking@conversion_status 000F  
          __end_of_GPIO_pIN_DIRECTION_INTIALIZE 2FDC                    _GPIO_pIN_DIRECTION_INTIALIZE 2EA8  
                                       ??_fputc 0007                       _USART_TX_Interrupthandler 008A  
                                       ??_putch 0004                                      __pbssBANK0 0080  
                                    __pbssBANK1 013D                        GPIO_pIN_TOGGLE_LOGIC@ret 0009  
                                    ??_INT0_ISR 0001                                      ??_INT1_ISR 0001  
                                    ??_INT2_ISR 0001                        motor_intialize@motor_pin 0011  
                  __end_of_GPIO_pIN_WRITE_LOGIC 3352                            relay_intialize@F3060 00CC  
              __end_of_INT2_setinterrupthandler 4BE6                          ?_interrupt_intx_enable 0004  
                                       ?___lmul 0004                               led_turn_off@F3070 00CE  
                                  ??_TIMER0_ISR 0001                                 ?_ccp1_pwm_start 0001  
                                  ??_TIMER1_ISR 0001                                    ??_TIMER2_ISR 0001  
                                 led_toggle@led 000A                                    ??_TIMER3_ISR 0001  
                       __end_of_morot_turn_left 4880                 GPIO_pIN_TOGGLE_LOGIC@config_pin 0004  
                               led_toggle@F3075 00CD                                         ?_memset 0004  
                                ___lmul@product 000C                               __end_of_ccp1_init 2D62  
      ADC_ISconversion_result@conversion_result 0006               __end_of_interrupt_intx_sethandler 3B20  
                                       _RB4_ISR 4C90                                         _RB5_ISR 4C76  
                                       _RB6_ISR 4C5C                                         _RB7_ISR 4C42  
                                     ?___xxtofl 0004                       ?_lcd_4bit_send_string_pos 001A  
                                 ?_MSSP_I2C_ISR 0001                                ?_timer3_mode_cfg 0004  
                        ?_ADC_handeler_funvtion 0001                       ??_convert_uint8_to_string 0033  
                      ?_interrupt_intx_pin_inti 0011                   ?_GPIO_pIN_DIRECTION_INTIALIZE 0004  
                                    _led_toggle 4486                                  _tris_regisrers 00E1  
                            __end_of_TIMER0_ISR 4CF4                              __end_of_TIMER1_ISR 4CE6  
                            __end_of_TIMER2_ISR 4CFC                              __end_of_TIMER3_ISR 4CD8  
                       _TIMER1_Interrupthandler 0094                         __end_of_motor_intialize 4A56  
               ??_I2C_Slave_Mode_Configurations 0006                       ??_lcd_4bit_send_char_data 0013  
                                       _i2c_ack 00C2                               ??_MSSP_I2C_BC_ISR 0001  
                                       __Hparam 0000                      ??_INT1_setinterrupthandler 0006  
                                       __Lparam 0000                                     _Timer2_init 3E9A  
                                   _Timer3_init 39C8                                      _key_data_1 00C0  
                                    _key_data_2 00BF                                         ___fladd 15F2  
                                       ___fldiv 22D2                                         ___awdiv 3626  
                                       ___awmod 3918      adc_channel_port_confige@ADC_CHANNAL_SELECT 0006  
                                       ___flmul 1AB2                     __end_of_Interrupt_Intx_Inti 4552  
                                       ___flsub 473A                                         ___fltol 3352  
                                       ___lldiv 3B20                                       ?_vfprintf 0019  
                                  __psmallconst 1000                                         __pcinit 3CF6  
                          _select_result_format 4780                                         __ramtop 1000  
                        _interrupt_intx_disable 411C                                         __ptext0 1078  
                                       __ptext1 4804                                         __ptext2 4842  
                                       __ptext3 4880                                         __ptext4 4270  
                                       __ptext5 42DC                                         __ptext6 4486  
                                       __ptext7 3D82                                         __ptext8 3E0E  
                                       __ptext9 3C5E                   __end_of_GPIO_pIN_TOGGLE_LOGIC 3E0E  
                                     _T0CONbits 0FD5                                       _T1CONbits 0FCD  
                                       _counter 00C3                                  ??_MSSP_I2C_ISR 0001  
                                     _T2CONbits 0FCA                                      ??___xxtofl 0008  
                                     _T3CONbits 0FB1                       ?_INT0_setinterrupthandler 0004  
                              ___awmod@dividend 0004                                         _relay_1 00F2  
                                       _relay_2 00F1                   __end_of_configure_voltage_ref 473A  
                       _ADC_ISconversion_result 36EA                    __end_of_interrupt_intx_clear 4200  
                                       _value_1 00D5                                         _motor_1 00FD  
                                       _motor_2 00FB                      __end_of_ADC_select_channal 49B0  
                                       _sprintf 493A           lcd_4bit_intialize@l_data_pins_counter 0016  
                      _adc_channel_port_confige 354E                                  __pintcode_body 1EDC  
        ADC_ISconversion_done@conversion_status 0006                            end_of_initialization 3D78  
                             lcd_send_4bits@lcd 000D                               lcd_send_4bits@ret 0010  
                                       fputc@fp 0006                                         memset@c 0006  
                                       memset@n 0008                                         memset@p 000A  
                                       int_func 1EDC                      __end_of_lcd_4bit_intialize 354E  
                       ??_lcd_4bit_send_command 0013                                _morot_turn_right 4804  
                      morot_turn_left@motor_pin 000D                               __end_of_value_ret 1011  
                               ___lldiv@divisor 0014                                 ___lldiv@counter 001C  
                     _RB4_interrupthandler_high 00A8                               __end_of_vfpfcnvrt 2A50  
                                     _RCSTAbits 0FAB                        interrupt_intx_enable@ret 0008  
               __end_of_convert_uint8_to_string 465A                                         postdec1 0FE5  
                     _RB7_interrupthandler_high 009C                                         postdec2 0FDD  
                       GPIO_pIN_WRITE_LOGIC@ret 000C                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 0014                                      _morot_stop 4880  
                                    ??_vfprintf 001C                                 _matrix_keypad_1 010A  
                     GPIO_pIN_WRITE_LOGIC@logic 0006                                ?_morot_turn_left 000D  
                         ?_select_result_format 0004                        _INT2_setinterrupthandler 4BC6  
               __end_of_lcd_4bit_send_char_data 45B0                                       _PORTBbits 0F81  
                                   ___fladd@grs 003A                      lcd_4bit_send_char_data@lcd 0011  
                          _GPIO_pIN_WRITE_LOGIC 3236                      lcd_4bit_send_char_data@ret 0013  
                                 ___xxtofl@sign 000C                                       _TRISCbits 0F94  
                                   ___fldiv@grs 0025                                     ___fldiv@rem 001E  
                       ?_intitialized_functions 0001                                   ?_USART_RX_ISR 0001  
                                   ?_led_toggle 000A                                   ?_USART_TX_ISR 0001  
                    __end_of_GPIO_pIN_INTIALIZE 43B4                                     ___flmul@grs 0049  
                              ADC_inti@ADC_conf 0007                                     _CCP1CONbits 0FBD  
                              ?_motor_intialize 0011                                     _CCP2CONbits 0FBA  
                                     _TXSTAbits 0FAC                         ?_MSSP_I2C_Mode_GPIO_CFG 0001  
                ??_GPIO_pIN_DIRECTION_INTIALIZE 0006                                    _led_turn_off 42DC  
                         __end_of_led_intialize 4486              interrupt_intx_clear@INTERRUPT_INTX 0004  
                           _lcd_4bit_set_cursor 3C5E                              relay_turn_on@F3065 00CB  
         __end_of_I2C_Slave_Mode_Configurations 4C42                   _I2C_Slave_Mode_Configurations 4C26  
                             relay_toggle@F3075 00C9                     lcd_4bit_send_string_pos@lcd 001A  
                  __end_of_ADC_start_conversion 4BC6                     lcd_4bit_send_string_pos@row 001B  
                   lcd_4bit_send_string_pos@str 001D                   convert_uint16_to_string@F3210 015D  
                     interrupt_intx_disable@ret 0008                                  __end_of___lmul 441E  
                                   vfpfcnvrt@ap 0010                                     vfpfcnvrt@cp 0013  
                                   vfpfcnvrt@fp 000E                                     _BAUDCONbits 0FB8  
                                 __pidataCOMRAM 4CFC                         _TIMER2_Interrupthandler 0090  
                                __end_of_memset 4A20                       ??_ADC_ISconversion_result 0007  
                         ?_GPIO_pIN_WRITE_LOGIC 0004                             start_initialization 3CF6  
                                 ??_led_turn_on 000E                    ?_lcd_4bit_send_enable_signal 000D  
                          ?_lcd_4bit_set_cursor 0014                                     __end_of_abs 4A8A  
                __end_of_intitialized_functions 3FA6                                    _key_i2c_tran 00BE  
                                ??_USART_RX_ISR 0001                      ADC_ISconversion_result@ret 000A  
                                ??_USART_TX_ISR 0001                  __end_of_MSSP_I2C_Mode_GPIO_CFG 4D0A  
         interrupt_intx_pin_inti@INTERRUPT_INTX 0011                                 led_turn_off@led 000D  
                       ??_interrupt_intx_enable 0006          interrupt_intx_edge_inti@INTERRUPT_INTX 0004  
                              ??_ccp1_pwm_start 0004                            __end_of_MSSP_I2C_ISR 4AEA  
                                   vfprintf@fmt 001A                           timer3_mode_cfg@Timer3 0004  
                          _interrupt_intx_clear 418E                                        ??___lmul 000C  
                         _ADC_ISconversion_done 465A                        _RB5_interrupthandler_low 00A2  
                        ??_select_result_format 0006                                     ?_morot_stop 000D  
                                   __pdataBANK0 00D7                                     __pdataBANK1 0100  
                           morot_turn_right@ret 000F                                        ??_memset 000A  
                                    memset@dest 0004                    lcd_4bit_send_command@command 0012  
        GPIO_pIN_DIRECTION_INTIALIZE@config_pin 0004                         ??_ADC_handeler_funvtion 0001  
                    __end_of_timer3_reg_bit_cfg 48FC                                       ___fladd@a 002F  
                                     ___fladd@b 002B                            MSSP_I2C_Init@i2c_obj 0061  
                                     ___fldiv@a 0016                                       ___fldiv@b 0012  
                                      ?_RB4_ISR 0001                                        ?_RB5_ISR 0001  
                                      ?_RB6_ISR 0001                                        ?_RB7_ISR 0001  
                                     ___flmul@a 003F                                       ___flmul@b 003B  
                                   __pbssCOMRAM 0076                           ??_lcd_4bit_set_cursor 0017  
                                     ___flsub@a 003F                                       ___flsub@b 003B  
                                     _ccp1_init 2C04     _I2C_Report_Write_Collision_InterruptHandler 00B4  
                                 __pcstackBANK1 016E                    convert_uint8_to_string@value 0033  
                               _MSSP_I2C_BC_ISR 4D0E                       _USART_RX_Interrupthandler 0088  
                                   _data_return 00C7                             __end_of_led_turn_on 42DC  
                      _interrupt_intx_edge_inti 310A                                       _main$5571 016E  
                                 _MSSP_I2C_Init 2D62   ADC_get_conversion_blocking@ADC_CHANNAL_SELECT 000E  
                                  ?_Timer2_init 0004                           ?_interrupt_intx_clear 0004  
                                  ?_Timer3_init 0006                __end_of_INT0_setinterrupthandler 4C26  
                                     __pintcode 0008                                        ?___fladd 002B  
                                      ?___fldiv 0012                                        ?___awdiv 0004  
                                      ?___awmod 0004                                        ?___flmul 003B  
                                      ?___flsub 003B                                        ?___fltol 0054  
                       ?_interrupt_intx_disable 0004                               fp__int1_interrupt 0000  
                                      ?___lldiv 0010                  ?_I2C_Slave_Mode_Configurations 0004  
                        ??_GPIO_pIN_WRITE_LOGIC 0007                      ??_adc_channel_port_confige 0004  
                                   __smallconst 1000                        __end_of_morot_turn_right 4842  
                                      _CCP1_ISR 4D16                                        _CCP2_ISR 4D12  
                             _interrupt_manager 0008                                      ?_ccp1_init 001D  
                    ?_interrupt_intx_sethandler 0006                           _Int0_interrupthandler 00AE  
                  select_result_format@ADC_conf 0004                                        _ADC_inti 3862  
                            ?_interrupt_manager 0001             __end_of_ADC_get_conversion_blocking 411C  
                   _ADC_get_conversion_blocking 40A2                                        ?_sprintf 001D  
                          _ADC_start_conversion 4BA2                          led_turn_off@pin_config 000F  
                             _ccp1_pwm_set_duty 2FDC                             ??_interrupt_manager 0002  
                             _ccp1_pwm_set_stop 4CBC                         _TIMER3_Interrupthandler 008E  
                                      _INT0_ISR 4B4A                                        _INT1_ISR 4B1A  
                                      _INT2_ISR 4AEA                                     _l_direction 00C6  
                             fp__into_interrupt 0000                                        _IPR2bits 0FA2  
                            ?_ccp1_pwm_set_duty 005E                                        _PIE1bits 0F9D  
                                      _PIE2bits 0FA0                   ??_ADC_get_conversion_blocking 0010  
                            ?_ccp1_pwm_set_stop 0001                                  ?_MSSP_I2C_Init 0061  
      MSSP_I2C_Interrupt_Configurations@i2c_obj 0004                              _ADC_select_channal 4976  
                 __end_of_lcd_4bit_send_command 460E                      ??_INT2_setinterrupthandler 0006  
                                      _PIR1bits 0F9E                                        _PIR2bits 0FA1  
                                      i2u710_40 269A                                        i2u710_41 2696  
                                      i2u711_40 26B2                                        i2u711_41 26AE  
                                      i2u720_40 2764                                        i2u712_40 26C4  
                                      i2u720_41 2760                                        i2u712_41 26C0  
                                      i2u721_40 2776                                        i2u713_40 26DE  
                                      i2u721_41 2772                                        i2u713_41 26DA  
                                      i2u730_40 2818                                        i2u722_40 2788  
                                      i2u714_40 26F0                                        i2u730_41 2814  
                                      i2u722_41 2784                                        i2u714_41 26EC  
                                      i2u731_40 282A                                        i2u723_40 279A  
                                      i2u715_40 2702                                        i2u731_41 2826  
                                      i2u723_41 2796                                        i2u715_41 26FE  
                                      i2u732_40 283C                                        i2u724_40 27AC  
                                      i2u716_40 2714                                        i2u708_40 267C  
                                      i2u900_40 2222                                        i2u732_41 2838  
                                      i2u724_41 27A8                                        i2u716_41 2710  
                                      i2u708_41 2678                                        i2u900_41 221E  
                                      i2u733_40 284E                                        i2u725_40 27BE  
                                      i2u717_40 272E                                        i2u709_40 268A  
                                      i2u901_40 2234                                        i2u733_41 284A  
                                      i2u725_41 27BA                                        i2u717_41 272A  
                                      i2u709_41 2686                                        i2u901_41 2230  
                        ?_ADC_ISconversion_done 0004                                        i2u734_40 2860  
                                      i2u726_40 27D0                                        i2u718_40 2740  
                                      i2u910_40 22C2                                        i2u902_40 2242  
                                      i2u734_41 285C                                        i2u726_41 27CC  
                                      i2u718_41 273C                                        i2u910_41 22BE  
                                      i2u902_41 223E                                        i2u735_40 2878  
                                      i2u727_40 27E2                                        i2u719_40 2752  
                                      i2u903_40 2254                                        i2u735_41 2874  
                                      i2u727_41 27DE                                        i2u719_41 274E  
                                      i2u903_41 2250                                        i2u728_40 27F4  
                                      i2u904_40 2262                                        i2u728_41 27F0  
                                      i2u904_41 225E                                        i2u729_40 2806  
                                      i2u905_40 2274                                        i2u729_41 2802  
                                      i2u905_41 2270                                        i2u906_40 2282  
                                      i2u906_41 227E                                        i2u907_40 2294  
                                      i2u851_40 1EF4                                        i2u907_41 2290  
                                      i2u851_41 1EF0                  __end_of_interrupt_intx_disable 418E  
                                      i2u908_40 22A2                                        i2u860_40 1F80  
                                      i2u852_40 1F02                                        i2u908_41 229E  
                                      i2u860_41 1F7C                                        i2u852_41 1EFE  
                                      i2u781_40 4B60                                        i2u780_48 4AD6  
                                      i2u909_40 22B4                                        i2u861_40 1F98  
                                      i2u853_40 1F14                                        i2u781_41 4B5C  
                                      i2u780_49 4AE8                                        i2u909_41 22B0  
                                      i2u861_41 1F94                                        i2u853_41 1F10  
                                      i2u790_40 4C56                                        i2u870_40 202E  
                                      i2u862_40 1FA6                                        i2u854_40 1F22  
                                      i2u790_41 4C52                                        i2u870_41 202A  
                                      i2u862_41 1FA2                                        i2u854_41 1F1E  
                                      i2u782_48 4B66                                        i2u783_40 4B30  
                                      i2u871_40 203C                                        i2u863_40 1FB4  
                                      i2u855_40 1F34                                        i2u782_49 4B78  
                                      i2u783_41 4B2C                                        i2u871_41 2038  
                                      i2u863_41 1FB0                                        i2u855_41 1F30  
                                      i2u880_40 20D4                                        i2u872_40 204C  
                                      i2u864_40 1FC4                                        i2u856_40 1F42  
                                      i2u880_41 20D0                                        i2u872_41 2048  
                                      i2u864_41 1FC0                                        i2u856_41 1F3E  
                                      i2u784_48 4B36                                        i2u785_40 4B00  
                                      i2u881_40 20EC                                        i2u873_40 2064  
                                      i2u865_40 1FDC                                        i2u857_40 1F54  
                                      i2u784_49 4B48                                        i2u785_41 4AFC  
                                      i2u881_41 20E8                                        i2u873_41 2060  
                                      i2u865_41 1FD8                                        i2u857_41 1F50  
                                      i2u890_40 2182                                        i2u882_40 20FA  
                                      i2u874_40 2072                                        i2u866_40 1FEA  
                                      i2u858_40 1F62                                        i2u890_41 217E  
                                      i2u882_41 20F6                                        i2u874_41 206E  
                                      i2u866_41 1FE6                                        i2u858_41 1F5E  
                                      i2u786_48 4B06                                        i2u779_40 4AD0  
                                      i2u787_40 4CA4                                        i2u891_40 2194  
                                      i2u883_40 2108                                        i2u875_40 2080  
                                      i2u867_40 1FF8                                        i2u859_40 1F70  
                                      i2u786_49 4B18                                        i2u779_41 4ACC  
                                      i2u787_41 4CA0                                        i2u891_41 2190  
                                      i2u883_41 2104                                        i2u875_41 207C  
                                      i2u867_41 1FF4                                        i2u859_41 1F6C  
                                      i2u788_40 4C8A                                        i2u892_40 21A2  
                                      i2u884_40 2118                                        i2u876_40 2090  
                                      i2u868_40 2008                                        i2u788_41 4C86  
                                      i2u892_41 219E                                        i2u884_41 2114  
                                      i2u876_41 208C                                        i2u868_41 2004  
                                      i2u789_40 4C70                                        i2u893_40 21B4  
                                      i2u885_40 2130                                        i2u877_40 20A8  
                                      i2u869_40 2020                                        i2u789_41 4C6C  
                                      i2u893_41 21B0                                        i2u885_41 212C  
                                      i2u877_41 20A4                                        i2u869_41 201C  
                                      i2u894_40 21C2                                        i2u886_40 213E  
                                      i2u878_40 20B6                                        i2u894_41 21BE  
                                      i2u886_41 213A                                        i2u878_41 20B2  
                                      i2u895_40 21D4                                        i2u887_40 214C  
                                      i2u879_40 20C4                                        i2u895_41 21D0  
                                      i2u887_41 2148                                        i2u879_41 20C0  
                                      i2u896_40 21E2                                        i2u888_40 215C  
                                      i2u896_41 21DE                                        i2u888_41 2158  
                                      i2u897_40 21F4                                        i2u889_40 2174  
                                      i2u897_41 21F0                                        i2u889_41 2170  
                                      i2u898_40 2202                                        i2u898_41 21FE  
                                      i2u899_40 2214                                        i2u899_41 2210  
                                     _value_ret 1001                             ??_ccp1_pwm_set_duty 0062  
              _USART_FRAMERROR_Interrupthandler 0086                             ??_ccp1_pwm_set_stop 0004  
                          __end_of_USART_RX_ISR 4D22            I2C_Slave_Mode_Configurations@i2c_obj 0004  
                           ?_ADC_select_channal 0007                            __end_of_USART_TX_ISR 4D0E  
                            _lcd_4bit_intialize 3458                                       _vfpfcnvrt 2882  
                      _lcd_4bit_send_string_pos 3E0E                       __end_of_interrupt_manager 22D2  
                                    _ADCON0bits 0FC2                                      _ADCON1bits 0FC1  
                                    _ADCON2bits 0FC0                 GPIO_pIN_DIRECTION_INTIALIZE@ret 000B  
                       __end_of_MSSP_I2C_BC_ISR 4D12                        ?_convert_uint8_to_string 0031  
                         _GPIO_pIN_TOGGLE_LOGIC 3D82                               Timer2_init@Timer2 0004  
                           ?_lcd_4bit_intialize 0014                       ?_INT1_setinterrupthandler 0004  
           fp__mssp_I2C_DefaultInterruptHandler 0000        __end_of_mssp_I2C_DefaultInterruptHandler 2882  
            ??_mssp_I2C_DefaultInterruptHandler 0001               ?_mssp_I2C_DefaultInterruptHandler 0001  
              _mssp_I2C_DefaultInterruptHandler 266C                                     _led_turn_on 4270  
                                    vfpfcnvrt@c 0018                           _configure_voltage_ref 46F0  
                         ?_ADC_start_conversion 0004                  ADC_get_conversion_blocking@ret 0011  
                             ccp1_pwm_start@ret 0004                               ___lmul@multiplier 0004  
                                   _INTCON2bits 0FF1                                     _INTCON3bits 0FF0  
                      ?_lcd_4bit_send_char_data 0011                                       copy_data0 3D0A  
                                     copy_data1 3D2A                                       copy_data2 3D4A  
                     __end_of_ccp1_pwm_set_duty 310A                       __end_of_ccp1_pwm_set_stop 4CCA  
                          ??_ADC_select_channal 000A                                    ??_led_toggle 000B  
                                      _i2c_data 007A                                      _EECON1bits 0FA6  
                          ??_lcd_4bit_intialize 0015                                  led_turn_on@led 000D  
                        ??_interrupt_intx_clear 0006                                        __Hrparam 0000  
                                      _Timer3_1 0169                                      vfprintf@ap 001B  
                                      __Lrparam 0000                                      vfprintf@fp 0019  
                     _RB5_interrupthandler_high 00A4                              _GPIO_pIN_INTIALIZE 4348  
                         ADC_select_channal@ret 000B                          lcd_4bit_set_cursor@lcd 0014  
                        lcd_4bit_set_cursor@ret 0019                                      ?_vfpfcnvrt 000E  
                        lcd_4bit_set_cursor@row 0015                        _INT0_setinterrupthandler 4C06  
                      ADC_ISconversion_done@ret 0007                              __end_of_led_toggle 44EC  
                     morot_turn_right@motor_pin 000D                             ?_GPIO_pIN_INTIALIZE 000D  
                            led_intialize@F3060 00D0                                      sprintf@fmt 001F  
                                      ___xxtofl 2A50                                     ??_ccp1_init 001F  
                             Timer3_init@Timer3 0006                                    _MSSP_I2C_ISR 4ABA  
ADC_get_conversion_blocking@l_conversion_status 0010                                        _lcd_4bit 00F5  
             Interrupt_Intx_Inti@INTERRUPT_INTX 0014                                        __ptext10 4552  
                                      __ptext11 3F22                                        __ptext20 3B20  
                                      __ptext12 4A20                                        __ptext21 39C8  
                                      __ptext13 441E                                        __ptext30 44EC  
                                      __ptext22 48BE                                        __ptext14 3458  
                                      __ptext31 3A74                                        __ptext23 3FA6  
                                      __ptext15 45B0                                        __ptext40 310A  
                                      __ptext32 4BC6                                        __ptext24 3E9A  
                                      __ptext16 4200                                        __ptext41 411C  
                                      __ptext33 4BE6                                        __ptext25 2D62  
                                      __ptext17 49B0                                        __ptext50 37A8  
                                      __ptext42 418E                                        __ptext34 4C06  
                                      __ptext26 4D04                                        __ptext18 2C04  
                                      __ptext51 4D1E                                        __ptext43 3862  
                                      __ptext35 4A8A                                        __ptext27 46A6  
                                      __ptext19 43B4                                        __ptext60 3352  
                                      __ptext52 4A56                                        __ptext44 4780  
                                      __ptext36 4348                                        __ptext28 4C26  
                                      __ptext61 473A                                        __ptext53 3918  
                                      __ptext45 46F0                                        __ptext37 3236  
                                      __ptext29 3BC4                                        __ptext70 465A  
                                      __ptext62 15F2                                        __ptext54 3626  
                                      __ptext46 460E                                        __ptext38 2EA8  
                                      __ptext63 1AB2                                        __ptext55 49E8  
                                      __ptext47 493A                                        __ptext39 4024  
                                      __ptext80 4C76                                        __ptext72 4D0A  
                                      __ptext64 22D2                                        __ptext56 4CAA  
                                      __ptext48 47C4                                        __ptext81 4C90  
                                      __ptext73 4D20                                        __ptext65 40A2  
                                      __ptext57 4CBC                                        __ptext49 2882  
                                      __ptext90 4D12                                        __ptext82 4ABA  
                                      __ptext74 4CCA                                        __ptext66 4BA2  
                                      __ptext58 2FDC                                        __ptext91 4D16  
                                      __ptext83 266C                                        __ptext75 4CF4  
                                      __ptext67 4976                                        __ptext59 2A50  
                                      __ptext92 4D1A                                        __ptext84 4D0E  
                                      __ptext76 4CD8                                        __ptext68 354E  
                                      __ptext93 0000                                        __ptext85 4AEA  
                                      __ptext77 4CE6                                        __ptext69 36EA  
                                      __ptext86 4B1A                                        __ptext78 4C42  
                                      __ptext87 4B4A                                        __ptext79 4C5C  
                                      __ptext88 4D22                                        __ptext89 4D24  
   I2C_Master_Mode_Clock_Configurations@i2c_obj 005E         interrupt_intx_sethandler@INTERRUPT_INTX 0006  
                  ccp1_pwm_set_duty@l_duty_temp 006C                           _CCP1_Interrupthandler 00B8  
                                      _counter_ 00C1                                        _button_1 00EE  
                                      _button_2 00EB                                 ??_MSSP_I2C_Init 0063  
                                ccp1_init@ccp1_ 001D                            ??_GPIO_pIN_INTIALIZE 000F  
                         led_turn_on@pin_config 000F                         _interrupt_intx_pin_inti 4A8A  
                         _Int1_interrupthandler 00AC                   __end_of_interrupt_intx_enable 40A2  
                                      _mssp_i2c 0112                               ??_timer3_mode_cfg 0006  
                                      isa$xinst 0000                    ADC_start_conversion@ADC_conf 0004  
                                _int1_interrupt 4D22                                        int$flags 007B  
                                  ??_morot_stop 000E                                   morot_stop@ret 000F  
                                      _vfprintf 47C4                                  _lcd_send_4bits 4200  
              __end_of_adc_channel_port_confige 3626                          ?_GPIO_pIN_TOGGLE_LOGIC 0004  
                              ?_MSSP_I2C_BC_ISR 0001                            led_toggle@pin_config 000C  
                 configure_voltage_ref@ADC_conf 0004                                      _INTCONbits 0FF2  
                 __end_of_ADC_handeler_funvtion 4D1E                          ?_configure_voltage_ref 0004  
                        ??_ADC_start_conversion 0006                      ADC_select_channal@ADC_conf 0007  
                    ??_interrupt_intx_edge_inti 0006                                        intlevel2 0000  
                                     sprintf@ap 0024                              _timer3_reg_bit_cfg 48BE  
                       ADC_start_conversion@ret 0006                              __end_of_morot_stop 48BE  
                lcd_4bit_send_enable_signal@lcd 000D                  lcd_4bit_send_enable_signal@ret 000F  
                              ___lldiv@dividend 0010                                  _into_interrupt 4D24  
                        _ccp1_pwm_set_duty$5568 0068                          __end_of_int1_interrupt 4D24  
                           ?_timer3_reg_bit_cfg 0004                    GPIO_pIN_INTIALIZE@config_pin 000D  
                      _RB4_interrupthandler_low 00A6                        _RB7_interrupthandler_low 009A  
                        __end_of_lcd_send_4bits 4270                        ?_ADC_ISconversion_result 0004  
                            motor_intialize@ret 0013                                      _TIMER0_ISR 4CE6  
                                    _TIMER1_ISR 4CD8                                      _TIMER2_ISR 4CF4  
                                    _TIMER3_ISR 4CCA                                     ??_vfpfcnvrt 0011  
                   __end_of_lcd_4bit_set_cursor 3CF6       __end_of_MSSP_I2C_Interrupt_Configurations 46F0  
           ??_MSSP_I2C_Interrupt_Configurations 0006              ?_MSSP_I2C_Interrupt_Configurations 0004  
             _MSSP_I2C_Interrupt_Configurations 46A6                                        sprintf@f 0025  
                                      sprintf@s 001D                                ___lldiv@quotient 0018  
                                _port_regisrers 0100                               ?_morot_turn_right 000D  
                          ??_timer3_reg_bit_cfg 0006                     ??_interrupt_intx_sethandler 0008  
           ADC_get_conversion_blocking@ADC_conf 000C                                     _SSPCON1bits 0FC6  
                                   _SSPCON2bits 0FC5                              ??_morot_turn_right 000E  
                                 ___fladd@signs 0037                          __end_of_into_interrupt 4D26  
                                  _USART_RX_ISR 4D20                                    _USART_TX_ISR 4D0A  
                             ??_morot_turn_left 000E                                    ___fladd@aexp 0038  
                     ??_interrupt_intx_pin_inti 0013                                    ___fladd@bexp 0039  
                   lcd_4bit_send_char_data@data 0012                         ??_ADC_ISconversion_done 0007  
                           _Interrupt_Intx_Inti 44EC                      ??_lcd_4bit_send_string_pos 001F  
                               ?_int1_interrupt 0001  
